[{"/Users/delaine/Documents/GitHub/firefly/src/index.js":"1","/Users/delaine/Documents/GitHub/firefly/src/App.js":"2","/Users/delaine/Documents/GitHub/firefly/src/redux/store/index.js":"3","/Users/delaine/Documents/GitHub/firefly/src/dashboard.js":"4","/Users/delaine/Documents/GitHub/firefly/src/firebase.js":"5","/Users/delaine/Documents/GitHub/firefly/src/loggedOut.js":"6","/Users/delaine/Documents/GitHub/firefly/src/auth.js":"7","/Users/delaine/Documents/GitHub/firefly/src/Utilities/theDate.js":"8","/Users/delaine/Documents/GitHub/firefly/src/redux/reducers/index.js":"9","/Users/delaine/Documents/GitHub/firefly/src/redux/actions/index.js":"10","/Users/delaine/Documents/GitHub/firefly/src/redux/types/index.js":"11","/Users/delaine/Documents/GitHub/lights/src/index.js":"12","/Users/delaine/Documents/GitHub/lights/src/App.js":"13","/Users/delaine/Documents/GitHub/lights/src/redux/store/index.js":"14","/Users/delaine/Documents/GitHub/lights/src/navbar.js":"15","/Users/delaine/Documents/GitHub/lights/src/ShowsToWatch.js":"16","/Users/delaine/Documents/GitHub/lights/src/places.js":"17","/Users/delaine/Documents/GitHub/lights/src/activities.js":"18","/Users/delaine/Documents/GitHub/lights/src/dashboard.js":"19","/Users/delaine/Documents/GitHub/lights/src/makeRandomPost.js":"20","/Users/delaine/Documents/GitHub/lights/src/CurrentSubScriptions.js":"21","/Users/delaine/Documents/GitHub/lights/src/changeProfilePic.js":"22","/Users/delaine/Documents/GitHub/lights/src/watch.js":"23","/Users/delaine/Documents/GitHub/lights/src/firebase.js":"24","/Users/delaine/Documents/GitHub/lights/src/loggedOut.js":"25","/Users/delaine/Documents/GitHub/lights/src/LoggedIn.js":"26","/Users/delaine/Documents/GitHub/lights/src/Utilities/theDate.js":"27","/Users/delaine/Documents/GitHub/lights/src/redux/actions/index.js":"28","/Users/delaine/Documents/GitHub/lights/src/redux/reducers/index.js":"29","/Users/delaine/Documents/GitHub/lights/src/auth.js":"30","/Users/delaine/Documents/GitHub/lights/src/redux/types/index.js":"31","/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/index.js":"32","/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/App.js":"33","/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/redux/store/index.js":"34","/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/dashboard.js":"35","/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/loggedOut.js":"36","/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/firebase.js":"37","/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/Utilities/theDate.js":"38","/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/redux/reducers/index.js":"39","/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/redux/actions/index.js":"40","/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/auth.js":"41","/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/redux/types/index.js":"42","/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/navbar.js":"43","/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/activities.js":"44","/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/changeProfilePic.js":"45","/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/makeRandomPost.js":"46","/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/CurrentSubScriptions.js":"47","/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/ShowsToWatch.js":"48","/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/watch.js":"49","/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/places.js":"50","/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/LoggedIn.js":"51"},{"size":397,"mtime":1639155987074,"results":"52","hashOfConfig":"53"},{"size":2086,"mtime":1639156118840,"results":"54","hashOfConfig":"53"},{"size":371,"mtime":1638762703720,"results":"55","hashOfConfig":"53"},{"size":379,"mtime":1639171051584,"results":"56","hashOfConfig":"53"},{"size":1639,"mtime":1638814796245,"results":"57","hashOfConfig":"53"},{"size":120,"mtime":1639170058973,"results":"58","hashOfConfig":"53"},{"size":1791,"mtime":1639170154742,"results":"59","hashOfConfig":"53"},{"size":643,"mtime":1638914277268,"results":"60","hashOfConfig":"53"},{"size":318,"mtime":1638762300045,"results":"61","hashOfConfig":"53"},{"size":448,"mtime":1638764283933,"results":"62","hashOfConfig":"53"},{"size":98,"mtime":1638762234665,"results":"63","hashOfConfig":"53"},{"size":397,"mtime":1639155987074,"results":"64","hashOfConfig":"65"},{"size":1870,"mtime":1639181242585,"results":"66","hashOfConfig":"65"},{"size":371,"mtime":1638762703720,"results":"67","hashOfConfig":"65"},{"size":1165,"mtime":1639593245718,"results":"68","hashOfConfig":"65"},{"size":4855,"mtime":1639244094232,"results":"69","hashOfConfig":"65"},{"size":3007,"mtime":1639182085462,"results":"70","hashOfConfig":"65"},{"size":4833,"mtime":1639182165243,"results":"71","hashOfConfig":"65"},{"size":374,"mtime":1639594288991,"results":"72","hashOfConfig":"65"},{"size":3927,"mtime":1639181846893,"results":"73","hashOfConfig":"65"},{"size":5051,"mtime":1639181088494,"results":"74","hashOfConfig":"65"},{"size":118,"mtime":1639181793632,"results":"75","hashOfConfig":"65"},{"size":1656,"mtime":1639189503327,"results":"76","hashOfConfig":"65"},{"size":1631,"mtime":1639181809744,"results":"77","hashOfConfig":"65"},{"size":120,"mtime":1639170058973,"results":"78","hashOfConfig":"65"},{"size":2405,"mtime":1639595072718,"results":"79","hashOfConfig":"65"},{"size":643,"mtime":1638914277268,"results":"80","hashOfConfig":"65"},{"size":448,"mtime":1638764283933,"results":"81","hashOfConfig":"65"},{"size":318,"mtime":1638762300045,"results":"82","hashOfConfig":"65"},{"size":1791,"mtime":1639170154742,"results":"83","hashOfConfig":"65"},{"size":52,"mtime":1639594886969,"results":"84","hashOfConfig":"65"},{"size":397,"mtime":1639702981000,"results":"85","hashOfConfig":"86"},{"size":1870,"mtime":1639702981000,"results":"87","hashOfConfig":"86"},{"size":371,"mtime":1639702981000,"results":"88","hashOfConfig":"86"},{"size":374,"mtime":1639702981000,"results":"89","hashOfConfig":"86"},{"size":120,"mtime":1639702981000,"results":"90","hashOfConfig":"86"},{"size":1569,"mtime":1639702981000,"results":"91","hashOfConfig":"86"},{"size":643,"mtime":1639702981000,"results":"92","hashOfConfig":"86"},{"size":318,"mtime":1639702981000,"results":"93","hashOfConfig":"86"},{"size":448,"mtime":1639702981000,"results":"94","hashOfConfig":"86"},{"size":1791,"mtime":1639702981000,"results":"95","hashOfConfig":"86"},{"size":52,"mtime":1639702981000,"results":"96","hashOfConfig":"86"},{"size":1165,"mtime":1639702981000,"results":"97","hashOfConfig":"86"},{"size":4833,"mtime":1639702981000,"results":"98","hashOfConfig":"86"},{"size":118,"mtime":1639702981000,"results":"99","hashOfConfig":"86"},{"size":3891,"mtime":1639760312873,"results":"100","hashOfConfig":"86"},{"size":5051,"mtime":1639702981000,"results":"101","hashOfConfig":"86"},{"size":4855,"mtime":1639702981000,"results":"102","hashOfConfig":"86"},{"size":1656,"mtime":1639702981000,"results":"103","hashOfConfig":"86"},{"size":3007,"mtime":1639702981000,"results":"104","hashOfConfig":"86"},{"size":2405,"mtime":1639702981000,"results":"105","hashOfConfig":"86"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"b3dy9a",{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"108"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},"x2f1ni",{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"133"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"133"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"133"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"133"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"133"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"133"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y5okrf",{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217"},"/Users/delaine/Documents/GitHub/firefly/src/index.js",[],["218","219"],"/Users/delaine/Documents/GitHub/firefly/src/App.js",[],"/Users/delaine/Documents/GitHub/firefly/src/redux/store/index.js",[],"/Users/delaine/Documents/GitHub/firefly/src/dashboard.js",[],"/Users/delaine/Documents/GitHub/firefly/src/firebase.js",["220"],"import { useEffect, useState } from \"react\";\r\nimport { getFirestore, collection, getDocs, addDoc } from \"firebase/firestore\";\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  signOut,\r\n} from \"firebase/auth\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDlbAcw8uM21ci6gjcK9nnU8SueyOdOGsA\",\r\n  authDomain: \"firefly-16696.firebaseapp.com\",\r\n  projectId: \"firefly-16696\",\r\n  storageBucket: \"firefly-16696.appspot.com\",\r\n  messagingSenderId: \"937474357471\",\r\n  appId: \"1:937474357471:web:76690395960b787f6e916a\",\r\n  measurementId: \"G-M8GW0MKM8Q\",\r\n};\r\n// Initialize Firebase\r\ninitializeApp(firebaseConfig);\r\n\r\nconst db = getFirestore();\r\nconst colRef = collection(db, \"posts\");\r\n\r\n//get collection datat\r\ngetDocs(colRef).then((snapshot) => {\r\n  let posts = [];\r\n  snapshot.docs.forEach((doc) => {\r\n    posts.push({ ...doc.data(), id: doc.id });\r\n  });\r\n\r\n  console.log(posts);\r\n});\r\n\r\nconst auth = getAuth();\r\n\r\nexport function signup(email, password) {\r\n  return createUserWithEmailAndPassword(auth, email, password);\r\n}\r\n\r\nexport function login(email, password) {\r\n  return signInWithEmailAndPassword(auth, email, password);\r\n}\r\n\r\nexport function logout() {\r\n  return signOut(auth);\r\n}\r\n\r\nexport function useAuth() {\r\n  const [currentUser, setCurrentUser] = useState();\r\n\r\n  useEffect(() => {\r\n    const unsub = onAuthStateChanged(auth, (user) => setCurrentUser(user));\r\n    return unsub;\r\n  }, []);\r\n\r\n  return currentUser;\r\n}\r\n","/Users/delaine/Documents/GitHub/firefly/src/loggedOut.js",[],"/Users/delaine/Documents/GitHub/firefly/src/auth.js",[],"/Users/delaine/Documents/GitHub/firefly/src/Utilities/theDate.js",[],"/Users/delaine/Documents/GitHub/firefly/src/redux/reducers/index.js",["221"],"import { SET_LOGIN_STATUS } from \"../types\";\n\nconst INITIAL_STATE = {\n  loginStatus: false,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_LOGIN_STATUS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    default:\n      return INITIAL_STATE;\n  }\n};\n","/Users/delaine/Documents/GitHub/firefly/src/redux/actions/index.js",[],"/Users/delaine/Documents/GitHub/firefly/src/redux/types/index.js",[],"/Users/delaine/Documents/GitHub/lights/src/index.js",[],["222","223"],"/Users/delaine/Documents/GitHub/lights/src/App.js",[],"/Users/delaine/Documents/GitHub/lights/src/redux/store/index.js",[],"/Users/delaine/Documents/GitHub/lights/src/navbar.js",[],"/Users/delaine/Documents/GitHub/lights/src/ShowsToWatch.js",["224"],"import { useState, useEffect } from \"react\";\nimport {\n  updateDoc,\n  getFirestore,\n  collection,\n  getDocs,\n  deleteDoc,\n  addDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\n\nexport default function ShowsToWatch() {\n  const db = getFirestore();\n\n  const currentUser = useAuth();\n\n  const colRef = collection(db, \"currentShows\");\n\n  const [activeStatus, setActiveStatus] = useState(false);\n  const [show, setShow] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n  const [itemToUpdate, setItemToUpdate] = useState(\"\");\n  const [updating, setUpdating] = useState(false);\n  const [editedEntry, setEditedEntry] = useState(\"\");\n\n  function addItem(e) {\n    e.preventDefault();\n\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser?.email,\n      show: show,\n      active: false,\n    });\n    setShow(\"\");\n    fetchItems();\n  }\n\n  function fetchItems() {\n    getDocs(colRef).then((snapshot) => {\n      const items = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      console.log(items);\n      setDatabaseItems(items);\n    });\n  }\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  function updateItem(e) {\n    console.log(\"To be UPDATED \" + itemToUpdate);\n    if (itemToUpdate !== \"\") {\n      console.log(\"Updating\");\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        show: editedEntry,\n      }).then(() => {\n        console.log(\"It supposed to be updated\");\n      });\n      setUpdating(false);\n\n      fetchItems();\n    }\n  }\n  async function changeActiveStatus(e) {\n    const setItem = await setItemToUpdate(e.id);\n    console.log(setItem);\n    const isActive = await setActiveStatus(!e.active);\n    console.log(isActive);\n    return toggleDone();\n  }\n  function toggleDone(e) {\n    if (itemToUpdate !== \"\") {\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        active: activeStatus,\n      });\n    }\n    fetchItems();\n  }\n\n  function deleteItem(e) {\n    console.log(\"To be Deleted \" + itemToDelete);\n    if (itemToDelete !== \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"currentShows\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchItems();\n    }\n  }\n\n  return (\n    <div className=\"post-component\">\n      <br />\n      <br />\n\n      <form className=\"add\">\n        <input\n          rows=\"10\"\n          cols=\"70\"\n          value={show}\n          onChange={(e) => setShow(e.target.value)}\n          type=\"text\"\n          name=\"show\"\n          required\n        />\n        <br />\n        <button onClick={addItem}>Add show</button>\n      </form>\n\n      <div>\n        {\" \"}\n        <h2>Show List</h2>\n        for some reason you have to press the Active/inactive button 2 times\n        before it updates, idk why yet\n        <div>\n          {dataBaseItems.map((database, id) => (\n            <div className=\"insertedItem\" key={database.id}>\n              <p className=\"date\">{database.displayDate}</p>\n              <p> {database.show}</p>Added by: <i>{database.author}</i>\n              <br />\n              <div\n                onClick={() => {\n                  changeActiveStatus(database);\n                }}\n              >\n                {database.active ? (\n                  <button className=\"activeStyle\">In Progress</button>\n                ) : (\n                  <button className=\"inactiveStyle\">Not In Progress</button>\n                )}\n              </div>\n              {updating ? (\n                <div>\n                  {\" \"}\n                  <p>Change show to:</p>\n                  <input\n                    value={editedEntry}\n                    onChange={(e) => setEditedEntry(e.target.value)}\n                  />{\" \"}\n                  <button\n                    onClick={(e) => {\n                      updateItem();\n                    }}\n                  >\n                    Save\n                  </button>\n                </div>\n              ) : (\n                <div></div>\n              )}\n              <br />\n              <button\n                onClick={(e) => {\n                  setItemToUpdate(database.id);\n                  setUpdating(true);\n                }}\n              >\n                Edit\n              </button>\n              <button\n                className=\"delete\"\n                onClick={(e) => {\n                  setItemToDelete(database.id);\n                  deleteItem();\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/delaine/Documents/GitHub/lights/src/places.js",["225"],"import { useState, useEffect } from \"react\";\nimport {\n  getFirestore,\n  collection,\n  getDocs,\n  deleteDoc,\n  addDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\n\nexport default function Places() {\n  const db = getFirestore();\n\n  const currentUser = useAuth();\n\n  const colRef = collection(db, \"places\");\n\n  const [location, setLocation] = useState(\"\");\n  const [place, setPlace] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n\n  function addPlace(e) {\n    e.preventDefault();\n\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser?.email,\n      place: place,\n      location: location,\n    });\n    setPlace(\"\");\n    setLocation(\"\");\n    fetchPlaces();\n  }\n\n  function fetchPlaces() {\n    getDocs(colRef).then((snapshot) => {\n      const items = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      console.log(items);\n\n      setDatabaseItems(items);\n      dataBaseItems.sort((a, b) => (b.joinDate < a.joinDate ? 1 : -1));\n    });\n  }\n  useEffect(() => {\n    fetchPlaces();\n  }, []);\n\n  function deletePlace(e) {\n    console.log(\"To be Deleted \" + itemToDelete);\n    if (itemToDelete !== \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"places\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchPlaces();\n    }\n  }\n  return (\n    <div className=\" post-component\">\n      <br />\n      <br />\n\n      <form className=\"add\">\n        <label>Place:</label>\n        <input\n          rows=\"10\"\n          cols=\"70\"\n          value={place}\n          onChange={(e) => setPlace(e.target.value)}\n          type=\"text\"\n          name=\"place\"\n          required\n        />\n\n        <br />\n        <label>Where:</label>\n        <input\n          rows=\"10\"\n          cols=\"70\"\n          value={location}\n          onChange={(e) => setLocation(e.target.value)}\n          type=\"text\"\n          name=\"place\"\n          required\n        />\n        <br />\n        <br />\n        <button onClick={addPlace}> Add Place</button>\n      </form>\n\n      <div>\n        {\" \"}\n        <h1>Place List</h1>\n        <div>\n          {dataBaseItems.map((database, id) => (\n            <div className=\"insertedItem\" key={database.id}>\n              <p className=\"date\">{database.displayDate}</p>\n              <p> {database.place} </p>\n              <p>Where: {database.location}</p>\n              <p>\n                Added by: <i>{database.author}</i>\n              </p>\n              <button\n                className=\"delete\"\n                onClick={(e) => {\n                  setItemToDelete(database.id);\n                  deletePlace();\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/delaine/Documents/GitHub/lights/src/activities.js",["226","227","228"],"import { useState, useEffect } from \"react\";\nimport {\n  updateDoc,\n  getFirestore,\n  collection,\n  getDocs,\n  deleteDoc,\n  addDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\n\nexport default function Activities() {\n  const db = getFirestore();\n\n  const currentUser = useAuth();\n\n  const colRef = collection(db, \"activities\");\n\n  const [activeStatus, setActiveStatus] = useState(false);\n  const [activity, setActivity] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n  const [itemToUpdate, setItemToUpdate] = useState(\"\");\n  const [updating, setUpdating] = useState(false);\n  const [editedEntry, setEditedEntry] = useState(\"\");\n\n  function addItem(e) {\n    e.preventDefault();\n\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser?.email,\n      activity: activity,\n      active: false,\n    });\n    setActivity(\"\");\n    fetchItems();\n  }\n\n  function fetchItems() {\n    getDocs(colRef).then((snapshot) => {\n      const items = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      console.log(items);\n      setDatabaseItems(items);\n    });\n  }\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  function updateItem(e) {\n    console.log(\"To be UPDATED \" + itemToUpdate);\n    if (itemToUpdate !== \"\") {\n      console.log(\"Updating\");\n      const docToUpdate = doc(db, \"activities\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        activity: editedEntry,\n      }).then(() => {\n        console.log(\"It supposed to be updated\");\n      });\n      setUpdating(false);\n\n      fetchItems();\n    }\n  }\n  async function changeActiveStatus(e) {\n    const setItem = await setItemToUpdate(e.id);\n    const isActive = await setActiveStatus(!e.active);\n    return toggleDone();\n  }\n  function toggleDone(e) {\n    if (itemToUpdate !== \"\") {\n      const docToUpdate = doc(db, \"activities\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        active: activeStatus,\n      });\n    }\n    fetchItems();\n  }\n\n  function deleteItem(e) {\n    console.log(\"To be Deleted \" + itemToDelete);\n    if (itemToDelete !== \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"activities\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchItems();\n    }\n  }\n\n  return (\n    <div className=\"post-component\">\n      <br />\n      <br />\n\n      <form className=\"add\">\n        <input\n          rows=\"10\"\n          cols=\"70\"\n          value={activity}\n          onChange={(e) => setActivity(e.target.value)}\n          type=\"text\"\n          name=\"activity\"\n          required\n        />\n        <br />\n        <button onClick={addItem}>Add activity</button>\n      </form>\n\n      <div>\n        {\" \"}\n        <h2>Activity List</h2>\n        for some reason you have to press the Active/inactive button 2 times\n        before it updates, idk why yet\n        <div>\n          {dataBaseItems.map((database, id) => (\n            <div className=\"insertedItem\" key={database.id}>\n              <p className=\"date\">{database.displayDate}</p>\n              <p> {database.activity}</p>Added by: <i>{database.author}</i>\n              <br />\n              <div\n                onClick={() => {\n                  changeActiveStatus(database);\n                }}\n              >\n                {database.active ? (\n                  <button className=\"activeStyle\">Done</button>\n                ) : (\n                  <button className=\"inactiveStyle\">Not Done</button>\n                )}\n              </div>\n              {updating ? (\n                <div>\n                  {\" \"}\n                  <p>Change activity to:</p>\n                  <textarea\n                    value={editedEntry}\n                    onChange={(e) => setEditedEntry(e.target.value)}\n                  />{\" \"}\n                  <button\n                    onClick={(e) => {\n                      updateItem();\n                    }}\n                  >\n                    Save\n                  </button>\n                </div>\n              ) : (\n                <div></div>\n              )}\n              <br />\n              <button\n                onClick={(e) => {\n                  setItemToUpdate(database.id);\n                  setUpdating(true);\n                }}\n              >\n                Edit\n              </button>\n              <button\n                className=\"delete\"\n                onClick={(e) => {\n                  setItemToDelete(database.id);\n                  deleteItem();\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/delaine/Documents/GitHub/lights/src/dashboard.js",[],"/Users/delaine/Documents/GitHub/lights/src/makeRandomPost.js",["229"],"import { useState, useEffect } from \"react\";\nimport {\n  updateDoc,\n  getFirestore,\n  collection,\n  getDocs,\n  deleteDoc,\n  addDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\n\nexport default function RandomPost() {\n  const db = getFirestore();\n\n  const currentUser = useAuth();\n\n  const colRef = collection(db, \"posts\");\n\n  const [activity, setActivity] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n  const [itemToUpdate, setItemToUpdate] = useState(\"\");\n  const [updating, setUpdating] = useState(false);\n  const [editedEntry, setEditedEntry] = useState(\"\");\n\n  function addItem(e) {\n    e.preventDefault();\n\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser?.email,\n      activity: activity,\n      active: false,\n      comments: [],\n    });\n    setActivity(\"\");\n    fetchItems();\n  }\n\n  function fetchItems() {\n    getDocs(colRef).then((snapshot) => {\n      const items = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      console.log(items);\n      setDatabaseItems(items);\n    });\n  }\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  function updateItem(e) {\n    console.log(\"To be UPDATED \" + itemToUpdate);\n    if (itemToUpdate !== \"\") {\n      console.log(\"Updating\");\n      const docToUpdate = doc(db, \"posts\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        activity: editedEntry,\n      }).then(() => {\n        console.log(\"It supposed to be updated\");\n      });\n      setUpdating(false);\n\n      fetchItems();\n    }\n  }\n\n  function deleteItem(e) {\n    console.log(\"To be Deleted \" + itemToDelete);\n    if (itemToDelete !== \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"posts\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchItems();\n    }\n  }\n\n  return (\n    <div className=\"post-component\">\n      <br />\n      <br />\n      <h1> Make a post, any post you like</h1>\n      <form className=\"add\">\n        <input\n          rows=\"10\"\n          cols=\"70\"\n          value={activity}\n          onChange={(e) => setActivity(e.target.value)}\n          type=\"text\"\n          name=\"activity\"\n          required\n        />\n        <br />\n        <button onClick={addItem}>Add Post</button>\n      </form>\n      <div>\n        {\" \"}\n        <h2>Post List</h2>\n        <div>\n          {dataBaseItems.map((database, id) => (\n            <div className=\"insertedItem\" key={database.id}>\n              <p className=\"date\">{database.displayDate}</p>\n              <p> {database.post}</p>Added by: <i>{database.author}</i>\n              <br />\n              {updating ? (\n                <div>\n                  {\" \"}\n                  <p>Change post to:</p>\n                  <input\n                    value={editedEntry}\n                    onChange={(e) => setEditedEntry(e.target.value)}\n                  />{\" \"}\n                  <button\n                    onClick={(e) => {\n                      updateItem();\n                    }}\n                  >\n                    Save\n                  </button>\n                </div>\n              ) : (\n                <div></div>\n              )}\n              <br />\n              <button\n                onClick={(e) => {\n                  setItemToUpdate(database.id);\n                  setUpdating(true);\n                }}\n              >\n                Edit\n              </button>\n              <button\n                className=\"delete\"\n                onClick={(e) => {\n                  setItemToDelete(database.id);\n                  deleteItem();\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/delaine/Documents/GitHub/lights/src/CurrentSubScriptions.js",["230"],"import { useState, useEffect } from \"react\";\nimport {\n  updateDoc,\n  getFirestore,\n  collection,\n  getDocs,\n  deleteDoc,\n  addDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\n\nexport default function CurrentSubScriptions() {\n  const db = getFirestore();\n\n  const currentUser = useAuth();\n\n  const colRef = collection(db, \"currentSubscriptions\");\n\n  const [activeStatus, setActiveStatus] = useState(false);\n  const [subscription, setSubscription] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n  const [itemToUpdate, setItemToUpdate] = useState(\"\");\n  const [updating, setUpdating] = useState(false);\n  const [editedEntry, setEditedEntry] = useState(\"\");\n\n  function addSubscription(e) {\n    e.preventDefault();\n\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser?.email,\n      subscription: subscription,\n      active: false,\n    });\n    setSubscription(\"\");\n    fetchSubscriptions();\n  }\n\n  function fetchSubscriptions() {\n    getDocs(colRef).then((snapshot) => {\n      const items = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      console.log(items);\n      setDatabaseItems(items);\n    });\n  }\n  useEffect(() => {\n    fetchSubscriptions();\n  }, []);\n\n  function updateSubscription(e) {\n    console.log(\"To be UPDATED \" + itemToUpdate);\n    if (itemToUpdate !== \"\") {\n      console.log(\"Updating\");\n      const docToUpdate = doc(db, \"currentSubscriptions\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        subscription: editedEntry,\n      }).then(() => {\n        console.log(\"It supposed to be updated\");\n      });\n      setUpdating(false);\n\n      fetchSubscriptions();\n    }\n  }\n  async function changeActiveStatus(e) {\n    return setActiveStatus(e);\n  }\n  function toggleActiveSubscription(e) {\n    if (itemToUpdate !== \"\") {\n      const docToUpdate = doc(db, \"currentSubscriptions\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        active: activeStatus,\n      });\n\n      fetchSubscriptions();\n    }\n  }\n\n  function deleteSubscription(e) {\n    console.log(\"To be Deleted \" + itemToDelete);\n    if (itemToDelete !== \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"currentSubscriptions\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchSubscriptions();\n    }\n  }\n  return (\n    <div className=\"post-component\">\n      <br />\n      <br />\n\n      <form className=\"add\">\n        <input\n          rows=\"10\"\n          cols=\"70\"\n          value={subscription}\n          onChange={(e) => setSubscription(e.target.value)}\n          type=\"text\"\n          name=\"subscription\"\n          required\n        />\n        <br />\n        <button onClick={addSubscription}>Add Subscription</button>\n      </form>\n\n      <div>\n        {\" \"}\n        <h2>Subscription List</h2>\n        for some reason you have to press the Active/inactive button 2 times\n        before it updates, idk why yet\n        <div>\n          {dataBaseItems.map((database, id) => (\n            <div className=\"insertedItem\" key={database.id}>\n              <p className=\"date\">{database.displayDate}</p>\n              <p> {database.subscription}</p>Added by: <i>{database.author}</i>\n              <br />\n              <div\n                onClick={() => {\n                  setItemToUpdate(database.id);\n                  changeActiveStatus(!database.active);\n                  toggleActiveSubscription();\n                }}\n              >\n                {database.active ? (\n                  <button className=\"activeStyle\">Active</button>\n                ) : (\n                  <button className=\"inactiveStyle\">Innactive</button>\n                )}\n              </div>\n              {updating ? (\n                <div>\n                  {\" \"}\n                  <p>Change subscription to:</p>\n                  <input\n                    value={editedEntry}\n                    onChange={(e) => setEditedEntry(e.target.value)}\n                  />{\" \"}\n                  <button\n                    onClick={(e) => {\n                      updateSubscription();\n                    }}\n                  >\n                    Save\n                  </button>\n                </div>\n              ) : (\n                <div></div>\n              )}\n              <br />\n              <button\n                onClick={(e) => {\n                  setItemToUpdate(database.id);\n                  setUpdating(true);\n                }}\n              >\n                Edit\n              </button>\n              <button\n                className=\"delete\"\n                onClick={(e) => {\n                  setItemToDelete(database.id);\n                  deleteSubscription();\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/delaine/Documents/GitHub/lights/src/changeProfilePic.js",[],"/Users/delaine/Documents/GitHub/lights/src/watch.js",[],"/Users/delaine/Documents/GitHub/lights/src/firebase.js",[],"/Users/delaine/Documents/GitHub/lights/src/loggedOut.js",[],"/Users/delaine/Documents/GitHub/lights/src/LoggedIn.js",["231","232"],"/Users/delaine/Documents/GitHub/lights/src/Utilities/theDate.js",[],"/Users/delaine/Documents/GitHub/lights/src/redux/actions/index.js",[],"/Users/delaine/Documents/GitHub/lights/src/redux/reducers/index.js",["233"],"/Users/delaine/Documents/GitHub/lights/src/auth.js",[],"/Users/delaine/Documents/GitHub/lights/src/redux/types/index.js",[],"/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/index.js",[],"/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/App.js",[],"/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/redux/store/index.js",[],"/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/dashboard.js",[],"/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/loggedOut.js",[],"/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/firebase.js",[],"/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/Utilities/theDate.js",[],"/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/redux/reducers/index.js",["234"],"/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/redux/actions/index.js",[],"/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/auth.js",[],"/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/redux/types/index.js",[],"/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/navbar.js",[],"/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/activities.js",["235","236","237"],"/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/changeProfilePic.js",[],"/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/makeRandomPost.js",["238"],"/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/CurrentSubScriptions.js",["239"],"/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/ShowsToWatch.js",["240"],"/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/watch.js",[],"/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/places.js",["241"],"/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/LoggedIn.js",["242","243"],"import { useAuth } from \"./firebase\";\nimport { NavLink } from \"react-router-dom\";\n\n//This is what appears if you are logged in. It offers links to various options.\nexport default function LoggedIn() {\n  const currentUser = useAuth();\n\n  return (\n    <div>\n      <div>Hey: {currentUser?.email} </div>\n      <ul className=\"center icon-grid\">\n        <li className=\"nav-link\">\n          <NavLink activestyle={{ color: \"red\" }} to=\"/watch\">\n            {\" \"}\n            <img\n              src=\"https://icon-library.com/images/film-icon/film-icon-1.jpg\"\n              alt=\"65-656848-mentor-sentence-prep-at-home-clipart\"\n              width=\"150px\"\n              height=\"150px\"\n              className=\"writing-excercises-icons\"\n            />\n            Shows{\" \"}\n          </NavLink>\n        </li>\n        <li className=\"nav-link\">\n          <NavLink activestyle={{ color: \"red\" }} to=\"/randompost\">\n            {\" \"}\n            <img\n              src=\"https://i.ibb.co/RzmcpwH/soap-box-derby-soapbox-clip-art-openclipart-image-png-favpng-Pj-VB9ti-L1hnf45swquv-Ki5pcy.png\"\n              alt=\"soap-box-derby-soapbox-clip-art-openclipart-image-png-favpng-Pj-VB9ti-L1hnf45swquv-Ki5pcy\"\n              width=\"150px\"\n              height=\"150px\"\n              className=\"writing-excercises-icons\"\n            />\n            Random Post{\" \"}\n          </NavLink>\n        </li>\n        <li className=\"nav-link\">\n          <NavLink activestyle={{ color: \"red\" }} to=\"/activities\">\n            {\" \"}\n            <img\n              width=\"150px\"\n              height=\"150px\"\n              src=\"https://i.ibb.co/d4F201T/72-720902-this-is-an-image-of-a-clipboard-do.png\"\n              alt=\"72-720902-this-is-an-image-of-a-clipboard-do\"\n              className=\"writing-excercises-icons\"\n            />\n            Things to do\n          </NavLink>\n        </li>\n        <li className=\"nav-link\">\n          <NavLink activestyle={{ color: \"red\" }} to=\"/places\">\n            {\" \"}\n            <img\n              width=\"150px\"\n              height=\"150px\"\n              src=\"https://i.ibb.co/71YRj5P/location-maps-navigation-pin-place-icon-location-icon-position-934743.png\"\n              alt=\"location-maps-navigation-pin-place-icon-location-icon-position-934743\"\n              className=\"writing-excercises-icons\"\n            />\n            Places to go\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n}\n",{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","severity":1,"message":"249","line":2,"column":45,"nodeType":"250","messageId":"251","endLine":2,"endColumn":51},{"ruleId":"252","severity":1,"message":"253","line":7,"column":1,"nodeType":"254","endLine":18,"endColumn":3},{"ruleId":"244","replacedBy":"255"},{"ruleId":"246","replacedBy":"256"},{"ruleId":"257","severity":1,"message":"258","line":55,"column":6,"nodeType":"259","endLine":55,"endColumn":8,"suggestions":"260"},{"ruleId":"257","severity":1,"message":"261","line":54,"column":6,"nodeType":"259","endLine":54,"endColumn":8,"suggestions":"262"},{"ruleId":"257","severity":1,"message":"258","line":55,"column":6,"nodeType":"259","endLine":55,"endColumn":8,"suggestions":"263"},{"ruleId":"248","severity":1,"message":"264","line":73,"column":11,"nodeType":"250","messageId":"251","endLine":73,"endColumn":18},{"ruleId":"248","severity":1,"message":"265","line":74,"column":11,"nodeType":"250","messageId":"251","endLine":74,"endColumn":19},{"ruleId":"257","severity":1,"message":"258","line":55,"column":6,"nodeType":"259","endLine":55,"endColumn":8,"suggestions":"266"},{"ruleId":"257","severity":1,"message":"267","line":55,"column":6,"nodeType":"259","endLine":55,"endColumn":8,"suggestions":"268"},{"ruleId":"269","severity":1,"message":"270","line":28,"column":13,"nodeType":"271","endLine":34,"endColumn":15},{"ruleId":"269","severity":1,"message":"270","line":41,"column":13,"nodeType":"271","endLine":47,"endColumn":15},{"ruleId":"252","severity":1,"message":"253","line":7,"column":1,"nodeType":"254","endLine":18,"endColumn":3},{"ruleId":"252","severity":1,"message":"253","line":7,"column":1,"nodeType":"254","endLine":18,"endColumn":3},{"ruleId":"257","severity":1,"message":"258","line":55,"column":6,"nodeType":"259","endLine":55,"endColumn":8,"suggestions":"272"},{"ruleId":"248","severity":1,"message":"264","line":73,"column":11,"nodeType":"250","messageId":"251","endLine":73,"endColumn":18},{"ruleId":"248","severity":1,"message":"265","line":74,"column":11,"nodeType":"250","messageId":"251","endLine":74,"endColumn":19},{"ruleId":"257","severity":1,"message":"258","line":55,"column":6,"nodeType":"259","endLine":55,"endColumn":8,"suggestions":"273"},{"ruleId":"257","severity":1,"message":"267","line":55,"column":6,"nodeType":"259","endLine":55,"endColumn":8,"suggestions":"274"},{"ruleId":"257","severity":1,"message":"258","line":55,"column":6,"nodeType":"259","endLine":55,"endColumn":8,"suggestions":"275"},{"ruleId":"257","severity":1,"message":"261","line":54,"column":6,"nodeType":"259","endLine":54,"endColumn":8,"suggestions":"276"},{"ruleId":"269","severity":1,"message":"270","line":28,"column":13,"nodeType":"271","endLine":34,"endColumn":15},{"ruleId":"269","severity":1,"message":"270","line":41,"column":13,"nodeType":"271","endLine":47,"endColumn":15},"no-native-reassign",["277"],"no-negated-in-lhs",["278"],"no-unused-vars","'addDoc' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["277"],["278"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchItems'. Either include it or remove the dependency array.","ArrayExpression",["279"],"React Hook useEffect has a missing dependency: 'fetchPlaces'. Either include it or remove the dependency array.",["280"],["281"],"'setItem' is assigned a value but never used.","'isActive' is assigned a value but never used.",["282"],"React Hook useEffect has a missing dependency: 'fetchSubscriptions'. Either include it or remove the dependency array.",["283"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["284"],["285"],["286"],["287"],["288"],"no-global-assign","no-unsafe-negation",{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"289","fix":"293"},{"desc":"289","fix":"294"},{"desc":"295","fix":"296"},{"desc":"289","fix":"297"},{"desc":"289","fix":"298"},{"desc":"295","fix":"299"},{"desc":"289","fix":"300"},{"desc":"291","fix":"301"},"Update the dependencies array to be: [fetchItems]",{"range":"302","text":"303"},"Update the dependencies array to be: [fetchPlaces]",{"range":"304","text":"305"},{"range":"306","text":"303"},{"range":"307","text":"303"},"Update the dependencies array to be: [fetchSubscriptions]",{"range":"308","text":"309"},{"range":"310","text":"303"},{"range":"311","text":"303"},{"range":"312","text":"309"},{"range":"313","text":"303"},{"range":"314","text":"305"},[1309,1311],"[fetchItems]",[1220,1222],"[fetchPlaces]",[1325,1327],[1281,1283],[1397,1399],"[fetchSubscriptions]",[1325,1327],[1261,1263],[1397,1399],[1309,1311],[1220,1222]]
[{"/Users/delaine/Documents/GitHub/Untitled/src/index.js":"1","/Users/delaine/Documents/GitHub/Untitled/src/App.js":"2","/Users/delaine/Documents/GitHub/Untitled/src/firebase.js":"3","/Users/delaine/Documents/GitHub/Untitled/src/dashboard.js":"4","/Users/delaine/Documents/GitHub/Untitled/src/auth.js":"5","/Users/delaine/Documents/GitHub/Untitled/src/redux/store/index.js":"6","/Users/delaine/Documents/GitHub/Untitled/src/redux/reducers/index.js":"7","/Users/delaine/Documents/GitHub/Untitled/src/redux/types/index.js":"8","/Users/delaine/Documents/GitHub/Untitled/src/navbar.js":"9","/Users/delaine/Documents/GitHub/Untitled/src/redux/actions/index.js":"10","/Users/delaine/Documents/GitHub/Untitled/src/loggedOut.js":"11","/Users/delaine/Documents/GitHub/Untitled/src/LoggedIn.js":"12","/Users/delaine/Documents/GitHub/Untitled/src/Utilities/theDate.js":"13","/Users/delaine/Documents/GitHub/Untitled/src/makeRandomPost.js":"14","/Users/delaine/Documents/GitHub/Untitled/src/ShowsToWatch.js":"15","/Users/delaine/Documents/GitHub/Untitled/src/watch.js":"16","/Users/delaine/Documents/GitHub/Untitled/src/CurrentSubScriptions.js":"17","/Users/delaine/Documents/GitHub/Untitled/src/activities.js":"18","/Users/delaine/Documents/GitHub/Untitled/src/places.js":"19","/Users/delaine/Documents/GitHub/firefly/src/index.js":"20","/Users/delaine/Documents/GitHub/firefly/src/App.js":"21","/Users/delaine/Documents/GitHub/firefly/src/redux/store/index.js":"22","/Users/delaine/Documents/GitHub/firefly/src/dashboard.js":"23","/Users/delaine/Documents/GitHub/firefly/src/firebase.js":"24","/Users/delaine/Documents/GitHub/firefly/src/loggedOut.js":"25","/Users/delaine/Documents/GitHub/firefly/src/auth.js":"26","/Users/delaine/Documents/GitHub/firefly/src/Utilities/theDate.js":"27","/Users/delaine/Documents/GitHub/firefly/src/redux/reducers/index.js":"28","/Users/delaine/Documents/GitHub/firefly/src/redux/actions/index.js":"29","/Users/delaine/Documents/GitHub/firefly/src/redux/types/index.js":"30","/Users/delaine/Documents/GitHub/lights/src/index.js":"31","/Users/delaine/Documents/GitHub/lights/src/App.js":"32","/Users/delaine/Documents/GitHub/lights/src/redux/store/index.js":"33","/Users/delaine/Documents/GitHub/lights/src/navbar.js":"34","/Users/delaine/Documents/GitHub/lights/src/ShowsToWatch.js":"35","/Users/delaine/Documents/GitHub/lights/src/places.js":"36","/Users/delaine/Documents/GitHub/lights/src/activities.js":"37","/Users/delaine/Documents/GitHub/lights/src/dashboard.js":"38","/Users/delaine/Documents/GitHub/lights/src/makeRandomPost.js":"39","/Users/delaine/Documents/GitHub/lights/src/CurrentSubScriptions.js":"40","/Users/delaine/Documents/GitHub/lights/src/changeProfilePic.js":"41","/Users/delaine/Documents/GitHub/lights/src/watch.js":"42","/Users/delaine/Documents/GitHub/lights/src/firebase.js":"43","/Users/delaine/Documents/GitHub/lights/src/loggedOut.js":"44","/Users/delaine/Documents/GitHub/lights/src/LoggedIn.js":"45","/Users/delaine/Documents/GitHub/lights/src/Utilities/theDate.js":"46","/Users/delaine/Documents/GitHub/lights/src/redux/actions/index.js":"47","/Users/delaine/Documents/GitHub/lights/src/redux/reducers/index.js":"48","/Users/delaine/Documents/GitHub/lights/src/auth.js":"49","/Users/delaine/Documents/GitHub/lights/src/redux/types/index.js":"50","/Users/delaine/Documents/GitHub/FINALS/Organiser/src/index.js":"51","/Users/delaine/Documents/GitHub/FINALS/Organiser/src/App.js":"52","/Users/delaine/Documents/GitHub/FINALS/Organiser/src/redux/store/index.js":"53","/Users/delaine/Documents/GitHub/FINALS/Organiser/src/makeRandomPost.js":"54","/Users/delaine/Documents/GitHub/FINALS/Organiser/src/navbar.js":"55","/Users/delaine/Documents/GitHub/FINALS/Organiser/src/activities.js":"56","/Users/delaine/Documents/GitHub/FINALS/Organiser/src/places.js":"57","/Users/delaine/Documents/GitHub/FINALS/Organiser/src/dashboard.js":"58","/Users/delaine/Documents/GitHub/FINALS/Organiser/src/ShowsToWatch.js":"59","/Users/delaine/Documents/GitHub/FINALS/Organiser/src/changeProfilePic.js":"60","/Users/delaine/Documents/GitHub/FINALS/Organiser/src/watch.js":"61","/Users/delaine/Documents/GitHub/FINALS/Organiser/src/CurrentSubScriptions.js":"62","/Users/delaine/Documents/GitHub/FINALS/Organiser/src/firebase.js":"63","/Users/delaine/Documents/GitHub/FINALS/Organiser/src/loggedOut.js":"64","/Users/delaine/Documents/GitHub/FINALS/Organiser/src/LoggedIn.js":"65","/Users/delaine/Documents/GitHub/FINALS/Organiser/src/Utilities/theDate.js":"66","/Users/delaine/Documents/GitHub/FINALS/Organiser/src/redux/reducers/index.js":"67","/Users/delaine/Documents/GitHub/FINALS/Organiser/src/redux/actions/index.js":"68","/Users/delaine/Documents/GitHub/FINALS/Organiser/src/auth.js":"69","/Users/delaine/Documents/GitHub/FINALS/Organiser/src/redux/types/index.js":"70"},{"size":381,"mtime":1638908831424,"results":"71","hashOfConfig":"72"},{"size":1641,"mtime":1638993814754,"results":"73","hashOfConfig":"72"},{"size":1639,"mtime":1638814796245,"results":"74","hashOfConfig":"72"},{"size":340,"mtime":1638908859638,"results":"75","hashOfConfig":"72"},{"size":1734,"mtime":1638977801707,"results":"76","hashOfConfig":"72"},{"size":371,"mtime":1638762703720,"results":"77","hashOfConfig":"72"},{"size":318,"mtime":1638762300045,"results":"78","hashOfConfig":"72"},{"size":98,"mtime":1638762234665,"results":"79","hashOfConfig":"72"},{"size":1330,"mtime":1638990627802,"results":"80","hashOfConfig":"72"},{"size":448,"mtime":1638764283933,"results":"81","hashOfConfig":"72"},{"size":185,"mtime":1638908929694,"results":"82","hashOfConfig":"72"},{"size":2623,"mtime":1638997232830,"results":"83","hashOfConfig":"72"},{"size":643,"mtime":1638914277268,"results":"84","hashOfConfig":"72"},{"size":2770,"mtime":1639000256166,"results":"85","hashOfConfig":"72"},{"size":2735,"mtime":1639016305713,"results":"86","hashOfConfig":"72"},{"size":1195,"mtime":1638998324089,"results":"87","hashOfConfig":"72"},{"size":5177,"mtime":1639082815097,"results":"88","hashOfConfig":"72"},{"size":5050,"mtime":1639089839743,"results":"89","hashOfConfig":"72"},{"size":3029,"mtime":1639016468401,"results":"90","hashOfConfig":"72"},{"size":397,"mtime":1639155987074,"results":"91","hashOfConfig":"92"},{"size":2086,"mtime":1639156118840,"results":"93","hashOfConfig":"92"},{"size":371,"mtime":1638762703720,"results":"94","hashOfConfig":"92"},{"size":379,"mtime":1639171051584,"results":"95","hashOfConfig":"92"},{"size":1639,"mtime":1638814796245,"results":"96","hashOfConfig":"92"},{"size":120,"mtime":1639170058973,"results":"97","hashOfConfig":"92"},{"size":1791,"mtime":1639170154742,"results":"98","hashOfConfig":"92"},{"size":643,"mtime":1638914277268,"results":"99","hashOfConfig":"92"},{"size":318,"mtime":1638762300045,"results":"100","hashOfConfig":"92"},{"size":448,"mtime":1638764283933,"results":"101","hashOfConfig":"92"},{"size":98,"mtime":1638762234665,"results":"102","hashOfConfig":"92"},{"size":397,"mtime":1639155987074,"results":"103","hashOfConfig":"104"},{"size":1870,"mtime":1639181242585,"results":"105","hashOfConfig":"104"},{"size":371,"mtime":1638762703720,"results":"106","hashOfConfig":"104"},{"size":1165,"mtime":1639593245718,"results":"107","hashOfConfig":"104"},{"size":4855,"mtime":1639244094232,"results":"108","hashOfConfig":"104"},{"size":3007,"mtime":1639182085462,"results":"109","hashOfConfig":"104"},{"size":4833,"mtime":1639182165243,"results":"110","hashOfConfig":"104"},{"size":374,"mtime":1639594288991,"results":"111","hashOfConfig":"104"},{"size":3927,"mtime":1639181846893,"results":"112","hashOfConfig":"104"},{"size":5051,"mtime":1639181088494,"results":"113","hashOfConfig":"104"},{"size":118,"mtime":1639181793632,"results":"114","hashOfConfig":"104"},{"size":1656,"mtime":1639189503327,"results":"115","hashOfConfig":"104"},{"size":1631,"mtime":1639181809744,"results":"116","hashOfConfig":"104"},{"size":120,"mtime":1639170058973,"results":"117","hashOfConfig":"104"},{"size":2405,"mtime":1639595072718,"results":"118","hashOfConfig":"104"},{"size":643,"mtime":1638914277268,"results":"119","hashOfConfig":"104"},{"size":448,"mtime":1638764283933,"results":"120","hashOfConfig":"104"},{"size":318,"mtime":1638762300045,"results":"121","hashOfConfig":"104"},{"size":1791,"mtime":1639170154742,"results":"122","hashOfConfig":"104"},{"size":52,"mtime":1639594886969,"results":"123","hashOfConfig":"104"},{"size":397,"mtime":1639155987074,"results":"124","hashOfConfig":"125"},{"size":1870,"mtime":1639181242585,"results":"126","hashOfConfig":"125"},{"size":371,"mtime":1638762703720,"results":"127","hashOfConfig":"125"},{"size":3927,"mtime":1639181846893,"results":"128","hashOfConfig":"125"},{"size":1165,"mtime":1639593245718,"results":"129","hashOfConfig":"125"},{"size":4833,"mtime":1639182165243,"results":"130","hashOfConfig":"125"},{"size":3007,"mtime":1639182085462,"results":"131","hashOfConfig":"125"},{"size":374,"mtime":1639594288991,"results":"132","hashOfConfig":"125"},{"size":4855,"mtime":1639244094232,"results":"133","hashOfConfig":"125"},{"size":118,"mtime":1639181793632,"results":"134","hashOfConfig":"125"},{"size":1656,"mtime":1639189503327,"results":"135","hashOfConfig":"125"},{"size":5051,"mtime":1639181088494,"results":"136","hashOfConfig":"125"},{"size":1631,"mtime":1639181809744,"results":"137","hashOfConfig":"125"},{"size":120,"mtime":1639170058973,"results":"138","hashOfConfig":"125"},{"size":2405,"mtime":1639595072718,"results":"139","hashOfConfig":"125"},{"size":643,"mtime":1638914277268,"results":"140","hashOfConfig":"125"},{"size":318,"mtime":1638762300045,"results":"141","hashOfConfig":"125"},{"size":448,"mtime":1638764283933,"results":"142","hashOfConfig":"125"},{"size":1791,"mtime":1639170154742,"results":"143","hashOfConfig":"125"},{"size":52,"mtime":1639594886969,"results":"144","hashOfConfig":"125"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},"dxeers",{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"147"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"147"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"147"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"147"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"147"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"147"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"147"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},"b3dy9a",{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"193"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"193"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},"x2f1ni",{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"216"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"216"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"216"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"216"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"216"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"216"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xy4urx",{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/delaine/Documents/GitHub/Untitled/src/index.js",[],["300","301"],"/Users/delaine/Documents/GitHub/Untitled/src/App.js",[],"/Users/delaine/Documents/GitHub/Untitled/src/firebase.js",["302"],"import { useEffect, useState } from \"react\";\r\nimport { getFirestore, collection, getDocs, addDoc } from \"firebase/firestore\";\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  signOut,\r\n} from \"firebase/auth\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDlbAcw8uM21ci6gjcK9nnU8SueyOdOGsA\",\r\n  authDomain: \"firefly-16696.firebaseapp.com\",\r\n  projectId: \"firefly-16696\",\r\n  storageBucket: \"firefly-16696.appspot.com\",\r\n  messagingSenderId: \"937474357471\",\r\n  appId: \"1:937474357471:web:76690395960b787f6e916a\",\r\n  measurementId: \"G-M8GW0MKM8Q\",\r\n};\r\n// Initialize Firebase\r\ninitializeApp(firebaseConfig);\r\n\r\nconst db = getFirestore();\r\nconst colRef = collection(db, \"posts\");\r\n\r\n//get collection datat\r\ngetDocs(colRef).then((snapshot) => {\r\n  let posts = [];\r\n  snapshot.docs.forEach((doc) => {\r\n    posts.push({ ...doc.data(), id: doc.id });\r\n  });\r\n\r\n  console.log(posts);\r\n});\r\n\r\nconst auth = getAuth();\r\n\r\nexport function signup(email, password) {\r\n  return createUserWithEmailAndPassword(auth, email, password);\r\n}\r\n\r\nexport function login(email, password) {\r\n  return signInWithEmailAndPassword(auth, email, password);\r\n}\r\n\r\nexport function logout() {\r\n  return signOut(auth);\r\n}\r\n\r\nexport function useAuth() {\r\n  const [currentUser, setCurrentUser] = useState();\r\n\r\n  useEffect(() => {\r\n    const unsub = onAuthStateChanged(auth, (user) => setCurrentUser(user));\r\n    return unsub;\r\n  }, []);\r\n\r\n  return currentUser;\r\n}\r\n","/Users/delaine/Documents/GitHub/Untitled/src/dashboard.js",[],"/Users/delaine/Documents/GitHub/Untitled/src/auth.js",[],"/Users/delaine/Documents/GitHub/Untitled/src/redux/store/index.js",[],"/Users/delaine/Documents/GitHub/Untitled/src/redux/reducers/index.js",["303"],"import { SET_LOGIN_STATUS } from \"../types\";\n\nconst INITIAL_STATE = {\n  loginStatus: false,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_LOGIN_STATUS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    default:\n      return INITIAL_STATE;\n  }\n};\n","/Users/delaine/Documents/GitHub/Untitled/src/redux/types/index.js",[],"/Users/delaine/Documents/GitHub/Untitled/src/navbar.js",[],"/Users/delaine/Documents/GitHub/Untitled/src/redux/actions/index.js",[],"/Users/delaine/Documents/GitHub/Untitled/src/loggedOut.js",[],"/Users/delaine/Documents/GitHub/Untitled/src/LoggedIn.js",["304","305","306","307","308","309","310","311","312","313","314","315","316","317"],"import { createElement, useState, useEffect } from \"react\";\nimport {\n  FieldValue,\n  getFirestore,\n  collection,\n  getDocs,\n  deleteDoc,\n  addDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\nimport RandomPost from \"./makeRandomPost\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function LoggedIn() {\n  const currentUser = useAuth();\n\n  return (\n    <div className=\"center\">\n      <div>Hey: {currentUser?.email} </div>\n      <ul className=\"writing-excercises-grid\">\n        <li className=\"nav-link\">\n          <NavLink activestyle={{ color: \"red\" }} to=\"/watch\">\n            {\" \"}\n            <img\n              src=\"https://icon-library.com/images/film-icon/film-icon-1.jpg\"\n              alt=\"65-656848-mentor-sentence-prep-at-home-clipart\"\n              width=\"150px\"\n              height=\"150px\"\n              className=\"writing-excercises-icons\"\n            />\n            Shows{\" \"}\n          </NavLink>\n        </li>\n        <li className=\"nav-link\">\n          <NavLink activestyle={{ color: \"red\" }} to=\"/randompost\">\n            {\" \"}\n            <img\n              src=\"https://i.ibb.co/RzmcpwH/soap-box-derby-soapbox-clip-art-openclipart-image-png-favpng-Pj-VB9ti-L1hnf45swquv-Ki5pcy.png\"\n              alt=\"soap-box-derby-soapbox-clip-art-openclipart-image-png-favpng-Pj-VB9ti-L1hnf45swquv-Ki5pcy\"\n              width=\"150px\"\n              height=\"150px\"\n              className=\"writing-excercises-icons\"\n            />\n            Random Post{\" \"}\n          </NavLink>\n        </li>\n        <li className=\"nav-link\">\n          <NavLink activestyle={{ color: \"red\" }} to=\"/activities\">\n            {\" \"}\n            <img\n              width=\"150px\"\n              height=\"150px\"\n              src=\"https://i.ibb.co/d4F201T/72-720902-this-is-an-image-of-a-clipboard-do.png\"\n              alt=\"72-720902-this-is-an-image-of-a-clipboard-do\"\n              className=\"writing-excercises-icons\"\n            />\n            Things to do\n          </NavLink>\n        </li>\n        <li className=\"nav-link\">\n          <NavLink activestyle={{ color: \"red\" }} to=\"/places\">\n            {\" \"}\n            <img\n              width=\"150px\"\n              height=\"150px\"\n              src=\"https://i.ibb.co/71YRj5P/location-maps-navigation-pin-place-icon-location-icon-position-934743.png\"\n              alt=\"location-maps-navigation-pin-place-icon-location-icon-position-934743\"\n              className=\"writing-excercises-icons\"\n            />\n            Places to go\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","/Users/delaine/Documents/GitHub/Untitled/src/Utilities/theDate.js",[],"/Users/delaine/Documents/GitHub/Untitled/src/makeRandomPost.js",["318","319","320","321","322","323","324"],"import { createElement, useState, useEffect } from \"react\";\nimport {\n  FieldValue,\n  getFirestore,\n  collection,\n  getDocs,\n  deleteDoc,\n  addDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { useSelector } from \"react-redux\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\n\nexport default function RandomPost() {\n  const db = getFirestore();\n\n  const loginReducer = useSelector((state) => state.loginReducer);\n  const { loginStatus } = loginReducer;\n  const currentUser = useAuth();\n\n  const colRef = collection(db, \"posts\");\n\n  const [author, setAuthor] = useState(\"\");\n  const [post, setPost] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n\n  function addPost(e) {\n    e.preventDefault();\n\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser?.email,\n      post: post,\n    });\n    setPost(\"\");\n    fetchPosts();\n  }\n\n  function fetchPosts() {\n    getDocs(colRef).then((snapshot) => {\n      const items = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      console.log(items);\n\n      setDatabaseItems(items);\n      dataBaseItems.sort((a, b) => (b.joinDate < a.joinDate ? 1 : -1));\n    });\n  }\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  function deletePost(e) {\n    console.log(\"To be Deleted \" + itemToDelete);\n    if (itemToDelete != \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"posts\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchPosts();\n    }\n    // myDb.collection(\"posts\").doc(itemToDelete).delete();\n  }\n  return (\n    <div id=\"postlist\">\n      <br />\n      <br />\n\n      <form className=\"add\">\n        <textarea\n          rows=\"10\"\n          cols=\"70\"\n          value={post}\n          onChange={(e) => setPost(e.target.value)}\n          type=\"text\"\n          name=\"post\"\n          required\n        />\n        <br />\n        <button onClick={addPost}> Post</button>\n      </form>\n\n      <div>\n        {\" \"}\n        <h2>Post List</h2>\n        <div>\n          {dataBaseItems.map((database, id) => (\n            <div className=\"insertedItem\" key={database.id}>\n              <p className=\"date\">{database.displayDate}</p>\n              <p>\n                {\" \"}\n                {database.post} -<i>{database.author}</i>{\" \"}\n              </p>\n              <button\n                onClick={(e) => {\n                  setItemToDelete(database.id);\n                  deletePost();\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/delaine/Documents/GitHub/Untitled/src/ShowsToWatch.js",["325","326","327","328","329","330","331"],"import { createElement, useState, useEffect } from \"react\";\nimport {\n  FieldValue,\n  getFirestore,\n  collection,\n  getDocs,\n  deleteDoc,\n  addDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { useSelector } from \"react-redux\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\n\nexport default function ShowsToWatch() {\n  const db = getFirestore();\n\n  const loginReducer = useSelector((state) => state.loginReducer);\n  const { loginStatus } = loginReducer;\n  const currentUser = useAuth();\n\n  const colRef = collection(db, \"currentShows\");\n\n  const [author, setAuthor] = useState(\"\");\n  const [show, setShow] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n\n  function addShow(e) {\n    e.preventDefault();\n\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser?.email,\n      show: show,\n    });\n    setShow(\"\");\n    fetchShows();\n  }\n\n  function fetchShows() {\n    getDocs(colRef).then((snapshot) => {\n      const items = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      console.log(items);\n\n      setDatabaseItems(items);\n      dataBaseItems.sort((a, b) => (b.joinDate < a.joinDate ? 1 : -1));\n    });\n  }\n  useEffect(() => {\n    fetchShows();\n  }, []);\n\n  function deleteShow(e) {\n    console.log(\"To be Deleted \" + itemToDelete);\n    if (itemToDelete != \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"currentShows\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchShows();\n    }\n  }\n  return (\n    <div id=\"showlist\">\n      <br />\n      <br />\n\n      <form className=\"add\">\n        <textarea\n          rows=\"10\"\n          cols=\"70\"\n          value={show}\n          onChange={(e) => setShow(e.target.value)}\n          type=\"text\"\n          name=\"show\"\n          required\n        />\n        <br />\n        <button onClick={addShow}> Add show</button>\n      </form>\n\n      <div>\n        {\" \"}\n        <h2>Show List</h2>\n        <div>\n          {dataBaseItems.map((database, id) => (\n            <div className=\"insertedItem\" key={database.id}>\n              <p className=\"date\">{database.displayDate}</p>\n              <p> {database.show} </p>\n              <p>\n                Added by: <i>{database.author}</i>\n              </p>\n              <button\n                onClick={(e) => {\n                  setItemToDelete(database.id);\n                  deleteShow();\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/delaine/Documents/GitHub/Untitled/src/watch.js",[],"/Users/delaine/Documents/GitHub/Untitled/src/CurrentSubScriptions.js",["332","333","334","335"],"import { useState, useEffect } from \"react\";\nimport {\n  updateDoc,\n  getFirestore,\n  collection,\n  getDocs,\n  deleteDoc,\n  addDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { useSelector } from \"react-redux\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\n\nexport default function CurrentSubScriptions() {\n  const db = getFirestore();\n\n  const loginReducer = useSelector((state) => state.loginReducer);\n  const { loginStatus } = loginReducer;\n  const currentUser = useAuth();\n\n  const colRef = collection(db, \"currentSubscriptions\");\n\n  const [activeStatus, setActiveStatus] = useState(false);\n  const [subscription, setSubscription] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n  const [itemToUpdate, setItemToUpdate] = useState(\"\");\n  const [updating, setUpdating] = useState(false);\n  const [editedEntry, setEditedEntry] = useState(\"\");\n\n  function addSubscription(e) {\n    e.preventDefault();\n\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser?.email,\n      subscription: subscription,\n      active: false,\n    });\n    setSubscription(\"\");\n    fetchSubscriptions();\n  }\n\n  function fetchSubscriptions() {\n    getDocs(colRef).then((snapshot) => {\n      const items = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      console.log(items);\n      setDatabaseItems(items);\n    });\n  }\n  useEffect(() => {\n    fetchSubscriptions();\n  }, []);\n\n  function updateSubscription(e) {\n    console.log(\"To be UPDATED \" + itemToUpdate);\n    if (itemToUpdate != \"\") {\n      console.log(\"Updating\");\n      const docToUpdate = doc(db, \"currentSubscriptions\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        subscription: editedEntry,\n      }).then(() => {\n        console.log(\"It supposed to be updated\");\n      });\n      setUpdating(false);\n\n      fetchSubscriptions();\n    }\n  }\n  async function changeActiveStatus(e) {\n    return setActiveStatus(e);\n  }\n  function toggleActiveSubscription(e) {\n    setTimeout(function () {\n      const docToUpdate = doc(db, \"currentSubscriptions\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        active: activeStatus,\n      });\n      fetchSubscriptions();\n    }, 1000);\n  }\n\n  function deleteSubscription(e) {\n    console.log(\"To be Deleted \" + itemToDelete);\n    if (itemToDelete != \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"currentSubscriptions\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchSubscriptions();\n    }\n  }\n  return (\n    <div id=\"subscriptionlist\">\n      <br />\n      <br />\n\n      <form className=\"add\">\n        <input\n          rows=\"10\"\n          cols=\"70\"\n          value={subscription}\n          onChange={(e) => setSubscription(e.target.value)}\n          type=\"text\"\n          name=\"subscription\"\n          required\n        />\n        <br />\n        <button onClick={addSubscription}>Add Subscription</button>\n      </form>\n\n      <div>\n        {\" \"}\n        <h2>Subscription List</h2>\n        for some reason you have to press the Active/inactive button 3 times\n        before it updates, idk why yet\n        <div>\n          {dataBaseItems.map((database, id) => (\n            <div className=\"insertedItem\" key={database.id}>\n              <p className=\"date\">{database.displayDate}</p>\n              <p> {database.subscription}</p>Added by: <i>{database.author}</i>\n              <br />\n              <button\n                onClick={() => {\n                  setItemToUpdate(database.id);\n                  changeActiveStatus(!database.active);\n                  toggleActiveSubscription();\n                }}\n              >\n                {database.active ? (\n                  <div className=\"active-status-button\">Active</div>\n                ) : (\n                  <div className=\"active-status-button\">Innactive</div>\n                )}\n              </button>\n              {updating ? (\n                <div>\n                  {\" \"}\n                  <p>Change subscription to:</p>\n                  <textarea\n                    value={editedEntry}\n                    onChange={(e) => setEditedEntry(e.target.value)}\n                  />{\" \"}\n                  <button\n                    onClick={(e) => {\n                      updateSubscription();\n                    }}\n                  >\n                    Save\n                  </button>\n                </div>\n              ) : (\n                <div></div>\n              )}\n              <br />\n              <button\n                onClick={(e) => {\n                  setItemToUpdate(database.id);\n                  setUpdating(true);\n                }}\n              >\n                Edit\n              </button>\n              <button\n                onClick={(e) => {\n                  setItemToDelete(database.id);\n                  deleteSubscription();\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/delaine/Documents/GitHub/Untitled/src/activities.js",["336","337","338","339","340","341","342","343","344"],"/Users/delaine/Documents/GitHub/Untitled/src/places.js",["345","346","347","348","349"],"import { createElement, useState, useEffect } from \"react\";\nimport {\n  FieldValue,\n  getFirestore,\n  collection,\n  getDocs,\n  deleteDoc,\n  addDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { useSelector } from \"react-redux\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\n\nexport default function Places() {\n  const db = getFirestore();\n\n  const currentUser = useAuth();\n\n  const colRef = collection(db, \"places\");\n\n  const [location, setLocation] = useState(\"\");\n  const [place, setPlace] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n\n  function addPlace(e) {\n    e.preventDefault();\n\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser?.email,\n      place: place,\n      location: location,\n    });\n    setPlace(\"\");\n    setLocation(\"\");\n    fetchPlaces();\n  }\n\n  function fetchPlaces() {\n    getDocs(colRef).then((snapshot) => {\n      const items = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      console.log(items);\n\n      setDatabaseItems(items);\n      dataBaseItems.sort((a, b) => (b.joinDate < a.joinDate ? 1 : -1));\n    });\n  }\n  useEffect(() => {\n    fetchPlaces();\n  }, []);\n\n  function deletePlace(e) {\n    console.log(\"To be Deleted \" + itemToDelete);\n    if (itemToDelete != \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"places\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchPlaces();\n    }\n  }\n  return (\n    <div id=\"placelist\">\n      <br />\n      <br />\n\n      <form className=\"add\">\n        <label>Place:</label>\n        <input\n          rows=\"10\"\n          cols=\"70\"\n          value={place}\n          onChange={(e) => setPlace(e.target.value)}\n          type=\"text\"\n          name=\"place\"\n          required\n        />\n\n        <br />\n        <label>Where:</label>\n        <input\n          rows=\"10\"\n          cols=\"70\"\n          value={location}\n          onChange={(e) => setLocation(e.target.value)}\n          type=\"text\"\n          name=\"place\"\n          required\n        />\n        <br />\n        <br />\n        <button onClick={addPlace}> Add Place</button>\n      </form>\n\n      <div>\n        {\" \"}\n        <h2>Place List</h2>\n        <div>\n          {dataBaseItems.map((database, id) => (\n            <div className=\"insertedItem\" key={database.id}>\n              <p className=\"date\">{database.displayDate}</p>\n              <p> {database.place} </p>\n              <p>Where {database.location}</p>\n              <p>\n                Added by: <i>{database.author}</i>\n              </p>\n              <button\n                onClick={(e) => {\n                  setItemToDelete(database.id);\n                  deletePlace();\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/delaine/Documents/GitHub/firefly/src/index.js",[],["350","351"],"/Users/delaine/Documents/GitHub/firefly/src/App.js",[],"/Users/delaine/Documents/GitHub/firefly/src/redux/store/index.js",[],"/Users/delaine/Documents/GitHub/firefly/src/dashboard.js",[],"/Users/delaine/Documents/GitHub/firefly/src/firebase.js",["352"],"/Users/delaine/Documents/GitHub/firefly/src/loggedOut.js",[],"/Users/delaine/Documents/GitHub/firefly/src/auth.js",[],"/Users/delaine/Documents/GitHub/firefly/src/Utilities/theDate.js",[],"/Users/delaine/Documents/GitHub/firefly/src/redux/reducers/index.js",["353"],"/Users/delaine/Documents/GitHub/firefly/src/redux/actions/index.js",[],"/Users/delaine/Documents/GitHub/firefly/src/redux/types/index.js",[],"/Users/delaine/Documents/GitHub/lights/src/index.js",[],["354","355"],"/Users/delaine/Documents/GitHub/lights/src/App.js",[],"/Users/delaine/Documents/GitHub/lights/src/redux/store/index.js",[],"/Users/delaine/Documents/GitHub/lights/src/navbar.js",[],"/Users/delaine/Documents/GitHub/lights/src/ShowsToWatch.js",["356"],"import { useState, useEffect } from \"react\";\nimport {\n  updateDoc,\n  getFirestore,\n  collection,\n  getDocs,\n  deleteDoc,\n  addDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\n\nexport default function ShowsToWatch() {\n  const db = getFirestore();\n\n  const currentUser = useAuth();\n\n  const colRef = collection(db, \"currentShows\");\n\n  const [activeStatus, setActiveStatus] = useState(false);\n  const [show, setShow] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n  const [itemToUpdate, setItemToUpdate] = useState(\"\");\n  const [updating, setUpdating] = useState(false);\n  const [editedEntry, setEditedEntry] = useState(\"\");\n\n  function addItem(e) {\n    e.preventDefault();\n\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser?.email,\n      show: show,\n      active: false,\n    });\n    setShow(\"\");\n    fetchItems();\n  }\n\n  function fetchItems() {\n    getDocs(colRef).then((snapshot) => {\n      const items = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      console.log(items);\n      setDatabaseItems(items);\n    });\n  }\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  function updateItem(e) {\n    console.log(\"To be UPDATED \" + itemToUpdate);\n    if (itemToUpdate !== \"\") {\n      console.log(\"Updating\");\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        show: editedEntry,\n      }).then(() => {\n        console.log(\"It supposed to be updated\");\n      });\n      setUpdating(false);\n\n      fetchItems();\n    }\n  }\n  async function changeActiveStatus(e) {\n    const setItem = await setItemToUpdate(e.id);\n    console.log(setItem);\n    const isActive = await setActiveStatus(!e.active);\n    console.log(isActive);\n    return toggleDone();\n  }\n  function toggleDone(e) {\n    if (itemToUpdate !== \"\") {\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        active: activeStatus,\n      });\n    }\n    fetchItems();\n  }\n\n  function deleteItem(e) {\n    console.log(\"To be Deleted \" + itemToDelete);\n    if (itemToDelete !== \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"currentShows\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchItems();\n    }\n  }\n\n  return (\n    <div className=\"post-component\">\n      <br />\n      <br />\n\n      <form className=\"add\">\n        <input\n          rows=\"10\"\n          cols=\"70\"\n          value={show}\n          onChange={(e) => setShow(e.target.value)}\n          type=\"text\"\n          name=\"show\"\n          required\n        />\n        <br />\n        <button onClick={addItem}>Add show</button>\n      </form>\n\n      <div>\n        {\" \"}\n        <h2>Show List</h2>\n        for some reason you have to press the Active/inactive button 2 times\n        before it updates, idk why yet\n        <div>\n          {dataBaseItems.map((database, id) => (\n            <div className=\"insertedItem\" key={database.id}>\n              <p className=\"date\">{database.displayDate}</p>\n              <p> {database.show}</p>Added by: <i>{database.author}</i>\n              <br />\n              <div\n                onClick={() => {\n                  changeActiveStatus(database);\n                }}\n              >\n                {database.active ? (\n                  <button className=\"activeStyle\">In Progress</button>\n                ) : (\n                  <button className=\"inactiveStyle\">Not In Progress</button>\n                )}\n              </div>\n              {updating ? (\n                <div>\n                  {\" \"}\n                  <p>Change show to:</p>\n                  <input\n                    value={editedEntry}\n                    onChange={(e) => setEditedEntry(e.target.value)}\n                  />{\" \"}\n                  <button\n                    onClick={(e) => {\n                      updateItem();\n                    }}\n                  >\n                    Save\n                  </button>\n                </div>\n              ) : (\n                <div></div>\n              )}\n              <br />\n              <button\n                onClick={(e) => {\n                  setItemToUpdate(database.id);\n                  setUpdating(true);\n                }}\n              >\n                Edit\n              </button>\n              <button\n                className=\"delete\"\n                onClick={(e) => {\n                  setItemToDelete(database.id);\n                  deleteItem();\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/delaine/Documents/GitHub/lights/src/places.js",["357"],"import { useState, useEffect } from \"react\";\nimport {\n  getFirestore,\n  collection,\n  getDocs,\n  deleteDoc,\n  addDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\n\nexport default function Places() {\n  const db = getFirestore();\n\n  const currentUser = useAuth();\n\n  const colRef = collection(db, \"places\");\n\n  const [location, setLocation] = useState(\"\");\n  const [place, setPlace] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n\n  function addPlace(e) {\n    e.preventDefault();\n\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser?.email,\n      place: place,\n      location: location,\n    });\n    setPlace(\"\");\n    setLocation(\"\");\n    fetchPlaces();\n  }\n\n  function fetchPlaces() {\n    getDocs(colRef).then((snapshot) => {\n      const items = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      console.log(items);\n\n      setDatabaseItems(items);\n      dataBaseItems.sort((a, b) => (b.joinDate < a.joinDate ? 1 : -1));\n    });\n  }\n  useEffect(() => {\n    fetchPlaces();\n  }, []);\n\n  function deletePlace(e) {\n    console.log(\"To be Deleted \" + itemToDelete);\n    if (itemToDelete !== \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"places\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchPlaces();\n    }\n  }\n  return (\n    <div className=\" post-component\">\n      <br />\n      <br />\n\n      <form className=\"add\">\n        <label>Place:</label>\n        <input\n          rows=\"10\"\n          cols=\"70\"\n          value={place}\n          onChange={(e) => setPlace(e.target.value)}\n          type=\"text\"\n          name=\"place\"\n          required\n        />\n\n        <br />\n        <label>Where:</label>\n        <input\n          rows=\"10\"\n          cols=\"70\"\n          value={location}\n          onChange={(e) => setLocation(e.target.value)}\n          type=\"text\"\n          name=\"place\"\n          required\n        />\n        <br />\n        <br />\n        <button onClick={addPlace}> Add Place</button>\n      </form>\n\n      <div>\n        {\" \"}\n        <h1>Place List</h1>\n        <div>\n          {dataBaseItems.map((database, id) => (\n            <div className=\"insertedItem\" key={database.id}>\n              <p className=\"date\">{database.displayDate}</p>\n              <p> {database.place} </p>\n              <p>Where: {database.location}</p>\n              <p>\n                Added by: <i>{database.author}</i>\n              </p>\n              <button\n                className=\"delete\"\n                onClick={(e) => {\n                  setItemToDelete(database.id);\n                  deletePlace();\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/delaine/Documents/GitHub/lights/src/activities.js",["358","359","360"],"import { useState, useEffect } from \"react\";\nimport {\n  updateDoc,\n  getFirestore,\n  collection,\n  getDocs,\n  deleteDoc,\n  addDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\n\nexport default function Activities() {\n  const db = getFirestore();\n\n  const currentUser = useAuth();\n\n  const colRef = collection(db, \"activities\");\n\n  const [activeStatus, setActiveStatus] = useState(false);\n  const [activity, setActivity] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n  const [itemToUpdate, setItemToUpdate] = useState(\"\");\n  const [updating, setUpdating] = useState(false);\n  const [editedEntry, setEditedEntry] = useState(\"\");\n\n  function addItem(e) {\n    e.preventDefault();\n\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser?.email,\n      activity: activity,\n      active: false,\n    });\n    setActivity(\"\");\n    fetchItems();\n  }\n\n  function fetchItems() {\n    getDocs(colRef).then((snapshot) => {\n      const items = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      console.log(items);\n      setDatabaseItems(items);\n    });\n  }\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  function updateItem(e) {\n    console.log(\"To be UPDATED \" + itemToUpdate);\n    if (itemToUpdate !== \"\") {\n      console.log(\"Updating\");\n      const docToUpdate = doc(db, \"activities\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        activity: editedEntry,\n      }).then(() => {\n        console.log(\"It supposed to be updated\");\n      });\n      setUpdating(false);\n\n      fetchItems();\n    }\n  }\n  async function changeActiveStatus(e) {\n    const setItem = await setItemToUpdate(e.id);\n    const isActive = await setActiveStatus(!e.active);\n    return toggleDone();\n  }\n  function toggleDone(e) {\n    if (itemToUpdate !== \"\") {\n      const docToUpdate = doc(db, \"activities\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        active: activeStatus,\n      });\n    }\n    fetchItems();\n  }\n\n  function deleteItem(e) {\n    console.log(\"To be Deleted \" + itemToDelete);\n    if (itemToDelete !== \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"activities\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchItems();\n    }\n  }\n\n  return (\n    <div className=\"post-component\">\n      <br />\n      <br />\n\n      <form className=\"add\">\n        <input\n          rows=\"10\"\n          cols=\"70\"\n          value={activity}\n          onChange={(e) => setActivity(e.target.value)}\n          type=\"text\"\n          name=\"activity\"\n          required\n        />\n        <br />\n        <button onClick={addItem}>Add activity</button>\n      </form>\n\n      <div>\n        {\" \"}\n        <h2>Activity List</h2>\n        for some reason you have to press the Active/inactive button 2 times\n        before it updates, idk why yet\n        <div>\n          {dataBaseItems.map((database, id) => (\n            <div className=\"insertedItem\" key={database.id}>\n              <p className=\"date\">{database.displayDate}</p>\n              <p> {database.activity}</p>Added by: <i>{database.author}</i>\n              <br />\n              <div\n                onClick={() => {\n                  changeActiveStatus(database);\n                }}\n              >\n                {database.active ? (\n                  <button className=\"activeStyle\">Done</button>\n                ) : (\n                  <button className=\"inactiveStyle\">Not Done</button>\n                )}\n              </div>\n              {updating ? (\n                <div>\n                  {\" \"}\n                  <p>Change activity to:</p>\n                  <textarea\n                    value={editedEntry}\n                    onChange={(e) => setEditedEntry(e.target.value)}\n                  />{\" \"}\n                  <button\n                    onClick={(e) => {\n                      updateItem();\n                    }}\n                  >\n                    Save\n                  </button>\n                </div>\n              ) : (\n                <div></div>\n              )}\n              <br />\n              <button\n                onClick={(e) => {\n                  setItemToUpdate(database.id);\n                  setUpdating(true);\n                }}\n              >\n                Edit\n              </button>\n              <button\n                className=\"delete\"\n                onClick={(e) => {\n                  setItemToDelete(database.id);\n                  deleteItem();\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/delaine/Documents/GitHub/lights/src/dashboard.js",[],"/Users/delaine/Documents/GitHub/lights/src/makeRandomPost.js",["361"],"import { useState, useEffect } from \"react\";\nimport {\n  updateDoc,\n  getFirestore,\n  collection,\n  getDocs,\n  deleteDoc,\n  addDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\n\nexport default function RandomPost() {\n  const db = getFirestore();\n\n  const currentUser = useAuth();\n\n  const colRef = collection(db, \"posts\");\n\n  const [activity, setActivity] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n  const [itemToUpdate, setItemToUpdate] = useState(\"\");\n  const [updating, setUpdating] = useState(false);\n  const [editedEntry, setEditedEntry] = useState(\"\");\n\n  function addItem(e) {\n    e.preventDefault();\n\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser?.email,\n      activity: activity,\n      active: false,\n      comments: [],\n    });\n    setActivity(\"\");\n    fetchItems();\n  }\n\n  function fetchItems() {\n    getDocs(colRef).then((snapshot) => {\n      const items = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      console.log(items);\n      setDatabaseItems(items);\n    });\n  }\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  function updateItem(e) {\n    console.log(\"To be UPDATED \" + itemToUpdate);\n    if (itemToUpdate !== \"\") {\n      console.log(\"Updating\");\n      const docToUpdate = doc(db, \"posts\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        activity: editedEntry,\n      }).then(() => {\n        console.log(\"It supposed to be updated\");\n      });\n      setUpdating(false);\n\n      fetchItems();\n    }\n  }\n\n  function deleteItem(e) {\n    console.log(\"To be Deleted \" + itemToDelete);\n    if (itemToDelete !== \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"posts\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchItems();\n    }\n  }\n\n  return (\n    <div className=\"post-component\">\n      <br />\n      <br />\n      <h1> Make a post, any post you like</h1>\n      <form className=\"add\">\n        <input\n          rows=\"10\"\n          cols=\"70\"\n          value={activity}\n          onChange={(e) => setActivity(e.target.value)}\n          type=\"text\"\n          name=\"activity\"\n          required\n        />\n        <br />\n        <button onClick={addItem}>Add Post</button>\n      </form>\n      <div>\n        {\" \"}\n        <h2>Post List</h2>\n        <div>\n          {dataBaseItems.map((database, id) => (\n            <div className=\"insertedItem\" key={database.id}>\n              <p className=\"date\">{database.displayDate}</p>\n              <p> {database.post}</p>Added by: <i>{database.author}</i>\n              <br />\n              {updating ? (\n                <div>\n                  {\" \"}\n                  <p>Change post to:</p>\n                  <input\n                    value={editedEntry}\n                    onChange={(e) => setEditedEntry(e.target.value)}\n                  />{\" \"}\n                  <button\n                    onClick={(e) => {\n                      updateItem();\n                    }}\n                  >\n                    Save\n                  </button>\n                </div>\n              ) : (\n                <div></div>\n              )}\n              <br />\n              <button\n                onClick={(e) => {\n                  setItemToUpdate(database.id);\n                  setUpdating(true);\n                }}\n              >\n                Edit\n              </button>\n              <button\n                className=\"delete\"\n                onClick={(e) => {\n                  setItemToDelete(database.id);\n                  deleteItem();\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/delaine/Documents/GitHub/lights/src/CurrentSubScriptions.js",["362"],"import { useState, useEffect } from \"react\";\nimport {\n  updateDoc,\n  getFirestore,\n  collection,\n  getDocs,\n  deleteDoc,\n  addDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\n\nexport default function CurrentSubScriptions() {\n  const db = getFirestore();\n\n  const currentUser = useAuth();\n\n  const colRef = collection(db, \"currentSubscriptions\");\n\n  const [activeStatus, setActiveStatus] = useState(false);\n  const [subscription, setSubscription] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n  const [itemToUpdate, setItemToUpdate] = useState(\"\");\n  const [updating, setUpdating] = useState(false);\n  const [editedEntry, setEditedEntry] = useState(\"\");\n\n  function addSubscription(e) {\n    e.preventDefault();\n\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser?.email,\n      subscription: subscription,\n      active: false,\n    });\n    setSubscription(\"\");\n    fetchSubscriptions();\n  }\n\n  function fetchSubscriptions() {\n    getDocs(colRef).then((snapshot) => {\n      const items = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      console.log(items);\n      setDatabaseItems(items);\n    });\n  }\n  useEffect(() => {\n    fetchSubscriptions();\n  }, []);\n\n  function updateSubscription(e) {\n    console.log(\"To be UPDATED \" + itemToUpdate);\n    if (itemToUpdate !== \"\") {\n      console.log(\"Updating\");\n      const docToUpdate = doc(db, \"currentSubscriptions\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        subscription: editedEntry,\n      }).then(() => {\n        console.log(\"It supposed to be updated\");\n      });\n      setUpdating(false);\n\n      fetchSubscriptions();\n    }\n  }\n  async function changeActiveStatus(e) {\n    return setActiveStatus(e);\n  }\n  function toggleActiveSubscription(e) {\n    if (itemToUpdate !== \"\") {\n      const docToUpdate = doc(db, \"currentSubscriptions\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        active: activeStatus,\n      });\n\n      fetchSubscriptions();\n    }\n  }\n\n  function deleteSubscription(e) {\n    console.log(\"To be Deleted \" + itemToDelete);\n    if (itemToDelete !== \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"currentSubscriptions\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchSubscriptions();\n    }\n  }\n  return (\n    <div className=\"post-component\">\n      <br />\n      <br />\n\n      <form className=\"add\">\n        <input\n          rows=\"10\"\n          cols=\"70\"\n          value={subscription}\n          onChange={(e) => setSubscription(e.target.value)}\n          type=\"text\"\n          name=\"subscription\"\n          required\n        />\n        <br />\n        <button onClick={addSubscription}>Add Subscription</button>\n      </form>\n\n      <div>\n        {\" \"}\n        <h2>Subscription List</h2>\n        for some reason you have to press the Active/inactive button 2 times\n        before it updates, idk why yet\n        <div>\n          {dataBaseItems.map((database, id) => (\n            <div className=\"insertedItem\" key={database.id}>\n              <p className=\"date\">{database.displayDate}</p>\n              <p> {database.subscription}</p>Added by: <i>{database.author}</i>\n              <br />\n              <div\n                onClick={() => {\n                  setItemToUpdate(database.id);\n                  changeActiveStatus(!database.active);\n                  toggleActiveSubscription();\n                }}\n              >\n                {database.active ? (\n                  <button className=\"activeStyle\">Active</button>\n                ) : (\n                  <button className=\"inactiveStyle\">Innactive</button>\n                )}\n              </div>\n              {updating ? (\n                <div>\n                  {\" \"}\n                  <p>Change subscription to:</p>\n                  <input\n                    value={editedEntry}\n                    onChange={(e) => setEditedEntry(e.target.value)}\n                  />{\" \"}\n                  <button\n                    onClick={(e) => {\n                      updateSubscription();\n                    }}\n                  >\n                    Save\n                  </button>\n                </div>\n              ) : (\n                <div></div>\n              )}\n              <br />\n              <button\n                onClick={(e) => {\n                  setItemToUpdate(database.id);\n                  setUpdating(true);\n                }}\n              >\n                Edit\n              </button>\n              <button\n                className=\"delete\"\n                onClick={(e) => {\n                  setItemToDelete(database.id);\n                  deleteSubscription();\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/delaine/Documents/GitHub/lights/src/changeProfilePic.js",[],"/Users/delaine/Documents/GitHub/lights/src/watch.js",[],"/Users/delaine/Documents/GitHub/lights/src/firebase.js",[],"/Users/delaine/Documents/GitHub/lights/src/loggedOut.js",[],"/Users/delaine/Documents/GitHub/lights/src/LoggedIn.js",["363","364"],"/Users/delaine/Documents/GitHub/lights/src/Utilities/theDate.js",[],"/Users/delaine/Documents/GitHub/lights/src/redux/actions/index.js",[],"/Users/delaine/Documents/GitHub/lights/src/redux/reducers/index.js",["365"],"/Users/delaine/Documents/GitHub/lights/src/auth.js",[],"/Users/delaine/Documents/GitHub/lights/src/redux/types/index.js",[],"/Users/delaine/Documents/GitHub/FINALS/Organiser/src/index.js",[],"/Users/delaine/Documents/GitHub/FINALS/Organiser/src/App.js",[],"/Users/delaine/Documents/GitHub/FINALS/Organiser/src/redux/store/index.js",[],"/Users/delaine/Documents/GitHub/FINALS/Organiser/src/makeRandomPost.js",["366"],"/Users/delaine/Documents/GitHub/FINALS/Organiser/src/navbar.js",[],"/Users/delaine/Documents/GitHub/FINALS/Organiser/src/activities.js",["367","368","369"],"/Users/delaine/Documents/GitHub/FINALS/Organiser/src/places.js",["370"],"/Users/delaine/Documents/GitHub/FINALS/Organiser/src/dashboard.js",[],"/Users/delaine/Documents/GitHub/FINALS/Organiser/src/ShowsToWatch.js",["371"],"/Users/delaine/Documents/GitHub/FINALS/Organiser/src/changeProfilePic.js",[],"/Users/delaine/Documents/GitHub/FINALS/Organiser/src/watch.js",[],"/Users/delaine/Documents/GitHub/FINALS/Organiser/src/CurrentSubScriptions.js",["372"],"/Users/delaine/Documents/GitHub/FINALS/Organiser/src/firebase.js",[],"/Users/delaine/Documents/GitHub/FINALS/Organiser/src/loggedOut.js",[],"/Users/delaine/Documents/GitHub/FINALS/Organiser/src/LoggedIn.js",["373","374"],"/Users/delaine/Documents/GitHub/FINALS/Organiser/src/Utilities/theDate.js",[],"/Users/delaine/Documents/GitHub/FINALS/Organiser/src/redux/reducers/index.js",["375"],"/Users/delaine/Documents/GitHub/FINALS/Organiser/src/redux/actions/index.js",[],"/Users/delaine/Documents/GitHub/FINALS/Organiser/src/auth.js",[],"/Users/delaine/Documents/GitHub/FINALS/Organiser/src/redux/types/index.js",[],{"ruleId":"376","replacedBy":"377"},{"ruleId":"378","replacedBy":"379"},{"ruleId":"380","severity":1,"message":"381","line":2,"column":45,"nodeType":"382","messageId":"383","endLine":2,"endColumn":51},{"ruleId":"384","severity":1,"message":"385","line":7,"column":1,"nodeType":"386","endLine":18,"endColumn":3},{"ruleId":"380","severity":1,"message":"387","line":1,"column":10,"nodeType":"382","messageId":"383","endLine":1,"endColumn":23},{"ruleId":"380","severity":1,"message":"388","line":1,"column":25,"nodeType":"382","messageId":"383","endLine":1,"endColumn":33},{"ruleId":"380","severity":1,"message":"389","line":1,"column":35,"nodeType":"382","messageId":"383","endLine":1,"endColumn":44},{"ruleId":"380","severity":1,"message":"390","line":3,"column":3,"nodeType":"382","messageId":"383","endLine":3,"endColumn":13},{"ruleId":"380","severity":1,"message":"391","line":4,"column":3,"nodeType":"382","messageId":"383","endLine":4,"endColumn":15},{"ruleId":"380","severity":1,"message":"392","line":5,"column":3,"nodeType":"382","messageId":"383","endLine":5,"endColumn":13},{"ruleId":"380","severity":1,"message":"393","line":6,"column":3,"nodeType":"382","messageId":"383","endLine":6,"endColumn":10},{"ruleId":"380","severity":1,"message":"394","line":7,"column":3,"nodeType":"382","messageId":"383","endLine":7,"endColumn":12},{"ruleId":"380","severity":1,"message":"381","line":8,"column":3,"nodeType":"382","messageId":"383","endLine":8,"endColumn":9},{"ruleId":"380","severity":1,"message":"395","line":9,"column":3,"nodeType":"382","messageId":"383","endLine":9,"endColumn":6},{"ruleId":"380","severity":1,"message":"396","line":12,"column":10,"nodeType":"382","messageId":"383","endLine":12,"endColumn":17},{"ruleId":"380","severity":1,"message":"397","line":13,"column":8,"nodeType":"382","messageId":"383","endLine":13,"endColumn":18},{"ruleId":"398","severity":1,"message":"399","line":39,"column":13,"nodeType":"400","endLine":45,"endColumn":15},{"ruleId":"398","severity":1,"message":"399","line":52,"column":13,"nodeType":"400","endLine":58,"endColumn":15},{"ruleId":"380","severity":1,"message":"387","line":1,"column":10,"nodeType":"382","messageId":"383","endLine":1,"endColumn":23},{"ruleId":"380","severity":1,"message":"390","line":3,"column":3,"nodeType":"382","messageId":"383","endLine":3,"endColumn":13},{"ruleId":"380","severity":1,"message":"401","line":19,"column":11,"nodeType":"382","messageId":"383","endLine":19,"endColumn":22},{"ruleId":"380","severity":1,"message":"402","line":24,"column":10,"nodeType":"382","messageId":"383","endLine":24,"endColumn":16},{"ruleId":"380","severity":1,"message":"403","line":24,"column":18,"nodeType":"382","messageId":"383","endLine":24,"endColumn":27},{"ruleId":"404","severity":1,"message":"405","line":56,"column":6,"nodeType":"406","endLine":56,"endColumn":8,"suggestions":"407"},{"ruleId":"408","severity":1,"message":"409","line":60,"column":22,"nodeType":"410","messageId":"411","endLine":60,"endColumn":24},{"ruleId":"380","severity":1,"message":"387","line":1,"column":10,"nodeType":"382","messageId":"383","endLine":1,"endColumn":23},{"ruleId":"380","severity":1,"message":"390","line":3,"column":3,"nodeType":"382","messageId":"383","endLine":3,"endColumn":13},{"ruleId":"380","severity":1,"message":"401","line":19,"column":11,"nodeType":"382","messageId":"383","endLine":19,"endColumn":22},{"ruleId":"380","severity":1,"message":"402","line":24,"column":10,"nodeType":"382","messageId":"383","endLine":24,"endColumn":16},{"ruleId":"380","severity":1,"message":"403","line":24,"column":18,"nodeType":"382","messageId":"383","endLine":24,"endColumn":27},{"ruleId":"404","severity":1,"message":"412","line":56,"column":6,"nodeType":"406","endLine":56,"endColumn":8,"suggestions":"413"},{"ruleId":"408","severity":1,"message":"409","line":60,"column":22,"nodeType":"410","messageId":"411","endLine":60,"endColumn":24},{"ruleId":"380","severity":1,"message":"401","line":19,"column":11,"nodeType":"382","messageId":"383","endLine":19,"endColumn":22},{"ruleId":"404","severity":1,"message":"414","line":58,"column":6,"nodeType":"406","endLine":58,"endColumn":8,"suggestions":"415"},{"ruleId":"408","severity":1,"message":"409","line":62,"column":22,"nodeType":"410","messageId":"411","endLine":62,"endColumn":24},{"ruleId":"408","severity":1,"message":"409","line":90,"column":22,"nodeType":"410","messageId":"411","endLine":90,"endColumn":24},{"ruleId":"380","severity":1,"message":"401","line":19,"column":11,"nodeType":"382","messageId":"383","endLine":19,"endColumn":22},{"ruleId":"404","severity":1,"message":"416","line":58,"column":6,"nodeType":"406","endLine":58,"endColumn":8,"suggestions":"417"},{"ruleId":"408","severity":1,"message":"409","line":62,"column":22,"nodeType":"410","messageId":"411","endLine":62,"endColumn":24},{"ruleId":"380","severity":1,"message":"418","line":76,"column":11,"nodeType":"382","messageId":"383","endLine":76,"endColumn":18},{"ruleId":"380","severity":1,"message":"419","line":77,"column":11,"nodeType":"382","messageId":"383","endLine":77,"endColumn":19},{"ruleId":"408","severity":1,"message":"409","line":81,"column":22,"nodeType":"410","messageId":"411","endLine":81,"endColumn":24},{"ruleId":"408","severity":1,"message":"409","line":92,"column":22,"nodeType":"410","messageId":"411","endLine":92,"endColumn":24},{"ruleId":"380","severity":1,"message":"420","line":101,"column":9,"nodeType":"382","messageId":"383","endLine":101,"endColumn":20},{"ruleId":"380","severity":1,"message":"421","line":104,"column":9,"nodeType":"382","messageId":"383","endLine":104,"endColumn":22},{"ruleId":"380","severity":1,"message":"387","line":1,"column":10,"nodeType":"382","messageId":"383","endLine":1,"endColumn":23},{"ruleId":"380","severity":1,"message":"390","line":3,"column":3,"nodeType":"382","messageId":"383","endLine":3,"endColumn":13},{"ruleId":"380","severity":1,"message":"422","line":11,"column":10,"nodeType":"382","messageId":"383","endLine":11,"endColumn":21},{"ruleId":"404","severity":1,"message":"423","line":56,"column":6,"nodeType":"406","endLine":56,"endColumn":8,"suggestions":"424"},{"ruleId":"408","severity":1,"message":"409","line":60,"column":22,"nodeType":"410","messageId":"411","endLine":60,"endColumn":24},{"ruleId":"376","replacedBy":"425"},{"ruleId":"378","replacedBy":"426"},{"ruleId":"380","severity":1,"message":"381","line":2,"column":45,"nodeType":"382","messageId":"383","endLine":2,"endColumn":51},{"ruleId":"384","severity":1,"message":"385","line":7,"column":1,"nodeType":"386","endLine":18,"endColumn":3},{"ruleId":"376","replacedBy":"427"},{"ruleId":"378","replacedBy":"428"},{"ruleId":"404","severity":1,"message":"416","line":55,"column":6,"nodeType":"406","endLine":55,"endColumn":8,"suggestions":"429"},{"ruleId":"404","severity":1,"message":"423","line":54,"column":6,"nodeType":"406","endLine":54,"endColumn":8,"suggestions":"430"},{"ruleId":"404","severity":1,"message":"416","line":55,"column":6,"nodeType":"406","endLine":55,"endColumn":8,"suggestions":"431"},{"ruleId":"380","severity":1,"message":"418","line":73,"column":11,"nodeType":"382","messageId":"383","endLine":73,"endColumn":18},{"ruleId":"380","severity":1,"message":"419","line":74,"column":11,"nodeType":"382","messageId":"383","endLine":74,"endColumn":19},{"ruleId":"404","severity":1,"message":"416","line":55,"column":6,"nodeType":"406","endLine":55,"endColumn":8,"suggestions":"432"},{"ruleId":"404","severity":1,"message":"414","line":55,"column":6,"nodeType":"406","endLine":55,"endColumn":8,"suggestions":"433"},{"ruleId":"398","severity":1,"message":"399","line":28,"column":13,"nodeType":"400","endLine":34,"endColumn":15},{"ruleId":"398","severity":1,"message":"399","line":41,"column":13,"nodeType":"400","endLine":47,"endColumn":15},{"ruleId":"384","severity":1,"message":"385","line":7,"column":1,"nodeType":"386","endLine":18,"endColumn":3},{"ruleId":"404","severity":1,"message":"416","line":55,"column":6,"nodeType":"406","endLine":55,"endColumn":8,"suggestions":"434"},{"ruleId":"404","severity":1,"message":"416","line":55,"column":6,"nodeType":"406","endLine":55,"endColumn":8,"suggestions":"435"},{"ruleId":"380","severity":1,"message":"418","line":73,"column":11,"nodeType":"382","messageId":"383","endLine":73,"endColumn":18},{"ruleId":"380","severity":1,"message":"419","line":74,"column":11,"nodeType":"382","messageId":"383","endLine":74,"endColumn":19},{"ruleId":"404","severity":1,"message":"423","line":54,"column":6,"nodeType":"406","endLine":54,"endColumn":8,"suggestions":"436"},{"ruleId":"404","severity":1,"message":"416","line":55,"column":6,"nodeType":"406","endLine":55,"endColumn":8,"suggestions":"437"},{"ruleId":"404","severity":1,"message":"414","line":55,"column":6,"nodeType":"406","endLine":55,"endColumn":8,"suggestions":"438"},{"ruleId":"398","severity":1,"message":"399","line":28,"column":13,"nodeType":"400","endLine":34,"endColumn":15},{"ruleId":"398","severity":1,"message":"399","line":41,"column":13,"nodeType":"400","endLine":47,"endColumn":15},{"ruleId":"384","severity":1,"message":"385","line":7,"column":1,"nodeType":"386","endLine":18,"endColumn":3},"no-native-reassign",["439"],"no-negated-in-lhs",["440"],"no-unused-vars","'addDoc' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'createElement' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'FieldValue' is defined but never used.","'getFirestore' is defined but never used.","'collection' is defined but never used.","'getDocs' is defined but never used.","'deleteDoc' is defined but never used.","'doc' is defined but never used.","'theDate' is defined but never used.","'RandomPost' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'loginStatus' is assigned a value but never used.","'author' is assigned a value but never used.","'setAuthor' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.","ArrayExpression",["441"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'fetchShows'. Either include it or remove the dependency array.",["442"],"React Hook useEffect has a missing dependency: 'fetchSubscriptions'. Either include it or remove the dependency array.",["443"],"React Hook useEffect has a missing dependency: 'fetchItems'. Either include it or remove the dependency array.",["444"],"'setItem' is assigned a value but never used.","'isActive' is assigned a value but never used.","'activeStyle' is assigned a value but never used.","'inactiveStyle' is assigned a value but never used.","'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchPlaces'. Either include it or remove the dependency array.",["445"],["439"],["440"],["439"],["440"],["446"],["447"],["448"],["449"],["450"],["451"],["452"],["453"],["454"],["455"],"no-global-assign","no-unsafe-negation",{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"462","fix":"466"},{"desc":"464","fix":"467"},{"desc":"462","fix":"468"},{"desc":"462","fix":"469"},{"desc":"460","fix":"470"},{"desc":"462","fix":"471"},{"desc":"462","fix":"472"},{"desc":"464","fix":"473"},{"desc":"462","fix":"474"},{"desc":"460","fix":"475"},"Update the dependencies array to be: [fetchPosts]",{"range":"476","text":"477"},"Update the dependencies array to be: [fetchShows]",{"range":"478","text":"479"},"Update the dependencies array to be: [fetchSubscriptions]",{"range":"480","text":"481"},"Update the dependencies array to be: [fetchItems]",{"range":"482","text":"483"},"Update the dependencies array to be: [fetchPlaces]",{"range":"484","text":"485"},{"range":"486","text":"483"},{"range":"487","text":"485"},{"range":"488","text":"483"},{"range":"489","text":"483"},{"range":"490","text":"481"},{"range":"491","text":"483"},{"range":"492","text":"483"},{"range":"493","text":"485"},{"range":"494","text":"483"},{"range":"495","text":"481"},[1342,1344],"[fetchPosts]",[1351,1353],"[fetchShows]",[1547,1549],"[fetchSubscriptions]",[1475,1477],"[fetchItems]",[1292,1294],"[fetchPlaces]",[1309,1311],[1220,1222],[1325,1327],[1281,1283],[1397,1399],[1281,1283],[1325,1327],[1220,1222],[1309,1311],[1397,1399]]
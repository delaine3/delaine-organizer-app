{"ast":null,"code":"var _jsxFileName = \"/Users/delaine/Documents/GitHub/firefly/src/auth.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { signup, login, logout, useAuth } from \"./firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { updateLoginStatus } from \"./redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Auth() {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const isLoggedIn = isLoggedin => {\n    dispatch(updateLoginStatus(isLoggedin));\n  };\n\n  const [loading, setLoading] = useState(false);\n  const currentUser = useAuth();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  async function handleSignup() {\n    setLoading(true);\n\n    try {\n      await signup(emailRef.current.value, passwordRef.current.value);\n      isLoggedIn(true);\n    } catch {\n      isLoggedIn(false);\n      alert(\"Error!\");\n    }\n\n    setLoading(false);\n  }\n\n  async function handleLogin() {\n    setLoading(true);\n\n    try {\n      await login(emailRef.current.value, passwordRef.current.value);\n      isLoggedIn(true);\n    } catch {\n      isLoggedIn(false);\n      alert(\"Error!\");\n    }\n\n    setLoading(false);\n  }\n\n  async function handleLogout() {\n    setLoading(true);\n\n    try {\n      await logout();\n      isLoggedIn(false);\n    } catch {\n      alert(\"Logout Failed\");\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"fields\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You are not logged in. Sign up or login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: emailRef,\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: passwordRef,\n        type: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: loading || currentUser,\n      onClick: handleSignup,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: loading || currentUser,\n      onClick: handleLogin,\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: loading || !currentUser,\n      onClick: handleLogout,\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Auth, \"vuH3xP4rZqKWXMOinLka9rDieBU=\", false, function () {\n  return [useDispatch, useAuth];\n});\n\n_c = Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/delaine/Documents/GitHub/firefly/src/auth.js"],"names":["useRef","useState","signup","login","logout","useAuth","useDispatch","updateLoginStatus","Auth","dispatch","isLoggedIn","isLoggedin","loading","setLoading","currentUser","emailRef","passwordRef","handleSignup","current","value","alert","handleLogin","handleLogout"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\nimport { signup, login, logout, useAuth } from \"./firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { updateLoginStatus } from \"./redux/actions\";\n\nexport default function Auth() {\n  const dispatch = useDispatch();\n\n  const isLoggedIn = (isLoggedin) => {\n    dispatch(updateLoginStatus(isLoggedin));\n  };\n\n  const [loading, setLoading] = useState(false);\n\n  const currentUser = useAuth();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  async function handleSignup() {\n    setLoading(true);\n    try {\n      await signup(emailRef.current.value, passwordRef.current.value);\n      isLoggedIn(true);\n    } catch {\n      isLoggedIn(false);\n\n      alert(\"Error!\");\n    }\n    setLoading(false);\n  }\n\n  async function handleLogin() {\n    setLoading(true);\n    try {\n      await login(emailRef.current.value, passwordRef.current.value);\n      isLoggedIn(true);\n    } catch {\n      isLoggedIn(false);\n\n      alert(\"Error!\");\n    }\n    setLoading(false);\n  }\n\n  async function handleLogout() {\n    setLoading(true);\n    try {\n      await logout();\n      isLoggedIn(false);\n    } catch {\n      alert(\"Logout Failed\");\n    }\n    setLoading(false);\n  }\n\n  return (\n    <div className=\"post-component\">\n      <div id=\"fields\">\n        <h1>You are not logged in. Sign up or login</h1>\n        <input ref={emailRef} placeholder=\"Email\" />\n        <input ref={passwordRef} type=\"password\" placeholder=\"Password\" />\n      </div>\n      <button disabled={loading || currentUser} onClick={handleSignup}>\n        Sign Up\n      </button>\n      <button disabled={loading || currentUser} onClick={handleLogin}>\n        Log In\n      </button>\n      <button disabled={loading || !currentUser} onClick={handleLogout}>\n        Log Out\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
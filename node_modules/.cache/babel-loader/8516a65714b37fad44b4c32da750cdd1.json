{"ast":null,"code":"var _jsxFileName = \"/Users/delaine/Documents/GitHub/FINALS/Organiser/src/activities.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { updateDoc, getFirestore, collection, getDocs, deleteDoc, addDoc, doc } from \"firebase/firestore\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Activities() {\n  _s();\n\n  const db = getFirestore();\n  const currentUser = useAuth();\n  const colRef = collection(db, \"activities\");\n  const [activeStatus, setActiveStatus] = useState(false);\n  const [activity, setActivity] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n  const [itemToUpdate, setItemToUpdate] = useState(\"\");\n  const [updating, setUpdating] = useState(false);\n  const [editedEntry, setEditedEntry] = useState(\"\");\n\n  function addItem(e) {\n    e.preventDefault();\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser === null || currentUser === void 0 ? void 0 : currentUser.email,\n      activity: activity,\n      active: false\n    });\n    setActivity(\"\");\n    fetchItems();\n  }\n\n  function fetchItems() {\n    getDocs(colRef).then(snapshot => {\n      const items = snapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      }));\n      console.log(items);\n      setDatabaseItems(items);\n    });\n  }\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  function updateItem(e) {\n    console.log(\"To be UPDATED \" + itemToUpdate);\n\n    if (itemToUpdate !== \"\") {\n      console.log(\"Updating\");\n      const docToUpdate = doc(db, \"activities\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        activity: editedEntry\n      }).then(() => {\n        console.log(\"It supposed to be updated\");\n      });\n      setUpdating(false);\n      fetchItems();\n    }\n  }\n\n  async function changeActiveStatus(e) {\n    const setItem = await setItemToUpdate(e.id);\n    const isActive = await setActiveStatus(!e.active);\n    return toggleDone();\n  }\n\n  function toggleDone(e) {\n    if (itemToUpdate !== \"\") {\n      const docToUpdate = doc(db, \"activities\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        active: activeStatus\n      });\n    }\n\n    fetchItems();\n  }\n\n  function deleteItem(e) {\n    console.log(\"To be Deleted \" + itemToDelete);\n\n    if (itemToDelete !== \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"activities\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchItems();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        rows: \"10\",\n        cols: \"70\",\n        value: activity,\n        onChange: e => setActivity(e.target.value),\n        type: \"text\",\n        name: \"activity\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addItem,\n        children: \"Add activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Activity List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), \"for some reason you have to press the Active/inactive button 2 times before it updates, idk why yet\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: dataBaseItems.map((database, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"insertedItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"date\",\n            children: database.displayDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", database.activity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), \"Added by: \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: database.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 52\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              changeActiveStatus(database);\n            },\n            children: database.active ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"activeStyle\",\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"inactiveStyle\",\n              children: \"Not Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), updating ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Change activity to:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editedEntry,\n              onChange: e => setEditedEntry(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                updateItem();\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              setItemToUpdate(database.id);\n              setUpdating(true);\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: e => {\n              setItemToDelete(database.id);\n              deleteItem();\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, database.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Activities, \"hpJ+reWWyuWZ75JTKeogHnv9VeE=\", false, function () {\n  return [useAuth];\n});\n\n_c = Activities;\n\nvar _c;\n\n$RefreshReg$(_c, \"Activities\");","map":{"version":3,"sources":["/Users/delaine/Documents/GitHub/FINALS/Organiser/src/activities.js"],"names":["useState","useEffect","updateDoc","getFirestore","collection","getDocs","deleteDoc","addDoc","doc","useAuth","theDate","Activities","db","currentUser","colRef","activeStatus","setActiveStatus","activity","setActivity","itemToDelete","setItemToDelete","dataBaseItems","setDatabaseItems","itemToUpdate","setItemToUpdate","updating","setUpdating","editedEntry","setEditedEntry","addItem","e","preventDefault","date","Date","displayDate","author","email","active","fetchItems","then","snapshot","items","docs","map","data","id","console","log","updateItem","docToUpdate","changeActiveStatus","setItem","isActive","toggleDone","deleteItem","docToDelete","target","value","database"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport {\n  updateDoc,\n  getFirestore,\n  collection,\n  getDocs,\n  deleteDoc,\n  addDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\n\nexport default function Activities() {\n  const db = getFirestore();\n\n  const currentUser = useAuth();\n\n  const colRef = collection(db, \"activities\");\n\n  const [activeStatus, setActiveStatus] = useState(false);\n  const [activity, setActivity] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n  const [itemToUpdate, setItemToUpdate] = useState(\"\");\n  const [updating, setUpdating] = useState(false);\n  const [editedEntry, setEditedEntry] = useState(\"\");\n\n  function addItem(e) {\n    e.preventDefault();\n\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser?.email,\n      activity: activity,\n      active: false,\n    });\n    setActivity(\"\");\n    fetchItems();\n  }\n\n  function fetchItems() {\n    getDocs(colRef).then((snapshot) => {\n      const items = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      console.log(items);\n      setDatabaseItems(items);\n    });\n  }\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  function updateItem(e) {\n    console.log(\"To be UPDATED \" + itemToUpdate);\n    if (itemToUpdate !== \"\") {\n      console.log(\"Updating\");\n      const docToUpdate = doc(db, \"activities\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        activity: editedEntry,\n      }).then(() => {\n        console.log(\"It supposed to be updated\");\n      });\n      setUpdating(false);\n\n      fetchItems();\n    }\n  }\n  async function changeActiveStatus(e) {\n    const setItem = await setItemToUpdate(e.id);\n    const isActive = await setActiveStatus(!e.active);\n    return toggleDone();\n  }\n  function toggleDone(e) {\n    if (itemToUpdate !== \"\") {\n      const docToUpdate = doc(db, \"activities\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        active: activeStatus,\n      });\n    }\n    fetchItems();\n  }\n\n  function deleteItem(e) {\n    console.log(\"To be Deleted \" + itemToDelete);\n    if (itemToDelete !== \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"activities\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchItems();\n    }\n  }\n\n  return (\n    <div className=\"post-component\">\n      <br />\n      <br />\n\n      <form className=\"add\">\n        <input\n          rows=\"10\"\n          cols=\"70\"\n          value={activity}\n          onChange={(e) => setActivity(e.target.value)}\n          type=\"text\"\n          name=\"activity\"\n          required\n        />\n        <br />\n        <button onClick={addItem}>Add activity</button>\n      </form>\n\n      <div>\n        {\" \"}\n        <h2>Activity List</h2>\n        for some reason you have to press the Active/inactive button 2 times\n        before it updates, idk why yet\n        <div>\n          {dataBaseItems.map((database, id) => (\n            <div className=\"insertedItem\" key={database.id}>\n              <p className=\"date\">{database.displayDate}</p>\n              <p> {database.activity}</p>Added by: <i>{database.author}</i>\n              <br />\n              <div\n                onClick={() => {\n                  changeActiveStatus(database);\n                }}\n              >\n                {database.active ? (\n                  <button className=\"activeStyle\">Done</button>\n                ) : (\n                  <button className=\"inactiveStyle\">Not Done</button>\n                )}\n              </div>\n              {updating ? (\n                <div>\n                  {\" \"}\n                  <p>Change activity to:</p>\n                  <textarea\n                    value={editedEntry}\n                    onChange={(e) => setEditedEntry(e.target.value)}\n                  />{\" \"}\n                  <button\n                    onClick={(e) => {\n                      updateItem();\n                    }}\n                  >\n                    Save\n                  </button>\n                </div>\n              ) : (\n                <div></div>\n              )}\n              <br />\n              <button\n                onClick={(e) => {\n                  setItemToUpdate(database.id);\n                  setUpdating(true);\n                }}\n              >\n                Edit\n              </button>\n              <button\n                className=\"delete\"\n                onClick={(e) => {\n                  setItemToDelete(database.id);\n                  deleteItem();\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
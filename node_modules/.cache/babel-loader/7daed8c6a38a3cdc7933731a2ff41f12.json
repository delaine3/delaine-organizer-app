{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\18083\\\\Documents\\\\GitHub\\\\delaine-organizer-app\\\\src\\\\ShowsToWatch.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { updateDoc, getFirestore, collection, getDocs, deleteDoc, addDoc, doc } from \"firebase/firestore\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ShowsToWatch() {\n  _s();\n\n  const db = getFirestore();\n  const currentUser = useAuth();\n  const colRef = collection(db, \"currentShows\");\n  const [show, setShow] = useState(\"\");\n  const [currentSeason, setcurrentSeason] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n  const [updating, setUpdating] = useState(false);\n  const [editedEntry, setEditedEntry] = useState(\"\");\n  const [form, setForm] = useState({\n    show: \"\"\n  });\n\n  function addItem(e) {\n    e.preventDefault();\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser === null || currentUser === void 0 ? void 0 : currentUser.email,\n      show: form.show,\n      active: false,\n      completed: false,\n      currentSeason: currentSeason\n    });\n    setcurrentSeason(\"\");\n    setShow(\"\");\n    setForm({ ...form,\n      [show]: \"\"\n    });\n    console.log(value);\n    fetchItems();\n  }\n\n  function fetchItems() {\n    getDocs(colRef).then(snapshot => {\n      const items = snapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      }));\n      console.log(items);\n      setDatabaseItems(items);\n    });\n  }\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  function updateItem(itemToUpdate) {\n    console.log(\"To be UPDATED \" + itemToUpdate);\n\n    if (itemToUpdate !== \"\") {\n      console.log(\"Updating\");\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        show: editedEntry\n      }).then(() => {\n        console.log(\"It supposed to be updated\");\n      });\n      setUpdating(false);\n      fetchItems();\n    }\n  }\n\n  function toggleCompletetionStatus(completionStatus, itemToUpdate) {\n    if (itemToUpdate !== \"\") {\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        completed: completionStatus\n      });\n    }\n\n    fetchItems();\n  }\n\n  function toggleActive(activeStatus, itemToUpdate) {\n    if (itemToUpdate !== \"\") {\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        active: activeStatus\n      });\n    }\n\n    fetchItems();\n  }\n\n  function deleteItem(itemToDelete) {\n    console.log(\"To be Deleted \" + itemToDelete);\n\n    if (itemToDelete !== \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"currentShows\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchItems();\n    }\n  }\n\n  const handleChange = e => {\n    const target = e.target;\n    var {\n      name,\n      value\n    } = e.target;\n\n    if (name == \"expiry_date\" || name == \"foodType\" || name == \"quantityUnit\") {\n      value = target.value.toString();\n    } else {\n      value = target.name === \"should_refrigerate\" ? target.checked : target.value;\n    }\n\n    setForm({ ...form,\n      [name]: value\n    });\n    console.log(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"post-component\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Show Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        rows: \"10\",\n        cols: \"70\",\n        value: form.show,\n        onChange: handleChange,\n        type: \"text\",\n        name: \"show\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Current Season\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: currentSeason,\n        onChange: e => setcurrentSeason(e.target.value),\n        type: \"text\",\n        name: \"currentSeason\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-post\",\n        onClick: addItem,\n        children: \"Add show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Show List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" item-grid\",\n        children: dataBaseItems.map((database, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: updating ? \"insertedItem-tall\" : \"insertedItem-short\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Show: \", database.show]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 11\n          }, this), database.currentSeason ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Current Season: \", database.currentSeason]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"active-buttons-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                toggleActive(!database.active, database.id);\n              },\n              children: database.active ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"activeStyleProgress\",\n                children: \"In Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"inactiveStyleProgress\",\n                children: \"Not In Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                toggleCompletetionStatus(!database.completed, database.id);\n              },\n              children: database.completed ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"activeStyle\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"inactiveStyle\",\n                children: \"Not Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 11\n          }, this), updating ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Change show to:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: editedEntry,\n              onChange: e => setEditedEntry(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                updateItem(database.id);\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit\",\n            onClick: e => {\n              setUpdating(true);\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: e => {\n              deleteItem(database.id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Added by: \", database.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, database.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShowsToWatch, \"Gs31kNXhCWqL4bpz29RIipXmg4w=\", false, function () {\n  return [useAuth];\n});\n\n_c = ShowsToWatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowsToWatch\");","map":{"version":3,"sources":["C:/Users/18083/Documents/GitHub/delaine-organizer-app/src/ShowsToWatch.js"],"names":["useState","useEffect","updateDoc","getFirestore","collection","getDocs","deleteDoc","addDoc","doc","useAuth","theDate","ShowsToWatch","db","currentUser","colRef","show","setShow","currentSeason","setcurrentSeason","dataBaseItems","setDatabaseItems","updating","setUpdating","editedEntry","setEditedEntry","form","setForm","addItem","e","preventDefault","date","Date","displayDate","author","email","active","completed","console","log","value","fetchItems","then","snapshot","items","docs","map","data","id","updateItem","itemToUpdate","docToUpdate","toggleCompletetionStatus","completionStatus","toggleActive","activeStatus","deleteItem","itemToDelete","docToDelete","handleChange","target","name","toString","checked","database"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {\r\n  updateDoc,\r\n  getFirestore,\r\n  collection,\r\n  getDocs,\r\n  deleteDoc,\r\n  addDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { useAuth } from \"./firebase\";\r\nimport { theDate } from \"./Utilities/theDate\";\r\n\r\nexport default function ShowsToWatch() {\r\n  const db = getFirestore();\r\n\r\n  const currentUser = useAuth();\r\n\r\n  const colRef = collection(db, \"currentShows\");\r\n\r\n  const [show, setShow] = useState(\"\");\r\n  const [currentSeason, setcurrentSeason] = useState(\"\");\r\n\r\n  const [dataBaseItems, setDatabaseItems] = useState([]);\r\n  const [updating, setUpdating] = useState(false);\r\n  const [editedEntry, setEditedEntry] = useState(\"\");\r\n\r\n  const [form, setForm]= useState({\r\n    show: \"\",\r\n\r\n  });\r\n\r\n  function addItem(e) {\r\n    e.preventDefault();\r\n\r\n    addDoc(colRef, {\r\n      date: new Date(),\r\n      displayDate: theDate,\r\n      author: currentUser?.email,\r\n      show: form.show,\r\n      active: false,\r\n      completed: false,\r\n      currentSeason: currentSeason\r\n    });\r\n    setcurrentSeason(\"\")\r\n    setShow(\"\");\r\n\r\n    setForm({\r\n      ...form,\r\n      [show]: \"\",\r\n    });\r\n\r\n    console.log(value);\r\n    fetchItems();\r\n  }\r\n\r\n  function fetchItems() {\r\n    getDocs(colRef).then((snapshot) => {\r\n      const items = snapshot.docs.map((doc) => ({\r\n        ...doc.data(),\r\n        id: doc.id,\r\n      }));\r\n      console.log(items);\r\n      setDatabaseItems(items);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    fetchItems();\r\n  }, []);\r\n\r\n  function updateItem(itemToUpdate) {\r\n    console.log(\"To be UPDATED \" + itemToUpdate);\r\n    if (itemToUpdate !== \"\") {\r\n      console.log(\"Updating\");\r\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\r\n      updateDoc(docToUpdate, {\r\n        show: editedEntry,\r\n      }).then(() => {\r\n        console.log(\"It supposed to be updated\");\r\n      });\r\n      setUpdating(false);\r\n\r\n      fetchItems();\r\n    }\r\n  }\r\n  function toggleCompletetionStatus(completionStatus,itemToUpdate) {\r\n    if (itemToUpdate !== \"\") {\r\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\r\n      updateDoc(docToUpdate, {\r\n        completed: completionStatus,\r\n      });\r\n    }\r\n    fetchItems();\r\n  }\r\n  function toggleActive(activeStatus,itemToUpdate) {\r\n    if (itemToUpdate !== \"\") {\r\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\r\n      updateDoc(docToUpdate, {\r\n        active: activeStatus,\r\n      });\r\n    }\r\n    fetchItems();\r\n  }\r\n\r\n  function deleteItem(itemToDelete) {\r\n    console.log(\"To be Deleted \" + itemToDelete);\r\n    if (itemToDelete !== \"\") {\r\n      console.log(\"Deleting\");\r\n      const docToDelete = doc(db, \"currentShows\", itemToDelete);\r\n      deleteDoc(docToDelete).then(() => {\r\n        console.log(\"It supposed to be deleted\");\r\n      });\r\n      fetchItems();\r\n    }\r\n  }\r\n  const handleChange = (e) => {\r\n    const target = e.target;\r\n    var { name, value } = e.target;\r\n\r\n    if (name == \"expiry_date\" || name == \"foodType\" || name == \"quantityUnit\") {\r\n      value = target.value.toString();\r\n    } else {\r\n      value = target.name === \"should_refrigerate\" ? target.checked : target.value;\r\n    }\r\n\r\n    setForm({\r\n      ...form,\r\n      [name]: value,\r\n    });\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"category\" >\r\n      <br />\r\n      <br />\r\n\r\n      <form className=\"post-component\">\r\n        <label>Show Name</label>\r\n        <input\r\n          rows=\"10\"\r\n          cols=\"70\"\r\n          value={form.show}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"show\"\r\n          required\r\n        />\r\n        <br />\r\n        <label>Current Season</label>\r\n        <input \r\n        value={currentSeason}\r\n        onChange={(e)=>setcurrentSeason(e.target.value)}\r\n        type=\"text\"\r\n        name=\"currentSeason\"/>\r\n\r\n        <button className=\"add-post\" onClick={addItem}>Add show</button>\r\n      </form>\r\n\r\n      <div>\r\n        {\" \"}\r\n        <h2>Show List</h2>\r\n      \r\n        <div className=\" item-grid\">\r\n          {dataBaseItems.map((database, id) => (\r\n            <div className={updating ? \"insertedItem-tall\" : \"insertedItem-short\"} key={database.id}>\r\n          <p> Show: {database.show}</p>    \r\n          {    database.currentSeason ? <p> Current Season: {database.currentSeason }</p>  : <></>            \r\n}\r\n          \r\n          <div className=\"active-buttons-container\">\r\n              <div \r\n                onClick={() => {\r\n                  toggleActive(!database.active,database.id);\r\n                }}\r\n              >\r\n                {database.active ? (\r\n                  <button className=\"activeStyleProgress\">In Progress</button>\r\n                ) : (\r\n                  <button className=\"inactiveStyleProgress\">Not In Progress</button>\r\n                )}\r\n              </div>\r\n              <div\r\n                onClick={() => {\r\n                  toggleCompletetionStatus(!database.completed,database.id);\r\n                }}\r\n              >\r\n                {database.completed ? (\r\n                  <button className=\"activeStyle\">Completed</button>\r\n                ) : (\r\n                  <button className=\"inactiveStyle\">Not Completed</button>\r\n                )}\r\n              </div>\r\n              </div>\r\n              {updating ? (\r\n                <div>\r\n                  {\" \"}\r\n                  <p>Change show to:</p>\r\n                  <input\r\n                    value={editedEntry}\r\n                    onChange={(e) => setEditedEntry(e.target.value)}\r\n                  />{\" \"}\r\n                  <button\r\n                    onClick={(e) => {\r\n                      updateItem(database.id);\r\n                    }}\r\n                  >\r\n                    Save\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n              <br />\r\n              <button\r\n                className=\"edit\"\r\n                onClick={(e) => {\r\n                  setUpdating(true);\r\n                }}\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                className=\"delete\"\r\n                onClick={(e) => {\r\n                  deleteItem(database.id);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n              <p>Added by: {database.author}</p>\r\n\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
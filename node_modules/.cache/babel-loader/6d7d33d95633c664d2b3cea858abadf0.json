{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\18083\\\\Documents\\\\GitHub\\\\delaine-organizer-app\\\\src\\\\CurrentSubScriptions.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { updateDoc, getFirestore, collection, getDocs, deleteDoc, addDoc, doc } from \"firebase/firestore\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CurrentSubScriptions() {\n  _s();\n\n  const db = getFirestore();\n  const currentUser = useAuth();\n  const colRef = collection(db, \"currentSubscriptions\");\n  const [subscription, setSubscription] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n  const [updating, setUpdating] = useState(false);\n  const [editedEntry, setEditedEntry] = useState(\"\");\n\n  function addSubscription(e) {\n    e.preventDefault();\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser === null || currentUser === void 0 ? void 0 : currentUser.email,\n      subscription: subscription,\n      active: false\n    });\n    setSubscription(\"\");\n    fetchSubscriptions();\n  }\n\n  function fetchSubscriptions() {\n    getDocs(colRef).then(snapshot => {\n      const items = snapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      }));\n      console.log(items);\n      setDatabaseItems(items);\n    });\n  }\n\n  useEffect(() => {\n    fetchSubscriptions();\n  }, []);\n\n  function updateSubscription(itemToUpdate) {\n    console.log(\"To be UPDATED \" + itemToUpdate);\n\n    if (itemToUpdate !== \"\") {\n      console.log(\"Updating\");\n      const docToUpdate = doc(db, \"currentSubscriptions\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        subscription: editedEntry\n      }).then(() => {\n        console.log(\"It supposed to be updated\");\n      });\n      setUpdating(false);\n      fetchSubscriptions();\n    }\n  }\n\n  function toggleActiveSubscription(itemToUpdate, activeStatus) {\n    if (itemToUpdate !== \"\") {\n      const docToUpdate = doc(db, \"currentSubscriptions\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        active: activeStatus\n      });\n      fetchSubscriptions();\n    }\n  }\n\n  function deleteSubscription(itemToDelete) {\n    console.log(\"To be Deleted \" + itemToDelete);\n\n    if (itemToDelete !== \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"currentSubscriptions\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchSubscriptions();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"post-component\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        rows: \"10\",\n        cols: \"70\",\n        value: subscription,\n        onChange: e => setSubscription(e.target.value),\n        type: \"text\",\n        name: \"subscription\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-post\",\n        onClick: addSubscription,\n        children: \"Add Subscription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Subscription List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-grid\",\n        children: dataBaseItems.map((database, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: updating ? \"insertedItem-tall\" : \"insertedItem-short\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"date\",\n            children: database.displayDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", database.subscription]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), \"Added by: \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: database.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 56\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              toggleActiveSubscription(database.id, !database.active);\n            },\n            children: database.active ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"activeStyle\",\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"inactiveStyle\",\n              children: \"Innactive\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), updating ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Change subscription to:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: editedEntry,\n              onChange: e => setEditedEntry(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                updateSubscription(database.id);\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel\",\n              onClick: e => {\n                setUpdating(false);\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit\",\n            onClick: e => {\n              setUpdating(true);\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: itemToDelete => {\n              deleteSubscription(database.id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, database.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrentSubScriptions, \"iS8mdcPpdHEU5IaUEfQmCndpNRE=\", false, function () {\n  return [useAuth];\n});\n\n_c = CurrentSubScriptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentSubScriptions\");","map":{"version":3,"sources":["C:/Users/18083/Documents/GitHub/delaine-organizer-app/src/CurrentSubScriptions.js"],"names":["useState","useEffect","updateDoc","getFirestore","collection","getDocs","deleteDoc","addDoc","doc","useAuth","theDate","CurrentSubScriptions","db","currentUser","colRef","subscription","setSubscription","dataBaseItems","setDatabaseItems","updating","setUpdating","editedEntry","setEditedEntry","addSubscription","e","preventDefault","date","Date","displayDate","author","email","active","fetchSubscriptions","then","snapshot","items","docs","map","data","id","console","log","updateSubscription","itemToUpdate","docToUpdate","toggleActiveSubscription","activeStatus","deleteSubscription","itemToDelete","docToDelete","target","value","database"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {\r\n  updateDoc,\r\n  getFirestore,\r\n  collection,\r\n  getDocs,\r\n  deleteDoc,\r\n  addDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { useAuth } from \"./firebase\";\r\nimport { theDate } from \"./Utilities/theDate\";\r\n\r\nexport default function CurrentSubScriptions() {\r\n  const db = getFirestore();\r\n\r\n  const currentUser = useAuth();\r\n\r\n  const colRef = collection(db, \"currentSubscriptions\");\r\n\r\n  const [subscription, setSubscription] = useState(\"\");\r\n  const [dataBaseItems, setDatabaseItems] = useState([]);\r\n  const [updating, setUpdating] = useState(false);\r\n  const [editedEntry, setEditedEntry] = useState(\"\");\r\n\r\n  function addSubscription(e) {\r\n    e.preventDefault();\r\n\r\n    addDoc(colRef, {\r\n      date: new Date(),\r\n      displayDate: theDate,\r\n      author: currentUser?.email,\r\n      subscription: subscription,\r\n      active: false,\r\n    });\r\n    setSubscription(\"\");\r\n    fetchSubscriptions();\r\n  }\r\n\r\n  function fetchSubscriptions() {\r\n    getDocs(colRef).then((snapshot) => {\r\n      const items = snapshot.docs.map((doc) => ({\r\n        ...doc.data(),\r\n        id: doc.id,\r\n      }));\r\n      console.log(items);\r\n      setDatabaseItems(items);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    fetchSubscriptions();\r\n  }, []);\r\n\r\n  function updateSubscription(itemToUpdate) {\r\n    console.log(\"To be UPDATED \" + itemToUpdate);\r\n    if (itemToUpdate !== \"\") {\r\n      console.log(\"Updating\");\r\n      const docToUpdate = doc(db, \"currentSubscriptions\", itemToUpdate);\r\n      updateDoc(docToUpdate, {\r\n        subscription: editedEntry,\r\n      }).then(() => {\r\n        console.log(\"It supposed to be updated\");\r\n      });\r\n      setUpdating(false);\r\n\r\n      fetchSubscriptions();\r\n    }\r\n  }\r\n\r\n  function toggleActiveSubscription(itemToUpdate,activeStatus) {\r\n    if (itemToUpdate !== \"\") {\r\n      const docToUpdate = doc(db, \"currentSubscriptions\", itemToUpdate);\r\n      updateDoc(docToUpdate, {\r\n        active: activeStatus,\r\n      });\r\n\r\n      fetchSubscriptions();\r\n    }\r\n  }\r\n\r\n  function deleteSubscription(itemToDelete) {\r\n    console.log(\"To be Deleted \" + itemToDelete);\r\n    if (itemToDelete !== \"\") {\r\n      console.log(\"Deleting\");\r\n      const docToDelete = doc(db, \"currentSubscriptions\", itemToDelete);\r\n      deleteDoc(docToDelete).then(() => {\r\n        console.log(\"It supposed to be deleted\");\r\n      });\r\n      fetchSubscriptions();\r\n    }\r\n  }\r\n  return (\r\n    <div  className=\"category\">\r\n      <br />\r\n      <br />\r\n\r\n      <form className=\"post-component\">\r\n        <input\r\n          rows=\"10\"\r\n          cols=\"70\"\r\n          value={subscription}\r\n          onChange={(e) => setSubscription(e.target.value)}\r\n          type=\"text\"\r\n          name=\"subscription\"\r\n          required\r\n        />\r\n        <br />\r\n        <button className=\"add-post\" onClick={addSubscription}>Add Subscription</button>\r\n      </form>\r\n\r\n      <div >\r\n        {\" \"}\r\n        <h2>Subscription List</h2>\r\n      \r\n        <div className=\"item-grid\">\r\n          {dataBaseItems.map((database, id) => (\r\n            <div className={updating ? \"insertedItem-tall\" : \"insertedItem-short\"} key={database.id}>\r\n              <p className=\"date\">{database.displayDate}</p>\r\n              <p> {database.subscription}</p>Added by: <i>{database.author}</i>\r\n              <br />\r\n              <div\r\n                onClick={() => {\r\n                  toggleActiveSubscription(database.id,!database.active);\r\n                }}\r\n              >\r\n                {database.active ? (\r\n                  <button className=\"activeStyle\">Active</button>\r\n                ) : (\r\n                  <button className=\"inactiveStyle\">Innactive</button>\r\n                )}\r\n              </div>\r\n              {updating ? (\r\n                <div>\r\n                  {\" \"}\r\n                  <p>Change subscription to:</p>\r\n                  <input\r\n                    value={editedEntry}\r\n                    onChange={(e) => setEditedEntry(e.target.value)}\r\n                  />{\" \"}\r\n                  <button\r\n                    onClick={(e) => {\r\n                      updateSubscription( database.id );\r\n                    }}\r\n                  >\r\n                    Save\r\n                  </button>\r\n                  <button  \r\n              className=\"cancel\"  \r\n              onClick={(e) => {\r\n                  setUpdating(false);\r\n                }}>Cancel</button> \r\n                \r\n                </div>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n              <br />\r\n              <button\r\n              className=\"edit\"\r\n                onClick={(e) => {\r\n                  setUpdating(true);\r\n                }}\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                className=\"delete\"\r\n                onClick={(itemToDelete) => {\r\n                  deleteSubscription(database.id);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/delaine/Documents/GitHub/Untitled/src/LoggedIn.js\",\n    _s = $RefreshSig$();\n\nimport { createElement, useState, useEffect } from \"react\";\nimport { getFirestore, collection, getDocs, deleteDoc, addDoc } from \"firebase/firestore\";\nimport { useAuth } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoggedIn() {\n  _s();\n\n  const db = getFirestore(); // const loginReducer = useSelector((state) => state.loginReducer);\n  //const { loginStatus } = loginReducer;\n\n  const currentUser = useAuth();\n  const colRef = collection(db, \"posts\");\n  const [post, setPost] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n\n  function addPost(e) {\n    e.preventDefault();\n    addDoc(colRef, {\n      author: currentUser === null || currentUser === void 0 ? void 0 : currentUser.email,\n      post: post\n    });\n  }\n\n  const [postList, setPostList] = useState([]);\n\n  const FetchPosts = async () => {\n    const apiCall = await fetch(getDocs(colRef));\n    const snapshot = await apiCall.docs;\n    setPostList(snapshot);\n    console.log(postList);\n  };\n\n  useEffect(() => {\n    FetchPosts();\n  }, [postList]); //useEffect(() => {\n\n  /* getDocs(colRef).then((snapshot) => {\n      snapshot.docs.forEach((doc) => {\n        postList.push({ ...doc.data(), id: doc.id });\n         /*\n        var z = document.createElement(\"li\"); // is a node\n        z.innerHTML =\n          JSON.stringify(doc.data().author) +\n          \" \" +\n          JSON.stringify(doc.data().post);\n        document.body.appendChild(z);\n        \n      });\n    }); */\n  // });\n\n  function deletePost(e) {\n    e.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Hey: \", currentUser === null || currentUser === void 0 ? void 0 : currentUser.email, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"add\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"author\",\n          children: \"Author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: author,\n          type: \"text\",\n          name: \"author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"post\",\n          children: \"Post:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: post,\n          onChange: e => setPost(e.target.value),\n          type: \"text\",\n          name: \"post\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addPost,\n          children: \" Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"delete\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"id\",\n          children: \"Document id:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"id\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deletePost,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"postlist\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Post List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), postList.map(doc => /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            scope: \"row\",\n            children: doc.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: doc.post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoggedIn, \"coTOCJkfEwSk8wbxahHkjd79tE8=\", false, function () {\n  return [useAuth];\n});\n\n_c = LoggedIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggedIn\");","map":{"version":3,"sources":["/Users/delaine/Documents/GitHub/Untitled/src/LoggedIn.js"],"names":["createElement","useState","useEffect","getFirestore","collection","getDocs","deleteDoc","addDoc","useAuth","LoggedIn","db","currentUser","colRef","post","setPost","author","setAuthor","addPost","e","preventDefault","email","postList","setPostList","FetchPosts","apiCall","fetch","snapshot","docs","console","log","deletePost","target","value","map","doc"],"mappings":"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","sourcesContent":["import { createElement, useState, useEffect } from \"react\";\nimport {\n  getFirestore,\n  collection,\n  getDocs,\n  deleteDoc,\n  addDoc,\n} from \"firebase/firestore\";\nimport { useAuth } from \"./firebase\";\n\nexport default function LoggedIn() {\n  const db = getFirestore();\n\n  // const loginReducer = useSelector((state) => state.loginReducer);\n  //const { loginStatus } = loginReducer;\n  const currentUser = useAuth();\n\n  const colRef = collection(db, \"posts\");\n\n  const [post, setPost] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n\n  function addPost(e) {\n    e.preventDefault();\n\n    addDoc(colRef, {\n      author: currentUser?.email,\n      post: post,\n    });\n  }\n  const [postList, setPostList] = useState([]);\n\n  const FetchPosts = async () => {\n    const apiCall = await fetch(getDocs(colRef));\n    const snapshot = await apiCall.docs;\n    setPostList(snapshot);\n    console.log(postList);\n  };\n\n  useEffect(() => {\n    FetchPosts();\n  }, [postList]);\n\n  //useEffect(() => {\n  /* getDocs(colRef).then((snapshot) => {\n      snapshot.docs.forEach((doc) => {\n        postList.push({ ...doc.data(), id: doc.id });\n\n        /*\n        var z = document.createElement(\"li\"); // is a node\n        z.innerHTML =\n          JSON.stringify(doc.data().author) +\n          \" \" +\n          JSON.stringify(doc.data().post);\n        document.body.appendChild(z);\n        \n      });\n    }); */\n  // });\n\n  function deletePost(e) {\n    e.preventDefault();\n  }\n  return (\n    <div>\n      <body>\n        <br />\n        <br />\n        <div>Hey: {currentUser?.email} </div>\n\n        <form className=\"add\">\n          <label htmlFor=\"author\">Author:</label>\n          <input value={author} type=\"text\" name=\"author\" />\n          <label htmlFor=\"post\">Post:</label>\n          <input\n            value={post}\n            onChange={(e) => setPost(e.target.value)}\n            type=\"text\"\n            name=\"post\"\n            required\n          />\n\n          <button onClick={addPost}> Post</button>\n        </form>\n        <form className=\"delete\">\n          <label htmlFor=\"id\">Document id:</label>\n          <input type=\"text\" name=\"id\" required />\n\n          <button onClick={deletePost}>Delete</button>\n        </form>\n        <div id=\"postlist\">\n          {\" \"}\n          <h2>Post List</h2>\n          {postList.map((doc) => (\n            <ul>\n              <li scope=\"row\">{doc.author}</li>\n              <li>{doc.post}</li>\n            </ul>\n          ))}\n        </div>\n      </body>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
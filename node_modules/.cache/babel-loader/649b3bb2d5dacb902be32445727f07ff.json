{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\18083\\\\Documents\\\\GitHub\\\\delaine-organizer-app\\\\src\\\\places.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { getFirestore, collection, getDocs, deleteDoc, addDoc, doc } from \"firebase/firestore\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Places() {\n  _s();\n\n  const db = getFirestore();\n  const currentUser = useAuth();\n  const colRef = collection(db, \"places\");\n  const [location, setLocation] = useState(\"\");\n  const [place, setPlace] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n\n  function addPlace(e) {\n    e.preventDefault();\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser === null || currentUser === void 0 ? void 0 : currentUser.email,\n      place: place,\n      location: location\n    });\n    setPlace(\"\");\n    setLocation(\"\");\n    fetchPlaces();\n  }\n\n  function fetchPlaces() {\n    getDocs(colRef).then(snapshot => {\n      const items = snapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      }));\n      console.log(items);\n      setDatabaseItems(items);\n      dataBaseItems.sort((a, b) => b.joinDate < a.joinDate ? 1 : -1);\n    });\n  }\n\n  useEffect(() => {\n    fetchPlaces();\n  }, []);\n\n  function deletePlace(itemToDelete) {\n    console.log(\"To be Deleted \" + itemToDelete);\n\n    if (itemToDelete !== \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"places\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchPlaces();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"post-component\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Place:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        rows: \"10\",\n        cols: \"70\",\n        value: place,\n        onChange: e => setPlace(e.target.value),\n        type: \"text\",\n        name: \"place\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Where:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        rows: \"4\",\n        cols: \"50\",\n        value: location,\n        onChange: e => setLocation(e.target.value),\n        type: \"text\",\n        name: \"place\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPlace,\n        children: \" Add Place\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Place List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-grid\",\n        children: dataBaseItems.map((database, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"insertedItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"date\",\n            children: database.displayDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", database.place, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Where: \", database.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Added by: \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: database.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: e => {\n              deletePlace(database.id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, database.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Places, \"SDxEvmQbkH9GpkgdIylqcX8zuK8=\", false, function () {\n  return [useAuth];\n});\n\n_c = Places;\n\nvar _c;\n\n$RefreshReg$(_c, \"Places\");","map":{"version":3,"sources":["C:/Users/18083/Documents/GitHub/delaine-organizer-app/src/places.js"],"names":["useState","useEffect","getFirestore","collection","getDocs","deleteDoc","addDoc","doc","useAuth","theDate","Places","db","currentUser","colRef","location","setLocation","place","setPlace","dataBaseItems","setDatabaseItems","addPlace","e","preventDefault","date","Date","displayDate","author","email","fetchPlaces","then","snapshot","items","docs","map","data","id","console","log","sort","a","b","joinDate","deletePlace","itemToDelete","docToDelete","target","value","database"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  getDocs,\r\n  deleteDoc,\r\n  addDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { useAuth } from \"./firebase\";\r\nimport { theDate } from \"./Utilities/theDate\";\r\n\r\nexport default function Places() {\r\n  const db = getFirestore();\r\n\r\n  const currentUser = useAuth();\r\n\r\n  const colRef = collection(db, \"places\");\r\n\r\n  const [location, setLocation] = useState(\"\");\r\n  const [place, setPlace] = useState(\"\");\r\n  const [dataBaseItems, setDatabaseItems] = useState([]);\r\n\r\n  function addPlace(e) {\r\n    e.preventDefault();\r\n\r\n    addDoc(colRef, {\r\n      date: new Date(),\r\n      displayDate: theDate,\r\n      author: currentUser?.email,\r\n      place: place,\r\n      location: location,\r\n    });\r\n    setPlace(\"\");\r\n    setLocation(\"\");\r\n    fetchPlaces();\r\n  }\r\n\r\n  function fetchPlaces() {\r\n    getDocs(colRef).then((snapshot) => {\r\n      const items = snapshot.docs.map((doc) => ({\r\n        ...doc.data(),\r\n        id: doc.id,\r\n      }));\r\n      console.log(items);\r\n\r\n      setDatabaseItems(items);\r\n      dataBaseItems.sort((a, b) => (b.joinDate < a.joinDate ? 1 : -1));\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    fetchPlaces();\r\n  }, []);\r\n\r\n  function deletePlace(itemToDelete) {\r\n    console.log(\"To be Deleted \" + itemToDelete);\r\n    if (itemToDelete !== \"\") {\r\n      console.log(\"Deleting\");\r\n      const docToDelete = doc(db, \"places\", itemToDelete);\r\n      deleteDoc(docToDelete).then(() => {\r\n        console.log(\"It supposed to be deleted\");\r\n      });\r\n      fetchPlaces();\r\n    }\r\n  }\r\n  return (\r\n    <div >\r\n      <br />\r\n      <br />\r\n\r\n      <form className=\"post-component\">\r\n        <label>Place:</label>\r\n        <input\r\n          rows=\"10\"\r\n          cols=\"70\"\r\n          value={place}\r\n          onChange={(e) => setPlace(e.target.value)}\r\n          type=\"text\"\r\n          name=\"place\"\r\n          required\r\n        />\r\n\r\n        <br />\r\n        <label>Where:</label>\r\n        <input\r\n          rows=\"4\"\r\n          cols=\"50\"\r\n          value={location}\r\n          onChange={(e) => setLocation(e.target.value)}\r\n          type=\"text\"\r\n          name=\"place\"\r\n          required\r\n        />\r\n        <br />\r\n        <br />\r\n        <button onClick={addPlace}> Add Place</button>\r\n      </form>\r\n\r\n      <div>\r\n        {\" \"}\r\n        <h1>Place List</h1>\r\n        <div className=\"item-grid\">\r\n          {dataBaseItems.map((database, id) => (\r\n            <div className=\"insertedItem\" key={database.id}>\r\n              <p className=\"date\">{database.displayDate}</p>\r\n              <p> {database.place} </p>\r\n              <p>Where: {database.location}</p>\r\n              <p>\r\n                Added by: <i>{database.author}</i>\r\n              </p>\r\n              <button\r\n                className=\"delete\"\r\n                onClick={(e) => {\r\n                  deletePlace(database.id);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
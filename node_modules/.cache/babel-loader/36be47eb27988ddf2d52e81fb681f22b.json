{"ast":null,"code":"var _jsxFileName = \"/Users/delaine/Documents/GitHub/Untitled/src/LoggedIn.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { getFirestore, collection, getDocs, addDoc } from \"firebase/firestore\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoggedIn() {\n  _s();\n\n  const db = getFirestore();\n  const loginReducer = useSelector(state => state.loginReducer);\n  const {\n    loginStatus\n  } = loginReducer;\n  const currentUser = useAuth();\n  const colRef = collection(db, \"posts\");\n  const [author, setAuthor] = useState(\"\");\n  const [post, setPost] = useState(\"\");\n\n  function addPost(e) {\n    e.preventDefault();\n    addDoc(colRef, {\n      author: author,\n      post: post\n    });\n  }\n\n  function deletePost(e) {\n    e.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Currently logged in as: \", currentUser === null || currentUser === void 0 ? void 0 : currentUser.email, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"author\",\n        children: \"Author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: author,\n        onChange: e => setAuthor(e.target.value),\n        type: \"text\",\n        name: \"author\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"post\",\n        children: \"Post:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: post,\n        onChange: e => setPost(e.target.value),\n        type: \"text\",\n        name: \"post\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPost,\n        children: \" Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"delete\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"id\",\n        children: \"Document id:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"id\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deletePost,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoggedIn, \"tvM2aBYDtkoSrEKleZob8Cvt150=\", true, function () {\n  return [useSelector];\n});\n\n_c = LoggedIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggedIn\");","map":{"version":3,"sources":["/Users/delaine/Documents/GitHub/Untitled/src/LoggedIn.js"],"names":["useState","getFirestore","collection","getDocs","addDoc","useSelector","LoggedIn","db","loginReducer","state","loginStatus","currentUser","useAuth","colRef","author","setAuthor","post","setPost","addPost","e","preventDefault","deletePost","email","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,OAAnC,EAA4CC,MAA5C,QAA0D,oBAA1D;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,EAAE,GAAGN,YAAY,EAAvB;AAEA,QAAMO,YAAY,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACD,YAAlB,CAAhC;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAkBF,YAAxB;AACA,QAAMG,WAAW,GAAGC,OAAO,EAA3B;AAEA,QAAMC,MAAM,GAAGX,UAAU,CAACK,EAAD,EAAK,OAAL,CAAzB;AAEA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASkB,OAAT,CAAiBC,CAAjB,EAAoB;AAClBA,IAAAA,CAAC,CAACC,cAAF;AACAhB,IAAAA,MAAM,CAACS,MAAD,EAAS;AACbC,MAAAA,MAAM,EAAEA,MADK;AAEbE,MAAAA,IAAI,EAAEA;AAFO,KAAT,CAAN;AAID;;AAED,WAASK,UAAT,CAAoBF,CAApB,EAAuB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACD;;AACD,sBACE;AAAA,4BACE;AAAA,6CAA8BT,WAA9B,aAA8BA,WAA9B,uBAA8BA,WAAW,CAAEW,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,KAAK,EAAER,MADT;AAEE,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,SAAS,CAACI,CAAC,CAACI,MAAF,CAASC,KAAV,CAF5B;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AACE,QAAA,KAAK,EAAER,IADT;AAEE,QAAA,QAAQ,EAAGG,CAAD,IAAOF,OAAO,CAACE,CAAC,CAACI,MAAF,CAASC,KAAV,CAF1B;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,cAVF,eAkBE;AAAQ,QAAA,OAAO,EAAEN,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAuBE;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,IAAxB;AAA6B,QAAA,QAAQ;AAArC;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE;AAAQ,QAAA,OAAO,EAAEG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GAvDuBf,Q;UAGDD,W;;;KAHCC,Q","sourcesContent":["import { useState } from \"react\";\nimport { getFirestore, collection, getDocs, addDoc } from \"firebase/firestore\";\nimport { useSelector } from \"react-redux\";\n\nexport default function LoggedIn() {\n  const db = getFirestore();\n\n  const loginReducer = useSelector((state) => state.loginReducer);\n  const { loginStatus } = loginReducer;\n  const currentUser = useAuth();\n\n  const colRef = collection(db, \"posts\");\n\n  const [author, setAuthor] = useState(\"\");\n  const [post, setPost] = useState(\"\");\n\n  function addPost(e) {\n    e.preventDefault();\n    addDoc(colRef, {\n      author: author,\n      post: post,\n    });\n  }\n\n  function deletePost(e) {\n    e.preventDefault();\n  }\n  return (\n    <div>\n      <div>Currently logged in as: {currentUser?.email} </div>\n\n      <form className=\"add\">\n        <label htmlFor=\"author\">Author:</label>\n        <input\n          value={author}\n          onChange={(e) => setAuthor(e.target.value)}\n          type=\"text\"\n          name=\"author\"\n          required\n        />\n        <label htmlFor=\"post\">Post:</label>\n        <input\n          value={post}\n          onChange={(e) => setPost(e.target.value)}\n          type=\"text\"\n          name=\"post\"\n          required\n        />\n\n        <button onClick={addPost}> Post</button>\n      </form>\n      <form className=\"delete\">\n        <label htmlFor=\"id\">Document id:</label>\n        <input type=\"text\" name=\"id\" required />\n\n        <button onClick={deletePost}>Delete</button>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
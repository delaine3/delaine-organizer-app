{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getFirestore, collection, getDocs } from \"firebase/firestore\"; // Import the functions you need from the SDKs you need\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, signOut } from \"firebase/auth\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAfzuHCk1wAQDxGugNkKgClHh-Ed1NlRo4\",\n  authDomain: \"organizer-59d66.firebaseapp.com\",\n  projectId: \"organizer-59d66\",\n  storageBucket: \"organizer-59d66.appspot.com\",\n  messagingSenderId: \"269531459889\",\n  appId: \"1:269531459889:web:369d5d4f22cd69e6aa0010\"\n}; // Initialize Firebase\n\ninitializeApp(firebaseConfig);\nconst db = getFirestore();\nconst colRef = collection(db, \"posts\"); //get collection datat\n\ngetDocs(colRef).then(snapshot => {\n  let posts = [];\n  snapshot.docs.forEach(doc => {\n    posts.push({ ...doc.data(),\n      id: doc.id\n    });\n  });\n  console.log(posts);\n});\nconst auth = getAuth();\nexport function signup(email, password) {\n  return createUserWithEmailAndPassword(auth, email, password);\n}\nexport function login(email, password) {\n  return signInWithEmailAndPassword(auth, email, password);\n}\nexport function logout() {\n  return signOut(auth);\n}\nexport function useAuth() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState();\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, user => setCurrentUser(user));\n    return unsub;\n  }, []);\n  return currentUser;\n}\n\n_s(useAuth, \"weNTBXcC62DPmZO+PUtwIm8P/FM=\");","map":{"version":3,"sources":["/Users/delaine/Documents/GitHub/FINALS/delaine-organizer-app/src/firebase.js"],"names":["useEffect","useState","getFirestore","collection","getDocs","initializeApp","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","signOut","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","colRef","then","snapshot","posts","docs","forEach","doc","push","data","id","console","log","auth","signup","email","password","login","logout","useAuth","currentUser","setCurrentUser","unsub","user"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,OAAnC,QAAkD,oBAAlD,C,CACA;;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SACEC,OADF,EAEEC,8BAFF,EAGEC,0BAHF,EAIEC,kBAJF,EAKEC,OALF,QAMO,eANP;AAQA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,iCAFS;AAGrBC,EAAAA,SAAS,EAAE,iBAHU;AAIrBC,EAAAA,aAAa,EAAE,6BAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE;AANc,CAAvB,C,CAQA;;AACAZ,aAAa,CAACM,cAAD,CAAb;AAEA,MAAMO,EAAE,GAAGhB,YAAY,EAAvB;AACA,MAAMiB,MAAM,GAAGhB,UAAU,CAACe,EAAD,EAAK,OAAL,CAAzB,C,CAEA;;AACAd,OAAO,CAACe,MAAD,CAAP,CAAgBC,IAAhB,CAAsBC,QAAD,IAAc;AACjC,MAAIC,KAAK,GAAG,EAAZ;AACAD,EAAAA,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAuBC,GAAD,IAAS;AAC7BH,IAAAA,KAAK,CAACI,IAAN,CAAW,EAAE,GAAGD,GAAG,CAACE,IAAJ,EAAL;AAAiBC,MAAAA,EAAE,EAAEH,GAAG,CAACG;AAAzB,KAAX;AACD,GAFD;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACD,CAPD;AASA,MAAMS,IAAI,GAAGzB,OAAO,EAApB;AAEA,OAAO,SAAS0B,MAAT,CAAgBC,KAAhB,EAAuBC,QAAvB,EAAiC;AACtC,SAAO3B,8BAA8B,CAACwB,IAAD,EAAOE,KAAP,EAAcC,QAAd,CAArC;AACD;AAED,OAAO,SAASC,KAAT,CAAeF,KAAf,EAAsBC,QAAtB,EAAgC;AACrC,SAAO1B,0BAA0B,CAACuB,IAAD,EAAOE,KAAP,EAAcC,QAAd,CAAjC;AACD;AAED,OAAO,SAASE,MAAT,GAAkB;AACvB,SAAO1B,OAAO,CAACqB,IAAD,CAAd;AACD;AAED,OAAO,SAASM,OAAT,GAAmB;AAAA;;AACxB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCtC,QAAQ,EAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMwC,KAAK,GAAG/B,kBAAkB,CAACsB,IAAD,EAAQU,IAAD,IAAUF,cAAc,CAACE,IAAD,CAA/B,CAAhC;AACA,WAAOD,KAAP;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SAAOF,WAAP;AACD;;GATeD,O","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { getFirestore, collection, getDocs } from \"firebase/firestore\";\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  signOut,\r\n} from \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAfzuHCk1wAQDxGugNkKgClHh-Ed1NlRo4\",\r\n  authDomain: \"organizer-59d66.firebaseapp.com\",\r\n  projectId: \"organizer-59d66\",\r\n  storageBucket: \"organizer-59d66.appspot.com\",\r\n  messagingSenderId: \"269531459889\",\r\n  appId: \"1:269531459889:web:369d5d4f22cd69e6aa0010\",\r\n};\r\n// Initialize Firebase\r\ninitializeApp(firebaseConfig);\r\n\r\nconst db = getFirestore();\r\nconst colRef = collection(db, \"posts\");\r\n\r\n//get collection datat\r\ngetDocs(colRef).then((snapshot) => {\r\n  let posts = [];\r\n  snapshot.docs.forEach((doc) => {\r\n    posts.push({ ...doc.data(), id: doc.id });\r\n  });\r\n\r\n  console.log(posts);\r\n});\r\n\r\nconst auth = getAuth();\r\n\r\nexport function signup(email, password) {\r\n  return createUserWithEmailAndPassword(auth, email, password);\r\n}\r\n\r\nexport function login(email, password) {\r\n  return signInWithEmailAndPassword(auth, email, password);\r\n}\r\n\r\nexport function logout() {\r\n  return signOut(auth);\r\n}\r\n\r\nexport function useAuth() {\r\n  const [currentUser, setCurrentUser] = useState();\r\n\r\n  useEffect(() => {\r\n    const unsub = onAuthStateChanged(auth, (user) => setCurrentUser(user));\r\n    return unsub;\r\n  }, []);\r\n\r\n  return currentUser;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/delaine/Documents/GitHub/Untitled/src/CurrentSubScriptions.js\",\n    _s = $RefreshSig$();\n\nimport { createElement, useState, useEffect } from \"react\";\nimport { updateDoc, getFirestore, collection, getDocs, deleteDoc, addDoc, doc } from \"firebase/firestore\";\nimport { useSelector } from \"react-redux\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CurrentSubScriptions() {\n  _s();\n\n  const db = getFirestore();\n  const loginReducer = useSelector(state => state.loginReducer);\n  const {\n    loginStatus\n  } = loginReducer;\n  const currentUser = useAuth();\n  const colRef = collection(db, \"currentSubscriptions\");\n  const [activeStatus, setActiveStatus] = useState(false);\n  const [subscription, setSubscription] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n  const [itemToUpdate, setItemToUpdate] = useState(\"\");\n  const [updating, setUpdating] = useState(false);\n  const [editedEntry, setEditedEntry] = useState(\"\");\n\n  function addSubscription(e) {\n    e.preventDefault();\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser === null || currentUser === void 0 ? void 0 : currentUser.email,\n      subscription: subscription,\n      active: false\n    });\n    setSubscription(\"\");\n    fetchSubscriptions();\n  }\n\n  function fetchSubscriptions() {\n    getDocs(colRef).then(snapshot => {\n      const items = snapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      }));\n      console.log(items);\n      setDatabaseItems(items);\n    });\n  }\n\n  useEffect(() => {\n    fetchSubscriptions();\n  }, []);\n\n  function updateSubscription(e) {\n    console.log(\"To be UPDATED \" + itemToUpdate);\n\n    if (itemToUpdate != \"\") {\n      console.log(\"Updating\");\n      const docToUpdate = doc(db, \"currentSubscriptions\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        subscription: editedEntry\n      }).then(() => {\n        console.log(\"It supposed to be updated\");\n      });\n      setUpdating(false);\n      fetchSubscriptions();\n    }\n  }\n\n  function toggleActiveSubscription(e) {\n    setTimeout(function () {\n      const docToUpdate = doc(db, \"currentSubscriptions\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        active: activeStatus\n      });\n    }, 1000);\n    fetchSubscriptions();\n  }\n\n  function deleteSubscription(e) {\n    console.log(\"To be Deleted \" + itemToDelete);\n\n    if (itemToDelete != \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"currentSubscriptions\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchSubscriptions();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"subscriptionlist\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"10\",\n        cols: \"70\",\n        value: subscription,\n        onChange: e => setSubscription(e.target.value),\n        type: \"text\",\n        name: \"subscription\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addSubscription,\n        children: \" Subscription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Subscription List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: dataBaseItems.map((database, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"insertedItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"date\",\n            children: database.displayDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", database.subscription]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), \"Added by: \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: database.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 56\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", database.active]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"switch\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                setItemToUpdate(database.id);\n                setActiveStatus(!database.active);\n                toggleActiveSubscription();\n              },\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), updating ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Change subscription to:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editedEntry,\n              onChange: e => setEditedEntry(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                updateSubscription();\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              setItemToUpdate(database.id);\n              setUpdating(true);\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              setItemToDelete(database.id);\n              deleteSubscription();\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)]\n        }, database.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrentSubScriptions, \"3A9j+TmrQLjf9LvNKzrEAiywTeA=\", false, function () {\n  return [useSelector, useAuth];\n});\n\n_c = CurrentSubScriptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentSubScriptions\");","map":{"version":3,"sources":["/Users/delaine/Documents/GitHub/Untitled/src/CurrentSubScriptions.js"],"names":["createElement","useState","useEffect","updateDoc","getFirestore","collection","getDocs","deleteDoc","addDoc","doc","useSelector","useAuth","theDate","CurrentSubScriptions","db","loginReducer","state","loginStatus","currentUser","colRef","activeStatus","setActiveStatus","subscription","setSubscription","itemToDelete","setItemToDelete","dataBaseItems","setDatabaseItems","itemToUpdate","setItemToUpdate","updating","setUpdating","editedEntry","setEditedEntry","addSubscription","e","preventDefault","date","Date","displayDate","author","email","active","fetchSubscriptions","then","snapshot","items","docs","map","data","id","console","log","updateSubscription","docToUpdate","toggleActiveSubscription","setTimeout","deleteSubscription","docToDelete","target","value","database"],"mappings":"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","sourcesContent":["import { createElement, useState, useEffect } from \"react\";\nimport {\n  updateDoc,\n  getFirestore,\n  collection,\n  getDocs,\n  deleteDoc,\n  addDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { useSelector } from \"react-redux\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\n\nexport default function CurrentSubScriptions() {\n  const db = getFirestore();\n\n  const loginReducer = useSelector((state) => state.loginReducer);\n  const { loginStatus } = loginReducer;\n  const currentUser = useAuth();\n\n  const colRef = collection(db, \"currentSubscriptions\");\n\n  const [activeStatus, setActiveStatus] = useState(false);\n  const [subscription, setSubscription] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n  const [itemToUpdate, setItemToUpdate] = useState(\"\");\n  const [updating, setUpdating] = useState(false);\n  const [editedEntry, setEditedEntry] = useState(\"\");\n\n  function addSubscription(e) {\n    e.preventDefault();\n\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser?.email,\n      subscription: subscription,\n      active: false,\n    });\n    setSubscription(\"\");\n    fetchSubscriptions();\n  }\n\n  function fetchSubscriptions() {\n    getDocs(colRef).then((snapshot) => {\n      const items = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      console.log(items);\n      setDatabaseItems(items);\n    });\n  }\n  useEffect(() => {\n    fetchSubscriptions();\n  }, []);\n\n  function updateSubscription(e) {\n    console.log(\"To be UPDATED \" + itemToUpdate);\n    if (itemToUpdate != \"\") {\n      console.log(\"Updating\");\n      const docToUpdate = doc(db, \"currentSubscriptions\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        subscription: editedEntry,\n      }).then(() => {\n        console.log(\"It supposed to be updated\");\n      });\n      setUpdating(false);\n\n      fetchSubscriptions();\n    }\n  }\n  function toggleActiveSubscription(e) {\n    setTimeout(function () {\n      const docToUpdate = doc(db, \"currentSubscriptions\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        active: activeStatus,\n      });\n    }, 1000);\n    fetchSubscriptions();\n  }\n\n  function deleteSubscription(e) {\n    console.log(\"To be Deleted \" + itemToDelete);\n    if (itemToDelete != \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"currentSubscriptions\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchSubscriptions();\n    }\n  }\n  return (\n    <div id=\"subscriptionlist\">\n      <br />\n      <br />\n\n      <form className=\"add\">\n        <textarea\n          rows=\"10\"\n          cols=\"70\"\n          value={subscription}\n          onChange={(e) => setSubscription(e.target.value)}\n          type=\"text\"\n          name=\"subscription\"\n          required\n        />\n        <br />\n        <button onClick={addSubscription}> Subscription</button>\n      </form>\n\n      <div>\n        {\" \"}\n        <h2>Subscription List</h2>\n        <div>\n          {dataBaseItems.map((database, id) => (\n            <div className=\"insertedItem\" key={database.id}>\n              <p className=\"date\">{database.displayDate}</p>\n              <p> {database.subscription}</p>Added by: <i>{database.author}</i>\n              <div> {database.active}</div>\n              <label className=\"switch\">\n                <button\n                  onClick={(e) => {\n                    setItemToUpdate(database.id);\n                    setActiveStatus(!database.active);\n                    toggleActiveSubscription();\n                  }}\n                >\n                  Active\n                </button>\n              </label>\n              {updating ? (\n                <div>\n                  {\" \"}\n                  <p>Change subscription to:</p>\n                  <textarea\n                    value={editedEntry}\n                    onChange={(e) => setEditedEntry(e.target.value)}\n                  />{\" \"}\n                  <button\n                    onClick={(e) => {\n                      updateSubscription();\n                    }}\n                  >\n                    Save\n                  </button>\n                </div>\n              ) : (\n                <div></div>\n              )}\n              <br />\n              <button\n                onClick={(e) => {\n                  setItemToUpdate(database.id);\n                  setUpdating(true);\n                }}\n              >\n                Edit\n              </button>\n              <button\n                onClick={(e) => {\n                  setItemToDelete(database.id);\n                  deleteSubscription();\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
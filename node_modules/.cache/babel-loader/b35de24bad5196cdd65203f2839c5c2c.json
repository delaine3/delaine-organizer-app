{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\"; // Import the functions you need from the SDKs you need\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, signOut } from \"firebase/auth\"; // Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDSozUWZ06ZsNb67co6TyHKzWUXEHHCZek\",\n  authDomain: \"logicism-auth-4fd71.firebaseapp.com\",\n  projectId: \"logicism-auth-4fd71\",\n  storageBucket: \"logicism-auth-4fd71.appspot.com\",\n  messagingSenderId: \"769565354450\",\n  appId: \"1:769565354450:web:f478025bb20c9260b7800b\"\n}; // Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth();\nexport function signup(email, password) {\n  return createUserWithEmailAndPassword(auth, email, password);\n}\nexport function login(email, password) {\n  return signInWithEmailAndPassword(auth, email, password);\n}\nexport function logout() {\n  return signOut(auth);\n} // Custom Hook\n\nexport function useAuth() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState();\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, user => setCurrentUser(user));\n    return unsub;\n  }, []);\n  return currentUser;\n}\n\n_s(useAuth, \"JvEwyYHOqow2S+nE9g1bJVQib+s=\");","map":{"version":3,"sources":["/Users/delaine/Documents/GitHub/Untitled/src/firebase.js"],"names":["useEffect","useState","initializeApp","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","signOut","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","signup","email","password","login","logout","useAuth","currentUser","setCurrentUser","unsub","user"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,OAAT,EAAkBC,8BAAlB,EAAkDC,0BAAlD,EAA8EC,kBAA9E,EAAkGC,OAAlG,QAAiH,eAAjH,C,CAEA;;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,qCAFS;AAGrBC,EAAAA,SAAS,EAAE,qBAHU;AAIrBC,EAAAA,aAAa,EAAE,iCAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE;AANc,CAAvB,C,CASA;;AACA,MAAMC,GAAG,GAAGb,aAAa,CAACM,cAAD,CAAzB;AACA,MAAMQ,IAAI,GAAGb,OAAO,EAApB;AAEA,OAAO,SAASc,MAAT,CAAgBC,KAAhB,EAAuBC,QAAvB,EAAiC;AACtC,SAAOf,8BAA8B,CAACY,IAAD,EAAOE,KAAP,EAAcC,QAAd,CAArC;AACD;AAED,OAAO,SAASC,KAAT,CAAeF,KAAf,EAAsBC,QAAtB,EAAgC;AACrC,SAAOd,0BAA0B,CAACW,IAAD,EAAOE,KAAP,EAAcC,QAAd,CAAjC;AACD;AAED,OAAO,SAASE,MAAT,GAAkB;AACvB,SAAOd,OAAO,CAACS,IAAD,CAAd;AACD,C,CAED;;AACA,OAAO,SAASM,OAAT,GAAmB;AAAA;;AACxB,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCvB,QAAQ,EAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,KAAK,GAAGnB,kBAAkB,CAACU,IAAD,EAAOU,IAAI,IAAIF,cAAc,CAACE,IAAD,CAA7B,CAAhC;AACA,WAAOD,KAAP;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SAAOF,WAAP;AACD;;GATeD,O","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, signOut } from \"firebase/auth\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDSozUWZ06ZsNb67co6TyHKzWUXEHHCZek\",\r\n  authDomain: \"logicism-auth-4fd71.firebaseapp.com\",\r\n  projectId: \"logicism-auth-4fd71\",\r\n  storageBucket: \"logicism-auth-4fd71.appspot.com\",\r\n  messagingSenderId: \"769565354450\",\r\n  appId: \"1:769565354450:web:f478025bb20c9260b7800b\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth();\r\n\r\nexport function signup(email, password) {\r\n  return createUserWithEmailAndPassword(auth, email, password);\r\n}\r\n\r\nexport function login(email, password) {\r\n  return signInWithEmailAndPassword(auth, email, password);\r\n}\r\n\r\nexport function logout() {\r\n  return signOut(auth);\r\n}\r\n\r\n// Custom Hook\r\nexport function useAuth() {\r\n  const [ currentUser, setCurrentUser ] = useState();\r\n\r\n  useEffect(() => {\r\n    const unsub = onAuthStateChanged(auth, user => setCurrentUser(user));\r\n    return unsub;\r\n  }, [])\r\n\r\n  return currentUser;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
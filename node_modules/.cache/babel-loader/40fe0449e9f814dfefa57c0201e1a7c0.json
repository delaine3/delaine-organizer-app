{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\18083\\\\Documents\\\\GitHub\\\\delaine-organizer-app\\\\src\\\\ShowsToWatch.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { updateDoc, getFirestore, collection, getDocs, deleteDoc, addDoc, doc } from \"firebase/firestore\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowsToWatch() {\n  _s();\n\n  const db = getFirestore();\n  const currentUser = useAuth();\n  const colRef = collection(db, \"currentShows\");\n  const [currentSeason, setcurrentSeason] = useState(\"\");\n  const [streaming_service, setStreaming_service] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n  const [updating, setUpdating] = useState(false);\n  const [updatingSeason, setUpdatingSeason] = useState(false);\n  const [updatingStreamingService, setUpdatingStreamingService] = useState(false);\n  const [editedSeason, setEditedSeason] = useState(\"\");\n  const [editedEntry, setEditedEntry] = useState(\"\");\n  const [editedStreamingService, setEditedStreamingService] = useState(\"\");\n  const [form, setForm] = useState({\n    show: \"\"\n  });\n\n  function addItem(e) {\n    e.preventDefault();\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser === null || currentUser === void 0 ? void 0 : currentUser.email,\n      show: form.show,\n      active: false,\n      completed: false,\n      currentSeason: currentSeason,\n      streaming_service: streaming_service\n    });\n    setcurrentSeason(\"\");\n    setForm({ ...form,\n      show: \"\"\n    });\n    fetchItems();\n  }\n\n  function fetchItems() {\n    getDocs(colRef).then(snapshot => {\n      const items = snapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      }));\n      console.log(items);\n      setDatabaseItems(items);\n    });\n  }\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  function updateCurrentSeason(itemToUpdate) {\n    console.log(\"To be UPDATED \" + itemToUpdate);\n\n    if (itemToUpdate !== \"\") {\n      console.log(\"Updating\");\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        currentSeason: editedSeason\n      }).then(() => {\n        console.log(\"It supposed to be updated\");\n      });\n      setUpdatingSeason(false);\n      setEditedSeason(\"\");\n      fetchItems();\n    }\n  }\n\n  function updateStreamingService(itemToUpdate) {\n    console.log(\"To be UPDATED \" + itemToUpdate);\n\n    if (itemToUpdate !== \"\") {\n      console.log(\"Updating\");\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        streaming_service: editedStreamingService\n      }).then(() => {\n        console.log(\"It supposed to be updated\");\n      });\n      setUpdatingStreamingService(false);\n      setEditedStreamingService(\"\");\n      fetchItems();\n    }\n  }\n\n  function updateShow(itemToUpdate) {\n    console.log(\"To be UPDATED \" + itemToUpdate);\n\n    if (itemToUpdate !== \"\") {\n      console.log(\"Updating\");\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\n      if (editedEntry != \"\") updateDoc(docToUpdate, {\n        show: editedEntry\n      }).then(() => {\n        console.log(\"It supposed to be updated\");\n      });\n      setEditedEntry(\"\");\n      setUpdating(false);\n      fetchItems();\n    }\n  }\n\n  function toggleCompletetionStatus(completionStatus, itemToUpdate) {\n    if (itemToUpdate !== \"\") {\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        completed: completionStatus\n      });\n    }\n\n    fetchItems();\n  }\n\n  function toggleActive(activeStatus, itemToUpdate) {\n    if (itemToUpdate !== \"\") {\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        active: activeStatus\n      });\n    }\n\n    fetchItems();\n  }\n\n  function deleteItem(itemToDelete) {\n    console.log(\"To be Deleted \" + itemToDelete);\n\n    if (itemToDelete !== \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"currentShows\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchItems();\n    }\n  }\n\n  const handleChange = e => {\n    const target = e.target;\n    var {\n      name,\n      value\n    } = e.target;\n\n    if (name == \"expiry_date\" || name == \"foodType\" || name == \"quantityUnit\") {\n      value = target.value.toString();\n    } else {\n      value = target.name === \"should_refrigerate\" ? target.checked : target.value;\n    }\n\n    setForm({ ...form,\n      [name]: value\n    });\n    console.log(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"post-component\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Show Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        rows: \"10\",\n        cols: \"70\",\n        value: form.show,\n        onChange: handleChange,\n        type: \"text\",\n        name: \"show\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Current Season\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: currentSeason,\n        onChange: e => setcurrentSeason(e.target.value),\n        type: \"text\",\n        name: \"currentSeason\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Streaming Service\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: streaming_service,\n        onChange: e => setStreaming_service(e.target.value),\n        type: \"text\",\n        name: \"currentSeason\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-post\",\n        onClick: addItem,\n        children: \"Add show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Show List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" item-grid\",\n        children: dataBaseItems.map((database, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: updating || updatingSeason || updatingStreamingService ? \"insertedItem-tall\" : \"insertedItem-short\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Show:  \", database.show, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit\",\n              onClick: e => {\n                setUpdating(true);\n                setUpdatingSeason(false);\n                setUpdatingStreamingService(false);\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 11\n            }, this), updating ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Change show to:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: editedEntry,\n                onChange: e => setEditedEntry(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  updateShow(database.id);\n                },\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cancel\",\n                onClick: e => {\n                  setUpdating(false);\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Current Season: \", database.currentSeason, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit\",\n              onClick: e => {\n                setUpdatingSesason(true);\n                setUpdating(false);\n                setUpdatingStreamingService(false);\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Streaming Service: \", database.streaming_service, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit\",\n              onClick: e => {\n                setUpdatingStreamingService(true);\n                setUpdating(false);\n                setcurrentSeason(false);\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 13\n            }, this), updatingStreamingService ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Change streaming service to:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: editedStreamingService,\n                onChange: e => setEditedStreamingService(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  updateStreamingService(database.id);\n                },\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cancel\",\n                onClick: e => {\n                  setUpdatingStreamingService(false);\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this), updatingSeason ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Change season to:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: editedSeason,\n                onChange: e => setEditedSeason(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  updateCurrentSeason(database.id);\n                },\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cancel\",\n                onClick: e => {\n                  setUpdatingSeason(false);\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"active-buttons-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                toggleActive(!database.active, database.id);\n              },\n              children: database.active ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"activeStyleProgress\",\n                children: \"In Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"inactiveStyleProgress\",\n                children: \"Not In Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                toggleCompletetionStatus(!database.completed, database.id);\n              },\n              children: database.completed ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"activeStyle\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"inactiveStyle\",\n                children: \"Not Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: e => {\n              deleteItem(database.id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Added by: \", database.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this)]\n        }, database.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShowsToWatch, \"ES2zAg/ps3F31o+1dHdTtciKFwA=\", false, function () {\n  return [useAuth];\n});\n\n_c = ShowsToWatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowsToWatch\");","map":{"version":3,"sources":["C:/Users/18083/Documents/GitHub/delaine-organizer-app/src/ShowsToWatch.js"],"names":["useState","useEffect","updateDoc","getFirestore","collection","getDocs","deleteDoc","addDoc","doc","useAuth","theDate","ShowsToWatch","db","currentUser","colRef","currentSeason","setcurrentSeason","streaming_service","setStreaming_service","dataBaseItems","setDatabaseItems","updating","setUpdating","updatingSeason","setUpdatingSeason","updatingStreamingService","setUpdatingStreamingService","editedSeason","setEditedSeason","editedEntry","setEditedEntry","editedStreamingService","setEditedStreamingService","form","setForm","show","addItem","e","preventDefault","date","Date","displayDate","author","email","active","completed","fetchItems","then","snapshot","items","docs","map","data","id","console","log","updateCurrentSeason","itemToUpdate","docToUpdate","updateStreamingService","updateShow","toggleCompletetionStatus","completionStatus","toggleActive","activeStatus","deleteItem","itemToDelete","docToDelete","handleChange","target","name","value","toString","checked","database","setUpdatingSesason"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {\r\n  updateDoc,\r\n  getFirestore,\r\n  collection,\r\n  getDocs,\r\n  deleteDoc,\r\n  addDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { useAuth } from \"./firebase\";\r\nimport { theDate } from \"./Utilities/theDate\";\r\n\r\nexport default function ShowsToWatch() {\r\n  const db = getFirestore();\r\n\r\n  const currentUser = useAuth();\r\n\r\n  const colRef = collection(db, \"currentShows\");\r\n\r\n  const [currentSeason, setcurrentSeason] = useState(\"\");\r\n  const [streaming_service, setStreaming_service] = useState(\"\");\r\n\r\n  const [dataBaseItems, setDatabaseItems] = useState([]);\r\n  const [updating, setUpdating] = useState(false);\r\n  const [updatingSeason, setUpdatingSeason] = useState(false)\r\n  const [updatingStreamingService, setUpdatingStreamingService] =useState(false)\r\n  const [editedSeason,setEditedSeason] = useState(\"\")\r\n  const [editedEntry, setEditedEntry] = useState(\"\");\r\n  const [editedStreamingService, setEditedStreamingService] = useState(\"\")\r\n\r\n  const [form, setForm]= useState({\r\n    show: \"\",\r\n\r\n  });\r\n\r\n  function addItem(e) {\r\n    e.preventDefault();\r\n\r\n    addDoc(colRef, {\r\n      date: new Date(),\r\n      displayDate: theDate,\r\n      author: currentUser?.email,\r\n      show: form.show,\r\n      active: false,\r\n      completed: false,\r\n      currentSeason: currentSeason,\r\n      streaming_service:streaming_service\r\n    });\r\n    setcurrentSeason(\"\")\r\n\r\n    setForm({\r\n      ...form,\r\n      show: \"\",\r\n    });\r\n\r\n    fetchItems();\r\n  }\r\n\r\n  function fetchItems() {\r\n    getDocs(colRef).then((snapshot) => {\r\n      const items = snapshot.docs.map((doc) => ({\r\n        ...doc.data(),\r\n        id: doc.id,\r\n      }));\r\n      console.log(items);\r\n      setDatabaseItems(items);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    fetchItems();\r\n  }, []);\r\n\r\n  function updateCurrentSeason(itemToUpdate) {\r\n    console.log(\"To be UPDATED \" + itemToUpdate);\r\n    if (itemToUpdate !== \"\") {\r\n      console.log(\"Updating\");\r\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\r\n      updateDoc(docToUpdate, {\r\n        currentSeason: editedSeason,\r\n      }).then(() => {\r\n        console.log(\"It supposed to be updated\");\r\n      });\r\n      setUpdatingSeason(false);\r\n      setEditedSeason(\"\")\r\n      fetchItems();\r\n    }\r\n  }\r\n  function updateStreamingService(itemToUpdate) {\r\n    console.log(\"To be UPDATED \" + itemToUpdate);\r\n    if (itemToUpdate !== \"\") {\r\n      console.log(\"Updating\");\r\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\r\n      updateDoc(docToUpdate, {\r\n        streaming_service: editedStreamingService,\r\n      }).then(() => {\r\n        console.log(\"It supposed to be updated\");\r\n      });\r\n      setUpdatingStreamingService(false);\r\n      setEditedStreamingService(\"\")\r\n      fetchItems();\r\n    }\r\n  }\r\n  function updateShow(itemToUpdate) {\r\n    console.log(\"To be UPDATED \" + itemToUpdate);\r\n    if (itemToUpdate !== \"\") {\r\n      console.log(\"Updating\");\r\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\r\n      if(editedEntry != \"\")\r\n      updateDoc(docToUpdate, {\r\n        show: editedEntry,\r\n      }).then(() => {\r\n        console.log(\"It supposed to be updated\");\r\n      });\r\n      setEditedEntry(\"\")\r\n      setUpdating(false);\r\n\r\n      fetchItems();\r\n    }\r\n  }\r\n  function toggleCompletetionStatus(completionStatus,itemToUpdate) {\r\n    if (itemToUpdate !== \"\") {\r\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\r\n      updateDoc(docToUpdate, {\r\n        completed: completionStatus,\r\n      });\r\n    }\r\n    fetchItems();\r\n  }\r\n  function toggleActive(activeStatus,itemToUpdate) {\r\n    if (itemToUpdate !== \"\") {\r\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\r\n      updateDoc(docToUpdate, {\r\n        active: activeStatus,\r\n      });\r\n    }\r\n    fetchItems();\r\n  }\r\n\r\n  function deleteItem(itemToDelete) {\r\n    console.log(\"To be Deleted \" + itemToDelete);\r\n    if (itemToDelete !== \"\") {\r\n      console.log(\"Deleting\");\r\n      const docToDelete = doc(db, \"currentShows\", itemToDelete);\r\n      deleteDoc(docToDelete).then(() => {\r\n        console.log(\"It supposed to be deleted\");\r\n      });\r\n      fetchItems();\r\n    }\r\n  }\r\n  const handleChange = (e) => {\r\n    const target = e.target;\r\n    var { name, value } = e.target;\r\n\r\n    if (name == \"expiry_date\" || name == \"foodType\" || name == \"quantityUnit\") {\r\n      value = target.value.toString();\r\n    } else {\r\n      value = target.name === \"should_refrigerate\" ? target.checked : target.value;\r\n    }\r\n\r\n    setForm({\r\n      ...form,\r\n      [name]: value,\r\n    });\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"category\" >\r\n      <br />\r\n      <br />\r\n\r\n      <form className=\"post-component\">\r\n        <label>Show Name</label>\r\n        <input\r\n          rows=\"10\"\r\n          cols=\"70\"\r\n          value={form.show}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"show\"\r\n          required\r\n        />\r\n        <br />\r\n        <label>Current Season</label>\r\n        <input \r\n        value={currentSeason}\r\n        onChange={(e)=>setcurrentSeason(e.target.value)}\r\n        type=\"text\"\r\n        name=\"currentSeason\"/>\r\n\r\n        <label>Streaming Service</label>\r\n        <input \r\n        value={streaming_service}\r\n        onChange={(e)=>setStreaming_service(e.target.value)}\r\n        type=\"text\"\r\n        name=\"currentSeason\"/>\r\n\r\n        <button className=\"add-post\" onClick={addItem}>Add show</button>\r\n      </form>\r\n\r\n      <div>\r\n        {\" \"}\r\n        <h2>Show List</h2>\r\n      \r\n        <div className=\" item-grid\">\r\n          {dataBaseItems.map((database, id) => (\r\n            <div className={updating || updatingSeason || updatingStreamingService? \"insertedItem-tall\" : \"insertedItem-short\"} key={database.id}>\r\n          <p> Show:  {database.show}     \r\n          <button\r\n                className=\"edit\"\r\n                onClick={(e) => {\r\n                  setUpdating(true);\r\n                  setUpdatingSeason(false)\r\n                  setUpdatingStreamingService(false)\r\n                }}\r\n              >\r\n                Edit\r\n              </button> \r\n                  \r\n           {updating ? (\r\n                <div>\r\n                  {\" \"}\r\n                  <p>Change show to:</p>\r\n                  <input\r\n                    value={editedEntry}\r\n                    onChange={(e) => setEditedEntry(e.target.value)}\r\n                  />{\" \"}\r\n                  <button\r\n                    onClick={(e) => {\r\n                      updateShow(database.id);\r\n                    }}\r\n                  >\r\n                    Save\r\n                  </button>\r\n                  <button  \r\n              className=\"cancel\"  \r\n              onClick={(e) => {\r\n                  setUpdating(false);\r\n                }}>Cancel</button> \r\n                </div>\r\n              ) : (\r\n                <div></div>\r\n              )}</p>  \r\n               <p> Current Season: {database.currentSeason }\r\n            <button\r\n                className=\"edit\"\r\n                onClick={(e) => {\r\n                  setUpdatingSesason(true);\r\n                  setUpdating(false)\r\n                  setUpdatingStreamingService(false)\r\n                }}\r\n              >\r\n                Edit\r\n              </button>       \r\n          \r\n            </p>    \r\n            <p> Streaming Service: {database.streaming_service }\r\n            <button\r\n                className=\"edit\"\r\n                onClick={(e) => {\r\n                  setUpdatingStreamingService(true);\r\n                  setUpdating(false)\r\n                  setcurrentSeason(false)\r\n                }}\r\n              >\r\n                Edit\r\n              </button> \r\n              {updatingStreamingService ? (\r\n                <div>\r\n                  {\" \"}\r\n                  <p>Change streaming service to:</p>\r\n                  <input\r\n                    value={editedStreamingService}\r\n                    onChange={(e) => setEditedStreamingService(e.target.value)}\r\n                  />{\" \"}\r\n                  <button\r\n                    onClick={(e) => {\r\n                      updateStreamingService(database.id);\r\n                    }}\r\n                  >\r\n                    Save\r\n                  </button>\r\n                  <button  \r\n              className=\"cancel\"  \r\n              onClick={(e) => {\r\n                  setUpdatingStreamingService(false)\r\n                }}>Cancel</button> \r\n                </div>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n           {updatingSeason ? (\r\n                <div>\r\n                  {\" \"}\r\n                  <p>Change season to:</p>\r\n                  <input\r\n                    value={editedSeason}\r\n                    onChange={(e) => setEditedSeason(e.target.value)}\r\n                  />{\" \"}\r\n                  <button\r\n                    onClick={(e) => {\r\n                      updateCurrentSeason(database.id);\r\n                    }}\r\n                  >\r\n                    Save\r\n                  </button>\r\n                  <button  \r\n              className=\"cancel\"  \r\n              onClick={(e) => {\r\n                  setUpdatingSeason(false)\r\n                  \r\n                }}>Cancel</button> \r\n                </div>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </p>  \r\n          \r\n          \r\n          \r\n          <div className=\"active-buttons-container\">\r\n              <div \r\n                onClick={() => {\r\n                  toggleActive(!database.active,database.id);\r\n                }}\r\n              >\r\n                {database.active ? (\r\n                  <button className=\"activeStyleProgress\">In Progress</button>\r\n                ) : (\r\n                  <button className=\"inactiveStyleProgress\">Not In Progress</button>\r\n                )}\r\n              </div>\r\n              <div\r\n                onClick={() => {\r\n                  toggleCompletetionStatus(!database.completed,database.id);\r\n                }}\r\n              >\r\n                {database.completed ? (\r\n                  <button className=\"activeStyle\">Completed</button>\r\n                ) : (\r\n                  <button className=\"inactiveStyle\">Not Completed</button>\r\n                )}\r\n              </div>\r\n              </div>\r\n    \r\n              <br />\r\n           \r\n              <button\r\n                className=\"delete\"\r\n                onClick={(e) => {\r\n                  deleteItem(database.id);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n              <p>Added by: {database.author}</p>\r\n\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
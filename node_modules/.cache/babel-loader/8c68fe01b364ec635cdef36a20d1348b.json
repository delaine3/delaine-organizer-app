{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\18083\\\\Documents\\\\GitHub\\\\delaine-organizer-app\\\\src\\\\ShowsToWatch.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { updateDoc, getFirestore, collection, getDocs, deleteDoc, addDoc, doc } from \"firebase/firestore\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowsToWatch() {\n  _s();\n\n  const db = getFirestore();\n  const currentUser = useAuth();\n  const colRef = collection(db, \"currentShows\");\n  const [show, setShow] = useState(\"\");\n  const [currentSeason, setcurrentSeason] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n  const [updating, setUpdating] = useState(false);\n  const [editedEntry, setEditedEntry] = useState(\"\");\n\n  function addItem(e) {\n    e.preventDefault();\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser === null || currentUser === void 0 ? void 0 : currentUser.email,\n      show: show,\n      active: false,\n      completed: false,\n      currentSeason: currentSeason\n    });\n    setcurrentSeason(\"\");\n    setShow(\"\");\n    fetchItems();\n  }\n\n  function fetchItems() {\n    getDocs(colRef).then(snapshot => {\n      const items = snapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      }));\n      console.log(items);\n      setDatabaseItems(items);\n    });\n  }\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  function updateItem(itemToUpdate) {\n    console.log(\"To be UPDATED \" + itemToUpdate);\n\n    if (itemToUpdate !== \"\") {\n      console.log(\"Updating\");\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        show: editedEntry\n      }).then(() => {\n        console.log(\"It supposed to be updated\");\n      });\n      setUpdating(false);\n      fetchItems();\n    }\n  }\n\n  function toggleCompletetionStatus(completionStatus, itemToUpdate) {\n    if (itemToUpdate !== \"\") {\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        completed: completionStatus\n      });\n    }\n\n    fetchItems();\n  }\n\n  function toggleActive(activeStatus, itemToUpdate) {\n    if (itemToUpdate !== \"\") {\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        active: activeStatus\n      });\n    }\n\n    fetchItems();\n  }\n\n  function deleteItem(itemToDelete) {\n    console.log(\"To be Deleted \" + itemToDelete);\n\n    if (itemToDelete !== \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"currentShows\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchItems();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"post-component\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Show Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        rows: \"10\",\n        cols: \"70\",\n        value: show,\n        onChange: e => setShow(e.target.value),\n        type: \"text\",\n        name: \"show\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Current Season\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: currentSeason,\n        onChange: e => setcurrentSeason(e.target.value),\n        type: \"text\",\n        name: \"currentSeason\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-post\",\n        onClick: addItem,\n        children: \"Add show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Show List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" item-grid\",\n        children: dataBaseItems.map((database, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: updating ? \"insertedItem-tall\" : \"insertedItem-short\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", database.show]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), \"Added by: \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: database.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"active-buttons-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                toggleActive(!database.active, database.id);\n              },\n              children: database.active ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"activeStyleProgress\",\n                children: \"In Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"inactiveStyleProgress\",\n                children: \"Not In Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                toggleCompletetionStatus(!database.completed, database.id);\n              },\n              children: database.completed ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"activeStyle\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"inactiveStyle\",\n                children: \"Not Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), updating ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Change show to:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: editedEntry,\n              onChange: e => setEditedEntry(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                updateItem(database.id);\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit\",\n            onClick: e => {\n              setUpdating(true);\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: e => {\n              deleteItem(database.id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, database.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShowsToWatch, \"tWn3ep9D1CYccLwxokPmRsi5By4=\", false, function () {\n  return [useAuth];\n});\n\n_c = ShowsToWatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowsToWatch\");","map":{"version":3,"sources":["C:/Users/18083/Documents/GitHub/delaine-organizer-app/src/ShowsToWatch.js"],"names":["useState","useEffect","updateDoc","getFirestore","collection","getDocs","deleteDoc","addDoc","doc","useAuth","theDate","ShowsToWatch","db","currentUser","colRef","show","setShow","currentSeason","setcurrentSeason","dataBaseItems","setDatabaseItems","updating","setUpdating","editedEntry","setEditedEntry","addItem","e","preventDefault","date","Date","displayDate","author","email","active","completed","fetchItems","then","snapshot","items","docs","map","data","id","console","log","updateItem","itemToUpdate","docToUpdate","toggleCompletetionStatus","completionStatus","toggleActive","activeStatus","deleteItem","itemToDelete","docToDelete","target","value","database"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {\r\n  updateDoc,\r\n  getFirestore,\r\n  collection,\r\n  getDocs,\r\n  deleteDoc,\r\n  addDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { useAuth } from \"./firebase\";\r\nimport { theDate } from \"./Utilities/theDate\";\r\n\r\nexport default function ShowsToWatch() {\r\n  const db = getFirestore();\r\n\r\n  const currentUser = useAuth();\r\n\r\n  const colRef = collection(db, \"currentShows\");\r\n\r\n  const [show, setShow] = useState(\"\");\r\n  const [currentSeason, setcurrentSeason] = useState(\"\");\r\n\r\n  const [dataBaseItems, setDatabaseItems] = useState([]);\r\n  const [updating, setUpdating] = useState(false);\r\n  const [editedEntry, setEditedEntry] = useState(\"\");\r\n\r\n  function addItem(e) {\r\n    e.preventDefault();\r\n\r\n    addDoc(colRef, {\r\n      date: new Date(),\r\n      displayDate: theDate,\r\n      author: currentUser?.email,\r\n      show: show,\r\n      active: false,\r\n      completed: false,\r\n      currentSeason: currentSeason\r\n    });\r\n    setcurrentSeason(\"\")\r\n    setShow(\"\");\r\n    fetchItems();\r\n  }\r\n\r\n  function fetchItems() {\r\n    getDocs(colRef).then((snapshot) => {\r\n      const items = snapshot.docs.map((doc) => ({\r\n        ...doc.data(),\r\n        id: doc.id,\r\n      }));\r\n      console.log(items);\r\n      setDatabaseItems(items);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    fetchItems();\r\n  }, []);\r\n\r\n  function updateItem(itemToUpdate) {\r\n    console.log(\"To be UPDATED \" + itemToUpdate);\r\n    if (itemToUpdate !== \"\") {\r\n      console.log(\"Updating\");\r\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\r\n      updateDoc(docToUpdate, {\r\n        show: editedEntry,\r\n      }).then(() => {\r\n        console.log(\"It supposed to be updated\");\r\n      });\r\n      setUpdating(false);\r\n\r\n      fetchItems();\r\n    }\r\n  }\r\n  function toggleCompletetionStatus(completionStatus,itemToUpdate) {\r\n    if (itemToUpdate !== \"\") {\r\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\r\n      updateDoc(docToUpdate, {\r\n        completed: completionStatus,\r\n      });\r\n    }\r\n    fetchItems();\r\n  }\r\n  function toggleActive(activeStatus,itemToUpdate) {\r\n    if (itemToUpdate !== \"\") {\r\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\r\n      updateDoc(docToUpdate, {\r\n        active: activeStatus,\r\n      });\r\n    }\r\n    fetchItems();\r\n  }\r\n\r\n  function deleteItem(itemToDelete) {\r\n    console.log(\"To be Deleted \" + itemToDelete);\r\n    if (itemToDelete !== \"\") {\r\n      console.log(\"Deleting\");\r\n      const docToDelete = doc(db, \"currentShows\", itemToDelete);\r\n      deleteDoc(docToDelete).then(() => {\r\n        console.log(\"It supposed to be deleted\");\r\n      });\r\n      fetchItems();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"category\" >\r\n      <br />\r\n      <br />\r\n\r\n      <form className=\"post-component\">\r\n        <label>Show Name</label>\r\n        <input\r\n          rows=\"10\"\r\n          cols=\"70\"\r\n          value={show}\r\n          onChange={(e) => setShow(e.target.value)}\r\n          type=\"text\"\r\n          name=\"show\"\r\n          required\r\n        />\r\n        <br />\r\n        <label>Current Season</label>\r\n        <input \r\n        value={currentSeason}\r\n        onChange={(e)=>setcurrentSeason(e.target.value)}\r\n        type=\"text\"\r\n        name=\"currentSeason\"/>\r\n\r\n        <button className=\"add-post\" onClick={addItem}>Add show</button>\r\n      </form>\r\n\r\n      <div>\r\n        {\" \"}\r\n        <h2>Show List</h2>\r\n      \r\n        <div className=\" item-grid\">\r\n          {dataBaseItems.map((database, id) => (\r\n            <div className={updating ? \"insertedItem-tall\" : \"insertedItem-short\"} key={database.id}>\r\n              <p> {database.show}</p>Added by: <i>{database.author}</i>\r\n              <br /><br/>\r\n              <div className=\"active-buttons-container\">\r\n              <div \r\n                onClick={() => {\r\n                  toggleActive(!database.active,database.id);\r\n                }}\r\n              >\r\n                {database.active ? (\r\n                  <button className=\"activeStyleProgress\">In Progress</button>\r\n                ) : (\r\n                  <button className=\"inactiveStyleProgress\">Not In Progress</button>\r\n                )}\r\n              </div>\r\n              <div\r\n                onClick={() => {\r\n                  toggleCompletetionStatus(!database.completed,database.id);\r\n                }}\r\n              >\r\n                {database.completed ? (\r\n                  <button className=\"activeStyle\">Completed</button>\r\n                ) : (\r\n                  <button className=\"inactiveStyle\">Not Completed</button>\r\n                )}\r\n              </div>\r\n              </div>\r\n              {updating ? (\r\n                <div>\r\n                  {\" \"}\r\n                  <p>Change show to:</p>\r\n                  <input\r\n                    value={editedEntry}\r\n                    onChange={(e) => setEditedEntry(e.target.value)}\r\n                  />{\" \"}\r\n                  <button\r\n                    onClick={(e) => {\r\n                      updateItem(database.id);\r\n                    }}\r\n                  >\r\n                    Save\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n              <br />\r\n              <button\r\n                className=\"edit\"\r\n                onClick={(e) => {\r\n                  setUpdating(true);\r\n                }}\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                className=\"delete\"\r\n                onClick={(e) => {\r\n                  deleteItem(database.id);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
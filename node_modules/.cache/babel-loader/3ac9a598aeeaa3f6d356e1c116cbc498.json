{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\18083\\\\Documents\\\\GitHub\\\\delaine-organizer-app\\\\src\\\\ShowsToWatch.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { updateDoc, getFirestore, collection, getDocs, deleteDoc, addDoc, doc } from \"firebase/firestore\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowsToWatch() {\n  _s();\n\n  const db = getFirestore();\n  const currentUser = useAuth();\n  const colRef = collection(db, \"currentShows\");\n  const [activeStatus, setActiveStatus] = useState(false);\n  const [show, setShow] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n  const [itemToUpdate, setItemToUpdate] = useState(\"\");\n  const [updating, setUpdating] = useState(false);\n  const [editedEntry, setEditedEntry] = useState(\"\");\n\n  function addItem(e) {\n    e.preventDefault();\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser === null || currentUser === void 0 ? void 0 : currentUser.email,\n      show: show,\n      active: false\n    });\n    setShow(\"\");\n    fetchItems();\n  }\n\n  function fetchItems() {\n    getDocs(colRef).then(snapshot => {\n      const items = snapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      }));\n      console.log(items);\n      setDatabaseItems(items);\n    });\n  }\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  function updateItem(e) {\n    console.log(\"To be UPDATED \" + itemToUpdate);\n\n    if (itemToUpdate !== \"\") {\n      console.log(\"Updating\");\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        show: editedEntry\n      }).then(() => {\n        console.log(\"It supposed to be updated\");\n      });\n      setUpdating(false);\n      fetchItems();\n    }\n  }\n\n  function toggleDone(activeStatus, itemToUpdate) {\n    if (itemToUpdate !== \"\") {\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\n      updateDoc(docToUpdate, {\n        active: activeStatus\n      });\n    }\n\n    fetchItems();\n  }\n\n  function deleteItem(e) {\n    console.log(\"To be Deleted \" + itemToDelete);\n\n    if (itemToDelete !== \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"currentShows\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchItems();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        rows: \"10\",\n        cols: \"70\",\n        value: show,\n        onChange: e => setShow(e.target.value),\n        type: \"text\",\n        name: \"show\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addItem,\n        children: \"Add show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Show List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), \"for some reason you have to press the Active/inactive button 2 times before it updates, idk why yet\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: dataBaseItems.map((database, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"insertedItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"date\",\n            children: database.displayDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", database.show]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), \"Added by: \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: database.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              toggleDone(!database.active, database.id);\n            },\n            children: database.active ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"activeStyle\",\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"inactiveStyle\",\n              children: \"Not In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), updating ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Change show to:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: editedEntry,\n              onChange: e => setEditedEntry(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                updateItem();\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              setItemToUpdate(database.id);\n              setUpdating(true);\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: e => {\n              setItemToDelete(database.id);\n              deleteItem();\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, database.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShowsToWatch, \"WTu3Oj8bz88dO62NhmbXl3nyBF4=\", false, function () {\n  return [useAuth];\n});\n\n_c = ShowsToWatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowsToWatch\");","map":{"version":3,"sources":["C:/Users/18083/Documents/GitHub/delaine-organizer-app/src/ShowsToWatch.js"],"names":["useState","useEffect","updateDoc","getFirestore","collection","getDocs","deleteDoc","addDoc","doc","useAuth","theDate","ShowsToWatch","db","currentUser","colRef","activeStatus","setActiveStatus","show","setShow","itemToDelete","setItemToDelete","dataBaseItems","setDatabaseItems","itemToUpdate","setItemToUpdate","updating","setUpdating","editedEntry","setEditedEntry","addItem","e","preventDefault","date","Date","displayDate","author","email","active","fetchItems","then","snapshot","items","docs","map","data","id","console","log","updateItem","docToUpdate","toggleDone","deleteItem","docToDelete","target","value","database"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {\r\n  updateDoc,\r\n  getFirestore,\r\n  collection,\r\n  getDocs,\r\n  deleteDoc,\r\n  addDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { useAuth } from \"./firebase\";\r\nimport { theDate } from \"./Utilities/theDate\";\r\n\r\nexport default function ShowsToWatch() {\r\n  const db = getFirestore();\r\n\r\n  const currentUser = useAuth();\r\n\r\n  const colRef = collection(db, \"currentShows\");\r\n\r\n  const [activeStatus, setActiveStatus] = useState(false);\r\n  const [show, setShow] = useState(\"\");\r\n  const [itemToDelete, setItemToDelete] = useState(\"\");\r\n  const [dataBaseItems, setDatabaseItems] = useState([]);\r\n  const [itemToUpdate, setItemToUpdate] = useState(\"\");\r\n  const [updating, setUpdating] = useState(false);\r\n  const [editedEntry, setEditedEntry] = useState(\"\");\r\n\r\n  function addItem(e) {\r\n    e.preventDefault();\r\n\r\n    addDoc(colRef, {\r\n      date: new Date(),\r\n      displayDate: theDate,\r\n      author: currentUser?.email,\r\n      show: show,\r\n      active: false,\r\n    });\r\n    setShow(\"\");\r\n    fetchItems();\r\n  }\r\n\r\n  function fetchItems() {\r\n    getDocs(colRef).then((snapshot) => {\r\n      const items = snapshot.docs.map((doc) => ({\r\n        ...doc.data(),\r\n        id: doc.id,\r\n      }));\r\n      console.log(items);\r\n      setDatabaseItems(items);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    fetchItems();\r\n  }, []);\r\n\r\n  function updateItem(e) {\r\n    console.log(\"To be UPDATED \" + itemToUpdate);\r\n    if (itemToUpdate !== \"\") {\r\n      console.log(\"Updating\");\r\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\r\n      updateDoc(docToUpdate, {\r\n        show: editedEntry,\r\n      }).then(() => {\r\n        console.log(\"It supposed to be updated\");\r\n      });\r\n      setUpdating(false);\r\n\r\n      fetchItems();\r\n    }\r\n  }\r\n\r\n  function toggleDone(activeStatus,itemToUpdate) {\r\n    if (itemToUpdate !== \"\") {\r\n      const docToUpdate = doc(db, \"currentShows\", itemToUpdate);\r\n      updateDoc(docToUpdate, {\r\n        active: activeStatus,\r\n      });\r\n    }\r\n    fetchItems();\r\n  }\r\n\r\n  function deleteItem(e) {\r\n    console.log(\"To be Deleted \" + itemToDelete);\r\n    if (itemToDelete !== \"\") {\r\n      console.log(\"Deleting\");\r\n      const docToDelete = doc(db, \"currentShows\", itemToDelete);\r\n      deleteDoc(docToDelete).then(() => {\r\n        console.log(\"It supposed to be deleted\");\r\n      });\r\n      fetchItems();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"post-component\">\r\n      <br />\r\n      <br />\r\n\r\n      <form className=\"add\">\r\n        <input\r\n          rows=\"10\"\r\n          cols=\"70\"\r\n          value={show}\r\n          onChange={(e) => setShow(e.target.value)}\r\n          type=\"text\"\r\n          name=\"show\"\r\n          required\r\n        />\r\n        <br />\r\n        <button onClick={addItem}>Add show</button>\r\n      </form>\r\n\r\n      <div>\r\n        {\" \"}\r\n        <h2>Show List</h2>\r\n        for some reason you have to press the Active/inactive button 2 times\r\n        before it updates, idk why yet\r\n        <div>\r\n          {dataBaseItems.map((database, id) => (\r\n            <div className=\"insertedItem\" key={database.id}>\r\n              <p className=\"date\">{database.displayDate}</p>\r\n              <p> {database.show}</p>Added by: <i>{database.author}</i>\r\n              <br />\r\n              <div\r\n                onClick={() => {\r\n                  toggleDone(!database.active,database.id);\r\n                }}\r\n              >\r\n                {database.active ? (\r\n                  <button className=\"activeStyle\">In Progress</button>\r\n                ) : (\r\n                  <button className=\"inactiveStyle\">Not In Progress</button>\r\n                )}\r\n              </div>\r\n              {updating ? (\r\n                <div>\r\n                  {\" \"}\r\n                  <p>Change show to:</p>\r\n                  <input\r\n                    value={editedEntry}\r\n                    onChange={(e) => setEditedEntry(e.target.value)}\r\n                  />{\" \"}\r\n                  <button\r\n                    onClick={(e) => {\r\n                      updateItem();\r\n                    }}\r\n                  >\r\n                    Save\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n              <br />\r\n              <button\r\n                onClick={(e) => {\r\n                  setItemToUpdate(database.id);\r\n                  setUpdating(true);\r\n                }}\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                className=\"delete\"\r\n                onClick={(e) => {\r\n                  setItemToDelete(database.id);\r\n                  deleteItem();\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
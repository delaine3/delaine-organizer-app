{"ast":null,"code":"var _jsxFileName = \"/Users/delaine/Documents/GitHub/Untitled/src/LoggedIn.js\",\n    _s = $RefreshSig$();\n\nimport { createElement, useState, useEffect } from \"react\";\nimport { getFirestore, collection, getDocs, deleteDoc, addDoc, doc } from \"firebase/firestore\";\nimport { useSelector } from \"react-redux\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FieldValue = require(\"firebase-admin\").firestore.FieldValue;\n\nexport default function LoggedIn() {\n  _s();\n\n  const db = getFirestore();\n  const loginReducer = useSelector(state => state.loginReducer);\n  const {\n    loginStatus\n  } = loginReducer;\n  const currentUser = useAuth();\n  const colRef = collection(db, \"posts\");\n  const [author, setAuthor] = useState(\"\");\n  const [post, setPost] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n\n  function addPost(e) {\n    e.preventDefault();\n    addDoc(colRef, {\n      date: theDate,\n      author: currentUser === null || currentUser === void 0 ? void 0 : currentUser.email,\n      post: post,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n  }\n\n  function fetchPosts() {\n    getDocs(colRef).then(snapshot => {\n      const items = snapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      }));\n      console.log(items);\n      setDatabaseItems(items);\n    });\n  }\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  function deletePost(e) {\n    console.log(\"To be Deleted \" + itemToDelete); // const docToDelete = doc(db, \"posts\", itemToDelete);\n    //deleteDoc(docToDelete);\n    // myDb.collection(\"posts\").doc(itemToDelete).delete();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Hey: \", currentUser === null || currentUser === void 0 ? void 0 : currentUser.email, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"post\",\n        children: \"Post:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: post,\n        onChange: e => setPost(e.target.value),\n        type: \"text\",\n        name: \"post\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPost,\n        children: \" Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"postlist\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Post List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: dataBaseItems.map((database, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"date\",\n            children: database.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", database.post, \" -\", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: database.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 34\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              setItemToDelete(database.id);\n              deletePost();\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, database.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoggedIn, \"47hKC5oDKVsqCYXKDpsVbhbJOgo=\", false, function () {\n  return [useSelector, useAuth];\n});\n\n_c = LoggedIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggedIn\");","map":{"version":3,"sources":["/Users/delaine/Documents/GitHub/Untitled/src/LoggedIn.js"],"names":["createElement","useState","useEffect","getFirestore","collection","getDocs","deleteDoc","addDoc","doc","useSelector","useAuth","theDate","FieldValue","require","firestore","LoggedIn","db","loginReducer","state","loginStatus","currentUser","colRef","author","setAuthor","post","setPost","itemToDelete","setItemToDelete","dataBaseItems","setDatabaseItems","addPost","e","preventDefault","date","email","timestamp","firebase","serverTimestamp","fetchPosts","then","snapshot","items","docs","map","data","id","console","log","deletePost","target","value","database"],"mappings":"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","sourcesContent":["import { createElement, useState, useEffect } from \"react\";\nimport {\n  getFirestore,\n  collection,\n  getDocs,\n  deleteDoc,\n  addDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { useSelector } from \"react-redux\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\nconst FieldValue = require(\"firebase-admin\").firestore.FieldValue;\n\nexport default function LoggedIn() {\n  const db = getFirestore();\n\n  const loginReducer = useSelector((state) => state.loginReducer);\n  const { loginStatus } = loginReducer;\n  const currentUser = useAuth();\n\n  const colRef = collection(db, \"posts\");\n\n  const [author, setAuthor] = useState(\"\");\n  const [post, setPost] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n\n  function addPost(e) {\n    e.preventDefault();\n\n    addDoc(colRef, {\n      date: theDate,\n      author: currentUser?.email,\n      post: post,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n  }\n\n  function fetchPosts() {\n    getDocs(colRef).then((snapshot) => {\n      const items = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      console.log(items);\n\n      setDatabaseItems(items);\n    });\n  }\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  function deletePost(e) {\n    console.log(\"To be Deleted \" + itemToDelete);\n    // const docToDelete = doc(db, \"posts\", itemToDelete);\n    //deleteDoc(docToDelete);\n    // myDb.collection(\"posts\").doc(itemToDelete).delete();\n  }\n  return (\n    <div>\n      <br />\n      <br />\n      <div>Hey: {currentUser?.email} </div>\n\n      <form className=\"add\">\n        <label htmlFor=\"post\">Post:</label>\n        <input\n          value={post}\n          onChange={(e) => setPost(e.target.value)}\n          type=\"text\"\n          name=\"post\"\n          required\n        />\n        <button onClick={addPost}> Post</button>\n      </form>\n\n      <div id=\"postlist\">\n        {\" \"}\n        <h2>Post List</h2>\n        <div>\n          {dataBaseItems.map((database, id) => (\n            <div className=\"post\" key={database.id}>\n              <p className=\"date\">{database.date}</p>\n              <p>\n                {\" \"}\n                {database.post} -<i>{database.author}</i>{\" \"}\n              </p>\n              <button\n                onClick={(e) => {\n                  setItemToDelete(database.id);\n                  deletePost();\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/delaine/Documents/GitHub/Untitled/src/CurrentSubScriptions.js\",\n    _s = $RefreshSig$();\n\nimport { createElement, useState, useEffect } from \"react\";\nimport { FieldValue, getFirestore, collection, getDocs, deleteDoc, addDoc, doc } from \"firebase/firestore\";\nimport { useSelector } from \"react-redux\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CurrentSubScriptions() {\n  _s();\n\n  const db = getFirestore();\n  const loginReducer = useSelector(state => state.loginReducer);\n  const {\n    loginStatus\n  } = loginReducer;\n  const currentUser = useAuth();\n  const colRef = collection(db, \"currentSubscriptions\");\n  const [author, setAuthor] = useState(\"\");\n  const [subscription, setSubscription] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n\n  function addSubscription(e) {\n    e.preventDefault();\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser === null || currentUser === void 0 ? void 0 : currentUser.email,\n      subscription: subscription\n    });\n    setSubscription(\"\");\n    fetchSubscriptions();\n  }\n\n  function fetchSubscriptions() {\n    getDocs(colRef).then(snapshot => {\n      const items = snapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      }));\n      console.log(items);\n      setDatabaseItems(items);\n      dataBaseItems.sort((a, b) => b.joinDate < a.joinDate ? 1 : -1);\n    });\n  }\n\n  useEffect(() => {\n    fetchSubscriptions();\n  }, []);\n\n  function deleteSubscription(e) {\n    console.log(\"To be Deleted \" + itemToDelete);\n\n    if (itemToDelete != \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"subscriptions\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchSubscriptions();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"subscriptionlist\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"10\",\n        cols: \"70\",\n        value: subscription,\n        onChange: e => setSubscription(e.target.value),\n        type: \"text\",\n        name: \"subscription\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addSubscription,\n        children: \" Subscription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Subscription List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: dataBaseItems.map((database, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"insertedItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"date\",\n            children: database.displayDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", database.subscription, \" -\", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: database.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 42\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              setItemToDelete(database.id);\n              deleteSubscription();\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, database.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrentSubScriptions, \"CJvrlaVZJQkwz4+X0RAwF2VfjzA=\", false, function () {\n  return [useSelector, useAuth];\n});\n\n_c = CurrentSubScriptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentSubScriptions\");","map":{"version":3,"sources":["/Users/delaine/Documents/GitHub/Untitled/src/CurrentSubScriptions.js"],"names":["createElement","useState","useEffect","FieldValue","getFirestore","collection","getDocs","deleteDoc","addDoc","doc","useSelector","useAuth","theDate","CurrentSubScriptions","db","loginReducer","state","loginStatus","currentUser","colRef","author","setAuthor","subscription","setSubscription","itemToDelete","setItemToDelete","dataBaseItems","setDatabaseItems","addSubscription","e","preventDefault","date","Date","displayDate","email","fetchSubscriptions","then","snapshot","items","docs","map","data","id","console","log","sort","a","b","joinDate","deleteSubscription","docToDelete","target","value","database"],"mappings":"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","sourcesContent":["import { createElement, useState, useEffect } from \"react\";\nimport {\n  FieldValue,\n  getFirestore,\n  collection,\n  getDocs,\n  deleteDoc,\n  addDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { useSelector } from \"react-redux\";\nimport { useAuth } from \"./firebase\";\nimport { theDate } from \"./Utilities/theDate\";\n\nexport default function CurrentSubScriptions() {\n  const db = getFirestore();\n\n  const loginReducer = useSelector((state) => state.loginReducer);\n  const { loginStatus } = loginReducer;\n  const currentUser = useAuth();\n\n  const colRef = collection(db, \"currentSubscriptions\");\n\n  const [author, setAuthor] = useState(\"\");\n  const [subscription, setSubscription] = useState(\"\");\n  const [itemToDelete, setItemToDelete] = useState(\"\");\n  const [dataBaseItems, setDatabaseItems] = useState([]);\n\n  function addSubscription(e) {\n    e.preventDefault();\n\n    addDoc(colRef, {\n      date: new Date(),\n      displayDate: theDate,\n      author: currentUser?.email,\n      subscription: subscription,\n    });\n    setSubscription(\"\");\n    fetchSubscriptions();\n  }\n\n  function fetchSubscriptions() {\n    getDocs(colRef).then((snapshot) => {\n      const items = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      console.log(items);\n\n      setDatabaseItems(items);\n      dataBaseItems.sort((a, b) => (b.joinDate < a.joinDate ? 1 : -1));\n    });\n  }\n  useEffect(() => {\n    fetchSubscriptions();\n  }, []);\n\n  function deleteSubscription(e) {\n    console.log(\"To be Deleted \" + itemToDelete);\n    if (itemToDelete != \"\") {\n      console.log(\"Deleting\");\n      const docToDelete = doc(db, \"subscriptions\", itemToDelete);\n      deleteDoc(docToDelete).then(() => {\n        console.log(\"It supposed to be deleted\");\n      });\n      fetchSubscriptions();\n    }\n  }\n  return (\n    <div id=\"subscriptionlist\">\n      <br />\n      <br />\n\n      <form className=\"add\">\n        <textarea\n          rows=\"10\"\n          cols=\"70\"\n          value={subscription}\n          onChange={(e) => setSubscription(e.target.value)}\n          type=\"text\"\n          name=\"subscription\"\n          required\n        />\n        <br />\n        <button onClick={addSubscription}> Subscription</button>\n      </form>\n\n      <div>\n        {\" \"}\n        <h2>Subscription List</h2>\n        <div>\n          {dataBaseItems.map((database, id) => (\n            <div className=\"insertedItem\" key={database.id}>\n              <p className=\"date\">{database.displayDate}</p>\n              <p>\n                {\" \"}\n                {database.subscription} -<i>{database.author}</i>{\" \"}\n              </p>\n              <button\n                onClick={(e) => {\n                  setItemToDelete(database.id);\n                  deleteSubscription();\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}